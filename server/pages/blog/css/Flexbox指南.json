{"pageProps":{"data":{"date":"April 12, 2018","title":"Flexbox指南","tags":["css"],"description":"Flexible Box 模型，通常被称为 flexbox，是一种一维的布局模型。它给 flexbox 的子元素之间提供了强大的空间分布和对齐能力。","fromNow":"4 years ago"},"content":{"compiledSource":"var x=Object.defineProperty,f=Object.defineProperties;var c=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,t=Object.prototype.propertyIsEnumerable;var o=(e,a,p)=>a in e?x(e,a,{enumerable:!0,configurable:!0,writable:!0,value:p}):e[a]=p,l=(e,a)=>{for(var p in a||(a={}))r.call(a,p)&&o(e,p,a[p]);if(n)for(var p of n(a))t.call(a,p)&&o(e,p,a[p]);return e},m=(e,a)=>f(e,c(a));var s=(e,a)=>{var p={};for(var i in e)r.call(e,i)&&a.indexOf(i)<0&&(p[i]=e[i]);if(e!=null&&n)for(var i of n(e))a.indexOf(i)<0&&t.call(e,i)&&(p[i]=e[i]);return p};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(p){var i=p,{components:e}=i,a=s(i,[\"components\"]);return mdx(MDXLayout,m(l(l({},layoutProps),a),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"img\",l({parentName:\"p\"},{src:\"https://cdn.jsdelivr.net/gh/funnypan/pics@master/20181016105026.png\",alt:\"Flexbox\"}))),mdx(\"p\",null,\"Flexible Box \\u6A21\\u578B\\uFF0C\\u901A\\u5E38\\u88AB\\u79F0\\u4E3A flexbox\\uFF0C\\u662F\\u4E00\\u79CD\\u4E00\\u7EF4\\u7684\\u5E03\\u5C40\\u6A21\\u578B\\u3002\\u5B83\\u7ED9 flexbox \\u7684\\u5B50\\u5143\\u7D20\\u4E4B\\u95F4\\u63D0\\u4F9B\\u4E86\\u5F3A\\u5927\\u7684\\u7A7A\\u95F4\\u5206\\u5E03\\u548C\\u5BF9\\u9F50\\u80FD\\u529B\\u3002\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"\\u57FA\\u672C\\u4ECB\\u7ECD\"),mdx(\"li\",{parentName:\"ul\"},\"\\u6D4F\\u89C8\\u5668\\u517C\\u5BB9\\u6027\"),mdx(\"li\",{parentName:\"ul\"},\"\\u542F\\u7528 Flexbox\"),mdx(\"li\",{parentName:\"ul\"},\"\\u5BB9\\u5668\\u5C5E\\u6027\",mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},\"\\u884C||\\u5217 \\u5BF9\\u9F50 ==row and columns==\"),mdx(\"li\",{parentName:\"ul\"},\"\\u6C34\\u5E73||\\u5782\\u76F4 \\u5BF9\\u9F50 ==Vertical and horizontal==\"),mdx(\"li\",{parentName:\"ul\"},\"\\u66F4\\u6539\\u6C34\\u5E73\\u5BF9\\u9F50 ==change horizontal alignment==\"),mdx(\"li\",{parentName:\"ul\"},\"\\u66F4\\u6539\\u5782\\u76F4\\u5BF9\\u9F50 ==change vertical alignment==\",mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},\"\\u5173\\u4E8E\\u57FA\\u51C6\\u7EBF ==about baseline==\"))),mdx(\"li\",{parentName:\"ul\"},\"\\u6362\\u884C ==wrap==\"))),mdx(\"li\",{parentName:\"ul\"},\"flex \\u5143\\u7D20\\u4E0A\\u7684\\u5C5E\\u6027\",mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},\"order\"),mdx(\"li\",{parentName:\"ul\"},\"align-self\"),mdx(\"li\",{parentName:\"ul\"},\"flex-grow\"),mdx(\"li\",{parentName:\"ul\"},\"flex-shrink\"),mdx(\"li\",{parentName:\"ul\"},\"flex-basis\"),mdx(\"li\",{parentName:\"ul\"},\"flex\")))),mdx(\"h3\",null,\"\\u4ECB\\u7ECD\"),mdx(\"p\",null,\"Flexbox\\uFF0C\\u4E5F\\u79F0\\u4E3A\\u7075\\u6D3B\\u76D2\\u6A21\\u5757\\uFF0C\\u662F\\u4E24\\u4E2A\\u73B0\\u4EE3\\u5E03\\u5C40\\u7CFB\\u7EDF\\u4E4B\\u4E00\\uFF0C\\u8FD8\\u6709 CSS Grid\\u3002\\u4E0E CSS Grid\\uFF08\\u4E8C\\u7EF4\\uFF09\\u76F8\\u6BD4\\uFF0Cflexbox \\u662F\\u4E00\\u7EF4\\u5E03\\u5C40\\u6A21\\u578B\\u3002\\u5B83\\u5C06\\u57FA\\u4E8E\\u884C\\u6216\\u5217\\u63A7\\u5236\\u5E03\\u5C40\\uFF0C\\u4F46\\u4E0D\\u80FD\\u540C\\u65F6\\u63A7\\u5236\\u5E03\\u5C40\\u3002flexbox \\u7684\\u4E3B\\u8981\\u76EE\\u6807\\u662F\\u5141\\u8BB8\\u9879\\u76EE\\u586B\\u5145\\u5176\\u5BB9\\u5668\\u63D0\\u4F9B\\u7684\\u6574\\u4E2A\\u7A7A\\u95F4\\uFF0C\\u5177\\u4F53\\u53D6\\u51B3\\u4E8E\\u60A8\\u8BBE\\u7F6E\\u7684\\u4E00\\u4E9B\\u89C4\\u5219\\u3002Flexbox \\u4E0D\\u517C\\u5BB9 IE10 \\u4EE5\\u4E0B\\uFF0CIE10 \\u4EE5\\u4E0B\\u53EF\\u4EE5\\u4F7F\\u7528\\u5982\\u4E0B\\u65B9\\u5F0F\\uFF1A\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Table layouts\"),mdx(\"li\",{parentName:\"ul\"},\"Floats\"),mdx(\"li\",{parentName:\"ul\"},\"clearfix hacks\"),mdx(\"li\",{parentName:\"ul\"},\"display: table hacks\")),mdx(\"h3\",null,\"\\u517C\\u5BB9\\u6027\"),mdx(\"p\",null,mdx(\"img\",l({parentName:\"p\"},{src:\"https://cdn.jsdelivr.net/gh/funnypan/pics@master/20181020205051.png\",alt:\"image\"}))),mdx(\"p\",null,\"IE10 \\u4EE5\\u4E0B\\u4E0D\\u517C\\u5BB9\\uFF0C\\u4E00\\u4E9B\\u6D4F\\u89C8\\u5668\\u9700\\u8981\\u4F7F\\u7528-webkit \\u6216\\u8005 display:-webkit-box \\u517C\\u5BB9\\u5904\\u7406\\u3002\"),mdx(\"h3\",null,\"\\u4F7F\\u7528 flexbox\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-css\"}),`display: flexbox;\n`)),mdx(\"p\",null,\"\\u6216\\u8005\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-css\"}),`display: inline-flexbox;\n`)),mdx(\"h3\",null,\"\\u5BB9\\u5668\\u5C5E\\u6027\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"flex-direction\"),mdx(\"li\",{parentName:\"ul\"},\"justify-content\"),mdx(\"li\",{parentName:\"ul\"},\"align-items\"),mdx(\"li\",{parentName:\"ul\"},\"flex-wrap\"),mdx(\"li\",{parentName:\"ul\"},\"flex-flow\")),mdx(\"h3\",null,\"\\u884C\\u5BF9\\u9F50\\u6216\\u8005\\u5217\\u5BF9\\u9F50\"),mdx(\"p\",null,\"flex-direction \\u51B3\\u5B9A\\u5BB9\\u5668\\u4EE5\\u884C\\u5BF9\\u9F50\\u8FD8\\u662F\\u5217\\u5BF9\\u9F50\\u3002\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"flex-direction:row\\uFF0C\\u884C\\u5BF9\\u9F50\\uFF0C\\u4ECE\\u5DE6\\u5230\\u53F3\"),mdx(\"li\",{parentName:\"ul\"},\"flex-direction:row-reverse\\uFF0C\\u884C\\u5BF9\\u9F50\\uFF0C\\u4ECE\\u53F3\\u5230\\u5DE6\"),mdx(\"li\",{parentName:\"ul\"},\"flex-direction:column\\uFF0C\\u5217\\u5BF9\\u9F50\\uFF0C\\u4ECE\\u4E0A\\u5230\\u4E0B\"),mdx(\"li\",{parentName:\"ul\"},\"flex-direction:column-reverse\\uFF0C\\u5217\\u5BF9\\u9F50\\uFF0C\\u4ECE\\u4E0B\\u5230\\u4E0A\")),mdx(\"p\",null,\"\\u5982\\u4E0B\\u56FE\\u6240\\u793A\\uFF1A\"),mdx(\"p\",null,mdx(\"img\",l({parentName:\"p\"},{src:\"https://cdn.jsdelivr.net/gh/funnypan/pics@master/20181020205713.png\",alt:\"image\"}))),mdx(\"h3\",null,\"\\u6C34\\u5E73\\u5BF9\\u9F50\\u6216\\u8005\\u5782\\u76F4\\u5BF9\\u9F50\"),mdx(\"p\",null,\"flex-direction \\u9ED8\\u8BA4\\u662F row\\uFF0C\\u4ECE\\u5DE6\\u5411\\u53F3\\uFF0C\\u5F53\\u5176\\u5C5E\\u6027\\u503C\\u4E3A column \\u65F6\\uFF0C\\u662F\\u4ECE\\u4E0A\\u5230\\u4E0B\\uFF0C\\u53EF\\u4EE5\\u4F7F\\u7528 justify-content \\u548C align-items \\u6539\\u53D8\\u6C34\\u5E73\\u548C\\u5782\\u76F4\\u5BF9\\u9F50\\u3002\"),mdx(\"p\",null,mdx(\"img\",l({parentName:\"p\"},{src:\"https://cdn.jsdelivr.net/gh/funnypan/pics@master/20181022100130.png\",alt:\"image\"}))),mdx(\"h3\",null,\"\\u6539\\u53D8\\u6C34\\u5E73\\u5BF9\\u9F50\\u65B9\\u5F0F\"),mdx(\"p\",null,\"justify-content \\u6709 5 \\u4E2A\\u5C5E\\u6027\\u503C\\uFF1A\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"flex-start \\u5DE6\\u5BF9\\u9F50\"),mdx(\"li\",{parentName:\"ol\"},\"flex-end \\u53F3\\u5BF9\\u9F50\"),mdx(\"li\",{parentName:\"ol\"},\"center \\u5C45\\u4E2D\\u5BF9\\u9F50\"),mdx(\"li\",{parentName:\"ol\"},\"space-between \\u9996\\u5C3E\\u5BF9\\u9F50\\u5BB9\\u5668\\u5DE6\\u53F3\\u4FA7\\uFF0C\\u4E2D\\u95F4\\u95F4\\u8DDD\\u76F8\\u7B49\"),mdx(\"li\",{parentName:\"ol\"},\"space-around \\u6BCF\\u4E2A\\u5143\\u7D20\\u7684\\u95F4\\u8DDD\\u76F8\\u7B49\")),mdx(\"p\",null,mdx(\"img\",l({parentName:\"p\"},{src:\"https://cdn.jsdelivr.net/gh/funnypan/pics@master/20181022100921.png\",alt:\"image\"}))),mdx(\"h3\",null,\"\\u6539\\u53D8\\u5782\\u76F4\\u5BF9\\u9F50\\u65B9\\u5F0F\"),mdx(\"p\",null,\"align-items \\u6709 5 \\u4E2A\\u5C5E\\u6027\\u503C\\uFF1A\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"flex-start \\u9876\\u90E8\\u5BF9\\u9F50\"),mdx(\"li\",{parentName:\"ol\"},\"flex-end \\u5E95\\u90E8\\u5BF9\\u9F50\"),mdx(\"li\",{parentName:\"ol\"},\"center \\u5C45\\u4E2D\\u5BF9\\u9F50\"),mdx(\"li\",{parentName:\"ol\"},\"baseline \\u57FA\\u7EBF\\u5BF9\\u9F50\"),mdx(\"li\",{parentName:\"ol\"},\"stretch \\u62C9\\u4F38\\u4EE5\\u9002\\u5E94\\u5BB9\\u5668\")),mdx(\"p\",null,mdx(\"img\",l({parentName:\"p\"},{src:\"https://cdn.jsdelivr.net/gh/funnypan/pics@master/images/20181022141409.png\",alt:\"image\"}))),mdx(\"p\",null,\"\\u5173\\u4E8E align-items:baseline\\uFF0C\\u53EF\\u4EE5\\u770B\\u770B codepen\\uFF1A\",mdx(\"a\",l({parentName:\"p\"},{href:\"https://codepen.io/flaviocopes/pen/oExoJR\"}),\"https://codepen.io/flaviocopes/pen/oExoJR\")),mdx(\"h3\",null,\"\\u6362\\u884C\"),mdx(\"p\",null,\"\\u9ED8\\u8BA4\\u60C5\\u51B5\\u4E0B\\uFF0Cflexbox \\u5BB9\\u5668\\u4E2D\\u7684\\u9879\\u76EE\\u4FDD\\u7559\\u5728\\u4E00\\u884C\\u4E2D\\uFF0C\\u7F29\\u5C0F\\u5B83\\u4EEC\\u4EE5\\u9002\\u5408\\u5BB9\\u5668\\u3002\"),mdx(\"p\",null,\"\\u53EF\\u4EE5\\u4F7F\\u7528 flex-wrap:wrap \\u6216\\u8005 flex-wrap:wrap-reverse \\u5BF9\\u5BB9\\u5668\\u4E2D\\u7684\\u5143\\u7D20\\u8FDB\\u884C\\u6362\\u884C\\u5904\\u7406\\u3002\"),mdx(\"p\",null,\"\\u4E00\\u79CD\\u7B80\\u5199\\u65B9\\u5F0F\\uFF1Aflex-flow:row wrap;\\u5373 flex-direction:row && flex-wrap:wrap\"),mdx(\"h3\",null,\"\\u9002\\u7528\\u4E8E flexbox \\u5BB9\\u5668\\u5185\\u6BCF\\u4E2A\\u5143\\u7D20\\u7684\\u5C5E\\u6027\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"order\"),mdx(\"li\",{parentName:\"ol\"},\"align-self\"),mdx(\"li\",{parentName:\"ol\"},\"flex-grow\"),mdx(\"li\",{parentName:\"ol\"},\"flex-shrink\"),mdx(\"li\",{parentName:\"ol\"},\"flex-basis\"),mdx(\"li\",{parentName:\"ol\"},\"flex\")),mdx(\"h4\",null,\"order-\\u6539\\u53D8\\u5143\\u7D20\\u7684\\u987A\\u5E8F\\uFF0C\\u5982\\u4E0B\\u56FE\\u6240\\u793A\\uFF0C\\u53EF\\u4EE5\\u6307\\u5B9A\\u67D0\\u4E2A\\u5143\\u7D20\\u7684 order \\u503C\\uFF0C\\u4EE5\\u6539\\u53D8\\u5176\\u4F4D\\u7F6E\\uFF0C\\u9ED8\\u8BA4\\u503C\\u4E3A 0\"),mdx(\"p\",null,mdx(\"img\",l({parentName:\"p\"},{src:\"https://cdn.jsdelivr.net/gh/funnypan/pics@master/images/20181022142507.png\",alt:\"image\"}))),mdx(\"h4\",null,\"align-self-\\u5143\\u7D20\\u4F7F\\u7528 align-self \\u8986\\u76D6\\u5BB9\\u5668\\u7684 align-items \\u5BF9\\u5F53\\u524D\\u5143\\u7D20\\u7684\\u5BF9\\u9F50\\u65B9\\u5F0F\"),mdx(\"p\",null,mdx(\"img\",l({parentName:\"p\"},{src:\"https://cdn.jsdelivr.net/gh/funnypan/pics@master/images/20181022142842.png\",alt:\"image\"}))),mdx(\"h4\",null,\"flex-grow || flex-shrink \\u5982\\u6709\\u5FC5\\u8981\\uFF0C\\u53EF\\u4EE5\\u589E\\u52A0\\u6216\\u7F29\\u5C0F\\u67D0\\u4E2A\\u5143\\u7D20\"),mdx(\"p\",null,\"flex-grow\\uFF1A\\u9ED8\\u8BA4\\u503C\\u4E3A 0\\uFF0C\\u5F53\\u67D0\\u4E2A\\u5143\\u7D20 flex-grow \\u4E3A 1\\uFF0C\\u53E6\\u4E00\\u4E2A\\u4E3A 2\\uFF0C\\u5219\\u4E3A flex-grow\\uFF1A2 \\u7684\\u5143\\u7D20\\u5360\\u7528 flex-grow:1 \\u7684\\u7A7A\\u95F4\\u7684 2 \\u500D\\u3002\"),mdx(\"p\",null,\"flex-shrink\\uFF1A\\u9ED8\\u8BA4\\u503C\\u4E3A 1\\uFF0C\\u5982\\u679C\\u6CA1\\u6709\\u663E\\u793A\\u5B9A\\u4E49\\u8BE5\\u5C5E\\u6027\\uFF0C\\u5C06\\u4F1A\\u81EA\\u52A8\\u6309\\u7167\\u9ED8\\u8BA4\\u503C 1 \\u5728\\u6240\\u6709\\u56E0\\u5B50\\u76F8\\u52A0\\u4E4B\\u540E\\u8BA1\\u7B97\\u6BD4\\u7387\\u6765\\u8FDB\\u884C\\u7A7A\\u95F4\\u6536\\u7F29\\u3002\"),mdx(\"p\",null,\"\\u6BD4\\u5982\\uFF1A\\u6709\\u8FD9\\u4E48\\u4E00\\u4E2A\\u5BB9\\u5668\\uFF0Cdiv>.box1\",mdx(\"em\",{parentName:\"p\"},\"3+.box2\"),\"2 \\u7236\\u5BB9\\u5668\\u5B9A\\u4E49\\u5BBD\\u5EA6\\u4E3A 500px\\uFF0C\\u5B50\\u5143\\u7D20\\u5B9A\\u4E49\\u5BBD\\u5EA6\\u4E3A 120px\\uFF0Cbox1 \\u7684 flex-shrink \\u4E3A 1\\uFF0C.box2 \\u7684 flex-shrink \\u4E3A 2\\uFF0C\\u90A3\\u4E48\\u5B50\\u9879\\u76F8\\u52A0\\u4E4B\\u540E\\u5373\\u4E3A 600 px\\uFF0C\\u8D85\\u51FA\\u7236\\u5BB9\\u5668 100px\\u3002\\u90A3\\u4E48\\u8D85\\u51FA\\u7684 100px \\u9700\\u8981\\u88AB A\\u3001B\\u3001C\\u3001D\\u3001E \\u6D88\\u5316 \\u901A\\u8FC7\\u6536\\u7F29\\u56E0\\u5B50\\uFF0C\\u6240\\u4EE5\\u52A0\\u6743\\u7EFC\\u5408\\u53EF\\u5F97 100\",mdx(\"em\",{parentName:\"p\"},\"1+100\"),\"1+100\",mdx(\"em\",{parentName:\"p\"},\"1+100\"),\"2+100\",\"*\",\"2=700px\\u3002\"),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{}),`\\u4E8E\\u662F\\u6211\\u4EEC\\u53EF\\u4EE5\\u8BA1\\u7B97 A\\u3001B\\u3001C\\u3001D\\u3001E \\u5C06\\u88AB\\u79FB\\u9664\\u7684\\u6EA2\\u51FA\\u91CF\\u662F\\u591A\\u5C11\\uFF1A\nA \\u88AB\\u79FB\\u9664\\u6EA2\\u51FA\\u91CF\\uFF1A(100*1/700)*100\\uFF0C\\u5373\\u7EA6\\u7B49\\u4E8E14px\nB \\u88AB\\u79FB\\u9664\\u6EA2\\u51FA\\u91CF\\uFF1A(100*1/700)*100\\uFF0C\\u5373\\u7EA6\\u7B49\\u4E8E14px\nC \\u88AB\\u79FB\\u9664\\u6EA2\\u51FA\\u91CF\\uFF1A(100*1/700)*100\\uFF0C\\u5373\\u7EA6\\u7B49\\u4E8E14px\nD \\u88AB\\u79FB\\u9664\\u6EA2\\u51FA\\u91CF\\uFF1A(100*2/700)*100\\uFF0C\\u5373\\u7EA6\\u7B49\\u4E8E28px\nE \\u88AB\\u79FB\\u9664\\u6EA2\\u51FA\\u91CF\\uFF1A(100*2/700)*100\\uFF0C\\u5373\\u7EA6\\u7B49\\u4E8E28px\n\n\\u6700\\u540EA\\u3001B\\u3001C\\u3001D\\u3001E\\u7684\\u5B9E\\u9645\\u5BBD\\u5EA6\\u5206\\u522B\\u4E3A\\uFF1A120-14=106px, 120-14=106px, 120-14=106px, 120-28=92px,120-28=92px\n`)),mdx(\"h4\",null,\"flex-basis-\\u7528\\u4E8E\\u8BBE\\u7F6E\\u6216\\u68C0\\u7D22\\u5F39\\u6027\\u76D2\\u4F38\\u7F29\\u57FA\\u51C6\\u503C\\uFF0C\\u9ED8\\u8BA4\\u503C\\u4E3A auto\\uFF0C\\u5176\\u4E0E width \\u7684\\u533A\\u522B\\u53EF\\u4EE5\\u53C2\\u8003\\u8FD9\\u7BC7\\u6587\\u7AE0\\uFF1A\",mdx(\"a\",l({parentName:\"h4\"},{href:\"https://www.jianshu.com/p/17b1b445ecd4\"}),\"https://www.jianshu.com/p/17b1b445ecd4\")),mdx(\"h4\",null,\"flex\\uFF1A\\u6709\\u4E09\\u4E2A\\u5C5E\\u6027\\u503C\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"flex-grow\"),mdx(\"li\",{parentName:\"ol\"},\"flex-shrink\"),mdx(\"li\",{parentName:\"ol\"},\"flex-basis\")),mdx(\"pre\",null,mdx(\"code\",l({parentName:\"pre\"},{className:\"language-css\"}),`flex: 0 1 auto \\u5206\\u522B\\u5BF9\\u5E94flex-grow\\u3001flex-shrink\\u3001flex-basis;\n`)),mdx(\"h2\",null,\"\\u7ED3\\u5C3E\"),mdx(\"p\",null,\"\\u53CB\\u60C5\\u732E\\u4E0A\\u5C0F\\u6E38\\u620F\\uFF0C\\u901A\\u8FC7\\u6E38\\u620F\\u5B66\\u4E60 flexbox\"),mdx(\"p\",null,mdx(\"a\",l({parentName:\"p\"},{href:\"http://flexboxfroggy.com/#zh-cn\"}),\"http://flexboxfroggy.com/#zh-cn\")))}MDXContent.isMDXComponent=!0;\n","scope":{"date":"April 12, 2018","title":"Flexbox指南","tags":["css"],"description":"Flexible Box 模型，通常被称为 flexbox，是一种一维的布局模型。它给 flexbox 的子元素之间提供了强大的空间分布和对齐能力。","fromNow":"4 years ago"}},"randomPost":[{"data":{"date":"December 10, 2021","title":"Formatting","tags":["python"],"description":"输出格式化","fromNow":"5 days ago"},"content":"\n当输出数据时，我们希望能够按照一定的格式输出，这个时候就可以使用 format()函数。比如：\n\n```python\n      Name      Shares        Price\n----------  ----------  -----------\n        AA         100        32.20\n       IBM          50        91.10\n       CAT         150        83.44\n      MSFT         200        51.23\n        GE          95        40.37\n      MSFT          50        65.10\n       IBM         100        70.44\n```\n\n## 字符输出格式化\n\n在`python 3.6+`使用`f-strings`格式化字符串，如下：\n\n```python\nname = 'IBM'\nshares = 100\nprice = 91.1\nf'{name:>10s} {shares:>10d} {price:>10.2f}'\n#'       IBM        100      91.10'\n\n# 通常配合 print()函数使用，如下：\nprint(f'{name:>10s} {shares:>10d} {price:>10.2f}')\n```\n\n## 格式化代码\n\n格式代码(在`{}`中`:` 之后)类似于 c `printf ()`。常见代码包括:\n\n```python\nd       # 整数\nb       # 十六进制\nx       # 十六进制\nf       # 浮点数\ne       # 指数\ng       # 指数或浮点数\ns       # 字符串\nc       # 字符\n```\n\n常用的修饰符调整字段宽度和十进制精度。这是一个部分列表:\n\n```python\n:>10d   # 宽度为10，十进制精度无限制\n:<10d   # 宽度为10，十进制精度无限制\n:^10d   # 宽度为10，十进制精度无限制\n:0.2f   # 宽度为无限制，十进制精度为2\n```\n\n## 字典格式化\n\n使用`format_map`函数可以将字典中的键和值对应输出，如下：\n\n```python\ns = {\n    'name': 'IBM',\n    'shares': 100,\n    'price': 91.1\n}\n'{name:>10s} {shares:10d} {price:10.2f}'.format_map(s)\n#'       IBM        100      91.10'\n```\n\n## format()函数\n\n```python\n'{name:>10s} {shares:10d} {price:10.2f}'.format(name='IBM', shares=100, price=91.1)\n#'       IBM        100      91.10'\n'{:10s} {:10d} {:10.2f}'.format('IBM', 100, 91.1)\n#'       IBM        100      91.10'\n```\n\n## C 语言格式化\n\n使用`%`可以格式化字符串，如下：\n\n```python\n'The value is %d' % 3\n#'The value is 3'\n'%5d %-5d %10d' % (3,4,5)\n#'    3 4              5'\n'%0.2f' % (3.1415926,)\n#'3.14'\n```\n","slug":"python/2.3-formatting"},{"data":{"date":"April 1, 2021","title":"基本类型与引用类型","tags":["javascript"],"fromNow":"8 months ago"},"content":"\n在 ECMAScript 中，变量可以存在两种类型的值，即原始值和引用值。\n\n- 原始值：存储在栈（stack）中的简单数据段，也就是说，它们的值直接存储在变量访问的位置。\n- 引用值：存储在堆（heap）中的对象，也就是说，存储在变量处的值是一个指针（point），指向存储对象的内存处。\n\n## 基本类型\n\n- Number：`typeof instance === \"number\"`\n- Boolean：`typeof instance === \"boolean\"`\n- String：`typeof instance === \"string\"`\n- Symbol：`typeof instance === \"symbol\"`\n- Null：`typeof instance === \"object\"`\n- Undefined：`typeof instance === \"undefined\"`\n\n```javascript\nconst number = 10;\n\nconst bool = false;\n\nconst str = 'Hello!';\n\nconst missingObject = null;\n\nconst nothing = undefined;\n```\n\n![fZKmxT](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/fZKmxT.jpg)\n\n如果给一个变量赋值一个原始类型值，我们可以认为该变量包含这个原始值。当使用 = 将该变量赋值给其他变量值，其实是将值拷贝了一份并赋值给新的变量，因此原始值是通过值的拷贝来赋值的。\n\n```javascript\nlet a = 1;\nlet b = a;\n\nb = b + 2;\n\nconsole.log(a); // 1\nconsole.log(b); // 3\n```\n\n## 引用类型\n\n- Object：`typeof instance === \"object\"`\n- Array：`typeof instance === \"array\"`\n- Function：`typeof instance === \"function\"`\n\n```javascript\n// Objects\nconst plainObject = {\n  prop: 'Value',\n};\n\nconst array = [1, 5, 6];\n\nconst functionObject = (n1, n2) => {\n  return n1 + n2;\n};\n```\n\n![GLC3Zu](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/GLC3Zu.jpg)\n\n将一个非原始值赋值给一个变量，相当于给这个变量赋值了一个引用类型的值，这个引用执行对象在内存中的地址，而这个变量实际上并不包含这个值。\n\n当一个引用类型，比如一个对象，使用 = 将其赋值给另一个变量，实际上是代表那个对象的地址引用赋值给了新的变量，就和是原始值的拷贝一样\n\n```javascript\nlet x = [1];\nlet y = x;\n\ny.push(2);\n\nconsole.log(x); // [1, 2]\nconsole.log(y); // [1, 2]\n```\n\n> **任何非基本类型的都是对象**\n\n## 比较对象\n\n原始值按值比较，引用值按引用比较\n\n```javascript\n// 原始值比较\nconst one = 1;\nconst oneCopy = 1;\n\nconsole.log(one === oneCopy); // true\nconsole.log(one === 1); // true\nconsole.log(one === one); // true\n\n// 引用值比较\nconst ar1 = [1];\nconst ar2 = [1];\n\nconsole.log(ar1 === ar2); // false\nconsole.log(ar1 === [1]); // false\n\nconst ar11 = ar1;\nconsole.log(ar1 === ar11); // true\nconsole.log(ar1 === ar1); // true\n```\n\n## 总结\n\n原始变量及他们的值储存在栈中，当把一个原始变量传递给另一个原始变量时，是把一个栈房间的东西复制到另一个栈房间，且这两个原始变量互不影响。\n\n引用值是把引用变量的名称储存在栈中，但是把其实际对象储存在堆中，且存在一个指针由变量名指向储存在堆中的实际对象，当把引用对象传递给另一个变量时，复制的其实是指向实际对象的指针，此时两者指向的是同一个数据，若通过方法改变其中一个变量的值，则访问另一个变量时，其值也会随之加以改变；但若不是通过方法而是通过重新赋值，此时，相当于重新开了一个房间，该值的原指针改变，则另外一个值不会随他的改变而改变\n","slug":"javascript/advance/基本类型与引用类型"},{"data":{"date":"February 10, 2019","title":"online&offline","tags":["javascript"],"description":"当浏览器从在线与离线状态中切换时，这两个事件会在页面的 body 上触发","fromNow":"3 years ago"},"content":"\n> 当浏览器从在线与离线状态中切换时，这两个事件会在页面的 body 上触发，并冒泡到 document 和 window。可使用 window、document、document.body、添加监听事件`addEventListener`。\n\n## 使用方法\n\n```javascript\n//网络状态\nwindow.addEventListener('load', () => {\n  const updateOnlineStatus = () => {\n    this.online = navigator.onLine;\n  };\n\n  window.addEventListener('online', updateOnlineStatus);\n  window.addEventListener('offline', updateOnlineStatus);\n});\n```\n","slug":"apis/online-offline"},{"data":{"date":"March 19, 2020","title":"移动端抽奖","tags":["i18n","javascript"],"fromNow":"2 years ago"},"content":"\n## 抽奖类型\n\n- 圆形抽奖\n- 方形抽奖\n- 老虎机\n- 刮刮卡\n\n### 圆形抽奖\n\n代码如下：\n\n```javascript\n// prefix补全\nvar CSSTransform = (function () {\n  var _elementStyle = document.createElement('div').style;\n  var _vendor = (function () {\n    var vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],\n      transform,\n      i = 0,\n      l = vendors.length;\n    for (; i < l; i++) {\n      transform = vendors[i] + 'ransform';\n      if (transform in _elementStyle)\n        return vendors[i].substr(0, vendors[i].length - 1);\n    }\n    return false;\n  })();\n\n  function _prefixStyle(style) {\n    if (_vendor === false) return false;\n    if (_vendor === '') return style;\n    return _vendor + style.charAt(0).toUpperCase() + style.substr(1);\n  }\n  return _prefixStyle('transform');\n})();\n\n// 转盘旋转效果\nvar Lottery = function (el) {\n  this.running = false;\n  this.el = $(el)[0];\n  /*\n\t    旋转转盘至指定位置\n\t    参数：\n\t    giftIndex: 礼物的索引（从0开始到数组.length - 1）\n\t    endCallback：转盘旋转完成时的回调\n\t    */\n  this.rotateToGift = function (giftIndex, endCallback) {\n    if (typeof endCallback != 'function') return;\n    if (giftIndex < 0 || giftIndex > CNST_GIFTS.length - 1) return;\n    if (this.running) return;\n    this.running = true;\n    var degToRotate = (giftIndex + 1) * 45 + 360 * 3 - 22.5; //最少转3圈\n    var rotatedDeg = 0;\n    var speed = 20; //deg\n    var speedRatio = 1;\n    var _this = this;\n\n    function r() {\n      _this.el.style[CSSTransform] = 'rotate(' + -rotatedDeg + 'deg)';\n      rotatedDeg += speed * speedRatio;\n      if (rotatedDeg + 180 >= degToRotate)\n        //开始减速\n        speedRatio = (degToRotate - rotatedDeg) / 180;\n      if (rotatedDeg >= degToRotate - 0.5) {\n        rotatedDeg = degToRotate;\n        _this.el.style[CSSTransform] = 'rotate(' + -rotatedDeg + 'deg)';\n        _this.running = false;\n        endCallback();\n      } else setTimeout(r, 1000 / 24);\n    }\n    r();\n  };\n};\n```\n\n**使用方法：**\n\n```html\n<div class=\"lottery\">\n  <div class=\"lottery-bg\"></div>\n  <button id=\"btnStart\" class=\"button start\" onClick=\"startLottery()\"></button>\n</div>\n```\n\n调用方法：\n\n```javascript\n\nvar myLottery = new Lottery($(\".lottery .lottery-bg\"));//初始化转盘\nmyLottery.rotateToGift(giftIndex, function() {\n\t    //giftIndex为后端接口下发的奖品ID，function为回调函数\n}\n```\n\n待续\n","slug":"translate/移动端抽奖"},{"data":{"date":"October 10, 2020","title":"Linux命令xargs","tags":["linux"],"description":"xargs（英文全拼： eXtended ARGuments）是给命令传递参数的一个过滤器，也是组合多个命令的一个工具","fromNow":"a year ago"},"content":"\nxargs（英文全拼： eXtended ARGuments）是给命令传递参数的一个过滤器，也是组合多个命令的一个工具。\n\n## 使用方法\n\n```shell\ncommand1 | xargs command2\n```\n\n我们使用**|**将输出传递给 xargs。这将负责运行 command2 命令，使用 command1 的输出作为其参数。\n\n## 例子\n\n让我们举一个简单的例子。您要从目录中删除某些特定文件。这些文件列在文本文件中。我们有 3 个文件：file1，file2，file3。在**todelete.txt**我们有一个要删除的文件列表，在本例中为 file1 和 file3：\n\n```shell\ncat todelete.txt\n\nfile1\nfile2\n```\n\n![nXyQfk](https://cdn.jsdelivr.net/gh/funnyPan/pics@master/uPic/nXyQfk.png)\n\n通过 cat 命令将 todelete 内容输出并执行 rm 命令\n\n```shell\ncat todelete.txt | xargs rm\n```\n\n## 参数\n\n- -a file 从文件中读入作为 sdtin\n- -e flag ，注意有的时候可能会是-E，flag 必须是一个以空格分隔的标志，当 xargs 分析到含有 flag 这个标志的时候就停止。\n- -p 当每次执行一个 argument 的时候询问一次用户。\n- -n num 后面加次数，表示命令在执行的时候一次用的 argument 的个数，默认是用所有的。\n- -t 表示先打印命令，然后再执行。\n- -i 或者是-I，这得看 linux 支持了，将 xargs 的每项名称，一般是一行一行赋值给 {}，可以用 {} 代替。\n- -r no-run-if-empty 当 xargs 的输入为空的时候则停止 xargs，不用再去执行了。\n- -s num 命令行的最大字符数，指的是 xargs 后面那个命令的最大命令行字符数。\n- -L num 从标准输入一次读取 num 行送给 command 命令。\n- -l 同 -L。\n- -d delim 分隔符，默认的 xargs 分隔符是回车，argument 的分隔符是空格，这里修改的是 xargs 的分隔符。\n- -x exit 的意思，主要是配合-s 使用。。\n- -P 修改最大的进程数，默认是 1，为 0 时候为 as many as it can ，这个例子我没有想到，应该平时都用不到的吧。\n","slug":"linux/Linux命令-xargs"},{"data":{"date":"January 14, 2021","title":"21个用于日常开发的有用JavaScript片段","tags":["i18n","javascript"],"fromNow":"a year ago"},"content":"\n## 输入值数字化\n\n```javascript\nconst checkMyValueType = (event) => {\n  console.log(typeof event.target.value); // string\n  console.log(typeof event.target.valueAsNumber); // number\n};\n<input type=\"number\" onkeyup=\"checkMyValueType(event)\" />;\n```\n\n## 复制输入框值到粘贴板\n\n```javascript\nfunction copyToClipboard(inputID) {\n  navigator.clipboard.writeText(document.querySelector(inputID).value);\n}\n```\n\n## 检查窗口是否可见\n\n```javascript\nconst isBrowserTabInView = () => document.hidden;\nisBrowserTabInView(); // returns true or false depending if tab is in view / focus\n```\n\n## 布尔值取反\n\n```javascript\nlet myBool = false;\nmyBool = !myBool;\nconsole.log(myBool); // true\nmyBool = !myBool;\nconsole.log(myBool); // false\n```\n\n## 检查值是否是偶数\n\n```javascript\nconst isEven = (num) => num % 2 === 0;\nconsole.log(isEven(2)); // true\nconsole.log(isEven(3)); // false\n```\n\n## 检查日期是否是工作日\n\n```javascript\nconst isWeekday = (d) => d.getDay() % 6 !== 0;\nconsole.log(isWeekday(new Date(2021, 0, 11))); // true (Monday)\nconsole.log(isWeekday(new Date(2021, 0, 10))); // false (Sunday)\n```\n\n## 日期加减\n\n```javascript\nconst addDaysToDate = (date, n) => {\n  date.setDate(date.getDate() + n);\n  return date.toISOString().split('T')[0];\n};\naddDaysToDate('2021-0-10', 10); // \"2021-01-20\"\naddDaysToDate('2021-0-10', -10); // '2020-12-31'\n```\n\n## 获取时分秒\n\n```javascript\nconst timeFromDate = (date) => date.toTimeString().slice(0, 8);\nconsole.log(timeFromDate(new Date(2021, 0, 10, 17, 30, 0)));\n// \"17:30:00\"\nconsole.log(timeFromDate(new Date(2021, 0, 10, 5, 56, 44)));\n// \"05:56:44\"\n```\n\n## 计算两个日期之间的工作日数\n\n````javascript\nconst countWeekDaysBetween = (startDate, endDate) =>\n  Array\n    .from({ length: (endDate - startDate) / (1000 * 3600 * 24) })\n    .reduce(count => {\n      if (startDate.getDay() % 6 !== 0) {\n        count++;\n      }\n     startDate = new Date(startDate.setDate(startDate.getDate() + 1));\n      return count;\n    }, 0);\ncountWeekDaysBetween(new Date(2021, 0, 10), new Date(2021, 0, 20)); // 7\ncountWeekDaysBetween(new Date(2021, 1, 10), new Date(2021, 2, 18)); // 26\n`## 检查localstorage是否可用\n``` javascript\nconst isLocalStorageEnabled = () => {\n  try {\n    const key = `__storage__test`;\n    window.localStorage.setItem(key, null);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\nisLocalStorageEnabled(); // true, if localStorage is accessible\n````\n\n## 计算函数等花费时间\n\n```javascript\nstartTime = performance.now();\nanyMethodOrCode();\nconst endTime = performance.now();\nconsole.log(endTime - startTime + ' milliseconds.'); // (Time in milliseconds)\n```\n\n## 捕获右键点击\n\n```javascript\nwindow.oncontextmenu = () => {\n  console.log('right click');\n};\n```\n\n## 只触发一次事件\n\n```javascript\nconst myButton = document.getElementById('myBtn');\nconst myClickFunction = () => {\n  console.log('this click will only get called once');\n};\nmyButton.addEventListener('click', myClickHandler, {\n  once: true,\n});\n```\n\n## 滚动到顶部\n\n```javascript\nconst scrollToTopOfDocument = () => {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n  if (c > 0) {\n    window.requestAnimationFrame(scrollToTop);\n    window.scrollTo(0, c - c / 8);\n  }\n};\nscrollToTopOfDocument();\n```\n\n## 检查字符串是否大写\n\n```javascript\nconst isUpperCase = (str) => str === str.toUpperCase();\nconsole.log(isUpperCase('string')); // false\nconsole.log(isUpperCase('STRING')); // true\nconsole.log(isUpperCase('5TR1NG')); // true\n```\n\n## 检查元素是否处于 focus 状态\n\n```javascript\nconst elementIsInFocus = (el) => el === document.activeElement;\nelementIsInFocus(anyElement); // returns true if in focus, false if not in focus\n```\n\n## 查找数组间不同元素\n\n```javascript\nconst differenceInArrays = (array1, array2) => {\n  const set = new Set(array2);\n  return array1.filter((x) => !set.has(x));\n};\ndifferenceInArrays(['apple', 'orange', 'banana'], ['apple', 'orange', 'mango']); // [\"banana\"]\ndifferenceInArrays([10, 12, 5], [66, 10, 6]); // [12, 5]\n```\n\n## 移除事件监听\n\n```javascript\nconst removeEventOffElement = (el, evt, fn, opts = false) =>\n  el.removeEventListener(evt, fn, opts);\nconst testFunction = () => console.log('My function has been called');\ndocument.body.addEventListener('click', testFunction);\n// Call remove method\nremoveEventOffElement(document.body, 'click', fn);\n```\n\n## 随机生成 HEX 值\n\n```javascript\nconst generateRandomColour = () =>\n  '#' + Math.floor(Math.random() * 16777215).toString(16);\n//EXAMPLE\ndocument.getElementsByTagName('body')[0].style.color = generateRandomColour();\n```\n\n## 查找第一个定义的非空参数\n\n```javascript\nconst getFirstValidValue = (...values) => values.find(v => ![undefined, null].includes(v));\nconsole.log(getFirstValidValue(null, undefined, 'Hey', null); // 'Hey'\n```\n\n## 元素外部监听事件\n\n```javascript\nconst onClickOutsideElement = (element, callback) => {\n  document.addEventListener('click', (e) => {\n    if (!element.contains(e.target)) callback();\n  });\n};\nonClickOutside('#some-element', () => console.log('Hey you missed'));\n// Will log \"Hey you missed\" everytime a click that was not \"some-element\" was clicked\n```\n\n## 总结\n\n有时开发人员会发现自己在一次又一次地创建相同的东西，希望上面的一些代码片段可以在在开发中重用。最新的 JavaScript 特性和浏览器 api 是很重要的。\n","slug":"translate/21个用于日常开发的有用JavaScript片段"}]},"__N_SSG":true}