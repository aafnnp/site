{"pageProps":{"data":{"date":"May 6, 2021","title":"从零开始配置React开发环境","tags":["react","javascript"],"description":"学会使用 webpack 和 Babel 从零配置React开发环境","fromNow":"7 months ago"},"content":{"compiledSource":"var s=Object.defineProperty,u=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var o=(e,n,a)=>n in e?s(e,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[n]=a,i=(e,n)=>{for(var a in n||(n={}))l.call(n,a)&&o(e,a,n[a]);if(p)for(var a of p(n))r.call(n,a)&&o(e,a,n[a]);return e},c=(e,n)=>u(e,d(n));var m=(e,n)=>{var a={};for(var t in e)l.call(e,t)&&n.indexOf(t)<0&&(a[t]=e[t]);if(e!=null&&p)for(var t of p(e))n.indexOf(t)<0&&r.call(e,t)&&(a[t]=e[t]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var t=a,{components:e}=t,n=m(t,[\"components\"]);return mdx(MDXLayout,c(i(i({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"img\",i({parentName:\"p\"},{src:\"https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/D0Xewe.jpg\",alt:\"D0Xewe\"}))),mdx(\"h2\",null,\"\\u4E3A\\u4EC0\\u4E48\\u8981\\u521B\\u5EFA\\u81EA\\u5DF1\\u7684\\u914D\\u7F6E\\uFF1F\"),mdx(\"p\",null,\"\\u901A\\u8FC7\\u4E00\\u6B65\\u6B65\\u521B\\u5EFA\\u81EA\\u5DF1\\u7684\\u914D\\u7F6E\\u53EF\\u4EE5\\u5B66\\u4E60\\u5230\",mdx(\"inlineCode\",{parentName:\"p\"},\"webpack\"),\"\\u548C\",mdx(\"inlineCode\",{parentName:\"p\"},\"babel\"),\"\\u3001\",mdx(\"inlineCode\",{parentName:\"p\"},\"eslint\"),\"\\u7B49\\u8FD9\\u4E9B\\u5DE5\\u5177\\u7684\\u77E5\\u8BC6\\u3002\"),mdx(\"p\",null,\"\\u968F\\u7740\\u5F00\\u53D1\\u65F6\\u95F4\\u53CA\\u9879\\u76EE\\u7684\\u589E\\u957F\\uFF0C\\u9700\\u8981\\u96C6\\u6210\\u66F4\\u591A\\u7684\\u5DE5\\u5177\\u5230\\u9879\\u76EE\\u4E2D\\uFF0C\\u6BD4\\u5982\\uFF1A\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"webpack loaders\\uFF08less\\u3001sass\\uFF09\"),mdx(\"li\",{parentName:\"ul\"},\"\\u670D\\u52A1\\u5668\\u6E32\\u67D3\"),mdx(\"li\",{parentName:\"ul\"},\"ES next\"),mdx(\"li\",{parentName:\"ul\"},\"mobx\\u3001redux \\u7B49\"),mdx(\"li\",{parentName:\"ul\"},\"jest\\u3001cypress \\u7B49\")),mdx(\"h2\",null,\"\\u521D\\u59CB\\u5316\\u9879\\u76EE\"),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-shell\"}),`#\\u521B\\u5EFA\\u5E76\\u8FDB\\u5165\\u76EE\\u5F55\nmkdir react-config-tutorial && cd react-config-tutorial\n\n#\\u521D\\u59CB\\u5316npm\\u9879\\u76EE\nnpm init -y\n\n#\\u5B89\\u88C5react\nnpm install react react-dom\n`)),mdx(\"h2\",null,\"\\u914D\\u7F6E webpack\"))}MDXContent.isMDXComponent=!0;\n","scope":{"date":"May 6, 2021","title":"从零开始配置React开发环境","tags":["react","javascript"],"description":"学会使用 webpack 和 Babel 从零配置React开发环境","fromNow":"7 months ago"}},"randomPost":[{"data":{"date":"November 19, 2019","title":"安装nvm和nodejs","tags":["server"],"fromNow":"2 years ago"},"content":"\n## 通过 nvm 安装 nodejs\n\n## 安装 nvm\n\n```bash\ncurl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash\n```\n\n或者\n\n```bash\nwget -qO- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash\n```\n\n然后：\n\n```bash\nsource ~/.bashrc\n```\n\n## 安装 nodejs\n\n```bash\nnvm install stable\n```\n","slug":"server/安装nvm和nodejs"},{"data":{"date":"March 19, 2020","title":"移动端抽奖","tags":["i18n","javascript"],"fromNow":"2 years ago"},"content":"\n## 抽奖类型\n\n- 圆形抽奖\n- 方形抽奖\n- 老虎机\n- 刮刮卡\n\n### 圆形抽奖\n\n代码如下：\n\n```javascript\n// prefix补全\nvar CSSTransform = (function () {\n  var _elementStyle = document.createElement('div').style;\n  var _vendor = (function () {\n    var vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],\n      transform,\n      i = 0,\n      l = vendors.length;\n    for (; i < l; i++) {\n      transform = vendors[i] + 'ransform';\n      if (transform in _elementStyle)\n        return vendors[i].substr(0, vendors[i].length - 1);\n    }\n    return false;\n  })();\n\n  function _prefixStyle(style) {\n    if (_vendor === false) return false;\n    if (_vendor === '') return style;\n    return _vendor + style.charAt(0).toUpperCase() + style.substr(1);\n  }\n  return _prefixStyle('transform');\n})();\n\n// 转盘旋转效果\nvar Lottery = function (el) {\n  this.running = false;\n  this.el = $(el)[0];\n  /*\n\t    旋转转盘至指定位置\n\t    参数：\n\t    giftIndex: 礼物的索引（从0开始到数组.length - 1）\n\t    endCallback：转盘旋转完成时的回调\n\t    */\n  this.rotateToGift = function (giftIndex, endCallback) {\n    if (typeof endCallback != 'function') return;\n    if (giftIndex < 0 || giftIndex > CNST_GIFTS.length - 1) return;\n    if (this.running) return;\n    this.running = true;\n    var degToRotate = (giftIndex + 1) * 45 + 360 * 3 - 22.5; //最少转3圈\n    var rotatedDeg = 0;\n    var speed = 20; //deg\n    var speedRatio = 1;\n    var _this = this;\n\n    function r() {\n      _this.el.style[CSSTransform] = 'rotate(' + -rotatedDeg + 'deg)';\n      rotatedDeg += speed * speedRatio;\n      if (rotatedDeg + 180 >= degToRotate)\n        //开始减速\n        speedRatio = (degToRotate - rotatedDeg) / 180;\n      if (rotatedDeg >= degToRotate - 0.5) {\n        rotatedDeg = degToRotate;\n        _this.el.style[CSSTransform] = 'rotate(' + -rotatedDeg + 'deg)';\n        _this.running = false;\n        endCallback();\n      } else setTimeout(r, 1000 / 24);\n    }\n    r();\n  };\n};\n```\n\n**使用方法：**\n\n```html\n<div class=\"lottery\">\n  <div class=\"lottery-bg\"></div>\n  <button id=\"btnStart\" class=\"button start\" onClick=\"startLottery()\"></button>\n</div>\n```\n\n调用方法：\n\n```javascript\n\nvar myLottery = new Lottery($(\".lottery .lottery-bg\"));//初始化转盘\nmyLottery.rotateToGift(giftIndex, function() {\n\t    //giftIndex为后端接口下发的奖品ID，function为回调函数\n}\n```\n\n待续\n","slug":"translate/移动端抽奖"},{"data":{"date":"February 10, 2019","title":"online&offline","tags":["javascript"],"description":"当浏览器从在线与离线状态中切换时，这两个事件会在页面的 body 上触发","fromNow":"3 years ago"},"content":"\n> 当浏览器从在线与离线状态中切换时，这两个事件会在页面的 body 上触发，并冒泡到 document 和 window。可使用 window、document、document.body、添加监听事件`addEventListener`。\n\n## 使用方法\n\n```javascript\n//网络状态\nwindow.addEventListener('load', () => {\n  const updateOnlineStatus = () => {\n    this.online = navigator.onLine;\n  };\n\n  window.addEventListener('online', updateOnlineStatus);\n  window.addEventListener('offline', updateOnlineStatus);\n});\n```\n","slug":"apis/online-offline"},{"data":{"date":"October 11, 2020","title":"Linux命令df","tags":["linux"],"description":"用于显示目前在 Linux 系统上的文件系统磁盘使用情况统计","fromNow":"a year ago"},"content":"\n**df**命令用于显示目前在 Linux 系统上的文件系统磁盘使用情况统计。\n\n## 使用方法\n\n![UBFMHD](https://cdn.jsdelivr.net/gh/funnyPan/pics@master/uPic/UBFMHD.png)\n\n同样可以使用**df folder**显示文件夹的使用情况\n\n```shell\ndf folder\n```\n\n![3BJe5E](https://cdn.jsdelivr.net/gh/funnyPan/pics@master/uPic/3BJe5E.png)\n\n## 参数\n\n- -a, --all 包含所有的具有 0 Blocks 的文件系统\n- --block-size={SIZE} 使用 {SIZE} 大小的 Blocks\n- -h, --human-readable 使用人类可读的格式(预设值是不加这个选项的...)\n- -H, --si 很像 -h, 但是用 1000 为单位而不是用 1024\n- -i, --inodes 列出 inode 资讯，不列出已使用 block\n- -k, --kilobytes 就像是 --block-size=1024\n- -l, --local 限制列出的文件结构\n- -m, --megabytes 就像 --block-size=1048576\n- --no-sync 取得资讯前不 sync (预设值)\n- -P, --portability 使用 POSIX 输出格式\n- --sync 在取得资讯前 sync\n- -t, --type=TYPE 限制列出文件系统的 TYPE\n- -T, --print-type 显示文件系统的形式\n- -x, --exclude-type=TYPE 限制列出文件系统不要显示 TYPE\n- -v (忽略)\n- --help 显示这个帮手并且离开\n- --version 输出版本资讯并且离开\n","slug":"linux/Linux命令-df"},{"data":{"date":"October 28, 2020","title":"Linux命令traceroute","tags":["linux"],"description":"traceroute命令用于显示数据包到主机之间的路径","fromNow":"a year ago"},"content":"\n**traceroute**命令用于显示数据包到主机之间的路径。\n\n> raceroute 命令 用于追踪数据包在网络上的传输时的全部路径，它默认发送的数据包大小是 40 字节。\n>\n> 通过 traceroute 我们可以知道信息从你的计算机到互联网另一端的主机是走的什么路径。当然每次数据包由某一同样的出发点（source）到达某一同样的目的地(destination)走的路径可能会不一样，但基本上来说大部分时候所走的路由是相同的。\n>\n> traceroute 通过发送小的数据包到目的设备直到其返回，来测量其需要多长时间。一条路径上的每个设备 traceroute 要测 3 次。输出结果中包括每次测试的时间(ms)和设备的名称（如有的话）及其 ip 地址。\n\n## 使用方法\n\n```shell\ntraceroute <host>\n```\n\n## 案例\n\n![1EOlsJ](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/1EOlsJ.png)\n\n## 参数\n\n- -d 使用 Socket 层级的排错功能。\n- -f<存活数值> 设置第一个检测数据包的存活数值 TTL 的大小。\n- -F 设置勿离断位。\n- -g<网关> 设置来源路由网关，最多可设置 8 个。\n- -i<网络界面> 使用指定的网络界面送出数据包。\n- -I 使用 ICMP 回应取代 UDP 资料信息。\n- -m<存活数值> 设置检测数据包的最大存活数值 TTL 的大小。\n- -n 直接使用 IP 地址而非主机名称。\n- -p<通信端口> 设置 UDP 传输协议的通信端口。\n- -r 忽略普通的 Routing Table，直接将数据包送到远端主机上。\n- -s<来源地址> 设置本地主机送出数据包的 IP 地址。\n- -t<服务类型> 设置检测数据包的 TOS 数值。\n- -v 详细显示指令的执行过程。\n- -w<超时秒数> 设置等待远端主机回报的时间。\n- -x 开启或关闭数据包的正确性检验。\n\n**traceroute**命令可在 Linux、macOS、WSL 和任何 UNIX 环境下运行\n","slug":"linux/Linux命令-traceroute"},{"data":{"date":"October 13, 2020","title":"Linux命令mkdir","tags":["linux"],"description":"用于显示目前在 Linux 系统上的文件系统磁盘使用情况统计","fromNow":"a year ago"},"content":"\n**mkdir**命令用于创建目录，如果在目录名的前面没有加任何路径名，则在当前目录下创建由 dirname 指定的目录；如果给出了一个已经存在的路径，将会在该目录下创建一个指定的目录。在创建目录时，应保证新建的目录与它所在目录下的文件没有重名。\n\n## 使用方法\n\n```shell\n#创建单个文件\nmkdir folder\n\n#创建多个文件\nmkdir folder1 folder2\n\n#使用-p参数创建文件夹，如果不存在即创建，如果不加-p，而且folder不存在，将会报错\nmkdir -p folder/data\n```\n","slug":"linux/Linux命令-mkdir"}]},"__N_SSG":true}