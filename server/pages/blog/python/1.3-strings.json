{"pageProps":{"data":{"date":"November 24, 2021","title":"Strings","tags":["python"],"description":"","fromNow":"21 days ago"},"content":{"compiledSource":"var u=Object.defineProperty,d=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var n=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var l=(e,a,t)=>a in e?u(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,r=(e,a)=>{for(var t in a||(a={}))n.call(a,t)&&l(e,t,a[t]);if(s)for(var t of s(a))p.call(a,t)&&l(e,t,a[t]);return e},i=(e,a)=>d(e,h(a));var c=(e,a)=>{var t={};for(var o in e)n.call(e,o)&&a.indexOf(o)<0&&(t[o]=e[o]);if(e!=null&&s)for(var o of s(e))a.indexOf(o)<0&&p.call(e,o)&&(t[o]=e[o]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var o=t,{components:e}=o,a=c(o,[\"components\"]);return mdx(MDXLayout,i(r(r({},layoutProps),a),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"\\u5B57\\u7B26\\u4E32\\u6587\\u672C\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},\"\\u5B57\\u7B26\\u4E32\\u6587\\u672C\\u901A\\u5E38\\u662F\\u7531\\u5355\\u5F15\\u53F7\\u6216\\u8005\\u53CC\\u5F15\\u53F7\\u62EC\\u8D77\\u6765\\u7684\\u3002\\u901A\\u5E38\\u5355\\u884C\\u5355\\u5F15\\u53F7\\uFF0C\\u591A\\u884C\\u4E09\\u5F15\\u53F7\\u3002\")),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-python\"}),`# Single quote\na = 'Yeah but no but yeah but...'\n\n# Double quote\nb = \"computer says no\"\n\n# Triple quotes\nc = '''\nLook into my eyes, look into my eyes, the eyes, the eyes, the eyes,\nnot around the eyes,\ndon't look around the eyes,\nlook into my eyes, you're under.\n'''\n`)),mdx(\"h2\",null,\"\\u5B57\\u7B26\\u4E32\\u8F6C\\u4E49\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-python\"}),`'\\\\n'      # \\u6362\\u884C\n'\\\\r'      # \\u56DE\\u8F66\n'\\\\t'      # \\u6C34\\u5E73\\u5236\\u8868\\u7B26\n'\\\\''      # \\u5355\\u5F15\\u53F7\n'\\\\\"'      # \\u53CC\\u5F15\\u53F7\n'\\\\\\\\'      # \\u53CD\\u659C\\u6760\n`)),mdx(\"h2\",null,\"\\u5B57\\u7B26\\u4E32\\u8FD0\\u7B97\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-python\"}),`+  # \\u5B57\\u7B26\\u4E32\\u8FDE\\u63A5\n*  # \\u91CD\\u590D\n[] # \\u53D6\\u5B50\\u4E32\n[:] # \\u622A\\u53D6\\u5B57\\u7B26\\u4E32\\u7684\\u4E00\\u90E8\\u5206\nin # \\u5224\\u65AD\\u5B57\\u7B26\\u4E32\\u662F\\u5426\\u5305\\u542B\\u67D0\\u4E2A\\u5B57\\u7B26\\u4E32\nnot in # \\u5224\\u65AD\\u5B57\\u7B26\\u4E32\\u662F\\u5426\\u4E0D\\u5305\\u542B\\u67D0\\u4E2A\\u5B57\\u7B26\\u4E32\nr/re # \\u5339\\u914D\\u5B57\\u7B26\\u4E32\n% # \\u683C\\u5F0F\\u5316\\u5B57\\u7B26\\u4E32\n\n\na = \"Hello\"\nb = \"Python\"\n\nprint \"a + b \\u8F93\\u51FA\\u7ED3\\u679C\\uFF1A\", a + b\nprint \"a * 2 \\u8F93\\u51FA\\u7ED3\\u679C\\uFF1A\", a * 2\nprint \"a[1] \\u8F93\\u51FA\\u7ED3\\u679C\\uFF1A\", a[1]\nprint \"a[1:4] \\u8F93\\u51FA\\u7ED3\\u679C\\uFF1A\", a[1:4]\n\nif( \"H\" in a) :\n    print \"H \\u5728\\u53D8\\u91CF a \\u4E2D\"\nelse :\n    print \"H \\u4E0D\\u5728\\u53D8\\u91CF a \\u4E2D\"\n\nif( \"M\" not in a) :\n    print \"M \\u4E0D\\u5728\\u53D8\\u91CF a \\u4E2D\"\nelse :\n    print \"M \\u5728\\u53D8\\u91CF a \\u4E2D\"\n\nprint r'\\\\n'\nprint R'\\\\n'\n`)),mdx(\"h2\",null,\"\\u5B57\\u7B26\\u4E32\\u65B9\\u6CD5\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-python\"}),`s = ' Hello'\nt = s.strip() #'Hello'\\u53BB\\u9664\\u7A7A\\u683C\nl = s.lower() #' hello' \\u5168\\u90E8\\u8F6C\\u6362\\u4E3A\\u5C0F\\u5199\nu = s.upper() #' HELLO' \\u5168\\u90E8\\u8F6C\\u6362\\u4E3A\\u5927\\u5199\nc = s.capitalize() #'Hello' \\u5B57\\u7B26\\u4E32\\u9996\\u5B57\\u6BCD\\u5927\\u5199\nt = s.replace('H', 'J') #'Jello' \\u5C06\\u6240\\u6709\\u7684H\\u66FF\\u6362\\u4E3AJ\n\ns.endswith(suffix)     # \\u5224\\u65AD\\u5B57\\u7B26\\u4E32\\u662F\\u5426\\u4EE5\\u6307\\u5B9A\\u540E\\u7F00\\u7ED3\\u5C3E\ns.find(t)              # \\u67E5\\u627E\\u5B57\\u7B26\\u4E32\\u4E2D\\u6307\\u5B9A\\u5B57\\u7B26\\u6216\\u5B57\\u7B26\\u4E32\\u7684\\u7D22\\u5F15\\u4F4D\\u7F6E\ns.index(t)             # \\u67E5\\u627E\\u5B57\\u7B26\\u4E32\\u4E2D\\u6307\\u5B9A\\u5B57\\u7B26\\u6216\\u5B57\\u7B26\\u4E32\\u7684\\u7D22\\u5F15\\u4F4D\\u7F6E\ns.isalpha()            # \\u5224\\u65AD\\u5B57\\u7B26\\u4E32\\u662F\\u5426\\u53EA\\u6709\\u5B57\\u6BCD\ns.isdigit()            # \\u5224\\u65AD\\u5B57\\u7B26\\u4E32\\u662F\\u5426\\u53EA\\u6709\\u6570\\u5B57\ns.islower()            # \\u5224\\u65AD\\u5B57\\u7B26\\u4E32\\u662F\\u5426\\u53EA\\u6709\\u5C0F\\u5199\ns.isupper()            # \\u5224\\u65AD\\u5B57\\u7B26\\u4E32\\u662F\\u5426\\u53EA\\u6709\\u5927\\u5199\ns.join(slist)          # \\u5C06\\u5B57\\u7B26\\u4E32s\\u4E0E\\u5B57\\u7B26\\u4E32\\u5217\\u8868slist\\u4E2D\\u7684\\u5B57\\u7B26\\u4E32\\u8FDE\\u63A5\ns.lower()              # \\u8F6C\\u6362\\u5B57\\u7B26\\u4E32\\u4E2D\\u6240\\u6709\\u5927\\u5199\\u5B57\\u7B26\\u4E3A\\u5C0F\\u5199\ns.replace(old,new)     # \\u66FF\\u6362\\u5B57\\u7B26\\u4E32\\u4E2D\\u7684\\u6307\\u5B9A\\u5B57\\u7B26\\u4E32\ns.rfind(t)             # \\u4ECE\\u53F3\\u8FB9\\u5F00\\u59CB\\u67E5\\u627E\\u5B57\\u7B26\\u4E32\\u4E2D\\u6307\\u5B9A\\u5B57\\u7B26\\u6216\\u5B57\\u7B26\\u4E32\\u7684\\u7D22\\u5F15\\u4F4D\\u7F6E\ns.rindex(t)            # \\u4ECE\\u53F3\\u8FB9\\u5F00\\u59CB\\u67E5\\u627E\\u5B57\\u7B26\\u4E32\\u4E2D\\u6307\\u5B9A\\u5B57\\u7B26\\u6216\\u5B57\\u7B26\\u4E32\\u7684\\u7D22\\u5F15\\u4F4D\\u7F6E\ns.split([delim])       # \\u5C06\\u5B57\\u7B26\\u4E32\\u5206\\u5272\\u6210\\u4E00\\u4E2A\\u5217\\u8868\ns.startswith(prefix)   # \\u5224\\u65AD\\u5B57\\u7B26\\u4E32\\u662F\\u5426\\u4EE5\\u6307\\u5B9A\\u524D\\u7F00\\u5F00\\u5934\ns.strip()              # \\u53BB\\u6389\\u5B57\\u7B26\\u4E32\\u5DE6\\u53F3\\u4E24\\u8FB9\\u7684\\u7A7A\\u683C\ns.upper()              # \\u8F6C\\u6362\\u5B57\\u7B26\\u4E32\\u4E2D\\u7684\\u5C0F\\u5199\\u5B57\\u6BCD\\u4E3A\\u5927\\u5199\n`)),mdx(\"h2\",null,\"\\u5B57\\u7B26\\u4E32\\u7C7B\\u578B\\u8F6C\\u6362\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},\"\\u4F7F\\u7528\",mdx(\"inlineCode\",{parentName:\"p\"},\"str()\"),\"\\u5C06\\u4EFB\\u4F55\\u503C\\u8F6C\\u6362\\u6210\\u5B57\\u7B26\\u4E32\")),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-python\"}),`x=42\nstr(x) #'42'\n`)),mdx(\"h2\",null,\"\\u5176\\u4ED6\\u5B57\\u7B26\\u7C7B\\u578B\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-python\"}),`# \\u5B57\\u8282\\u7C7B\\u578B\ndata = b'Hello World\\\\r\\\\n'\nlen(data)                         # 13\ndata[0:5]                         # b'Hello'\ndata.replace(b'Hello', b'Cruel')  # b'Cruel World\\\\r\\\\n'\n\n# Raw\\u5B57\\u8282\\u7C7B\\u578B\n>>> rs = r'c:\\\\newdata\\\\test' # Raw (uninterpreted backslash)\n>>> rs\n'c:\\\\\\\\newdata\\\\\\\\test'\n\n# f-string\n>>> name = 'IBM'\n>>> shares = 100\n>>> price = 91.1\n>>> a = f'{name:>10s} {shares:10d} {price:10.2f}'\n>>> a\n'       IBM        100      91.10'\n>>> b = f'Cost = \\${shares*price:0.2f}'\n>>> b\n'Cost = $9110.00'\n>>>\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"date":"November 24, 2021","title":"Strings","tags":["python"],"description":"","fromNow":"21 days ago"}},"randomPost":[{"data":{"date":"December 8, 2021","title":"如何判断是否是日期对象？","tags":["javascript"],"description":"一些常见的日期对象判断方法","fromNow":"6 days ago"},"content":"\n## typeof\n\n使用`typeof`可以判断一个变量的类型，返回值为`string`，可以使用`instanceof`来判断一个对象是否是某个类的实例。\n\n我们使用运算符 typeof 检查 getMonth 方法是否是一个函数，看看它是否返回`function`\n\n```javascript\nconst date = new Date(2021, 1, 1);\nconsole.log(typeof date.getMonth === 'function');\n```\n\n如果返回`true`，说明 getMonth 是一个函数，`date`可能是`Date`实例，如果返回`false`，说明 getMonth 是一个字符串。\n\n## instanceof\n\ninstanceof 可以用来判断一个对象是否是某个类的实例，返回值为`boolean`。\n\n```javascript\nconst date = new Date(2021, 1, 1);\nconsole.log(date instanceof Date);\n```\n\n如果返回`true`，说明 date 是一个`Date`实例，如果返回`false`，说明 date 不是一个`Date`实例。\n\n## Object.prototype.toString\n\nObject.prototype.toString 方法可以返回一个对象的字符串表示，返回值为`string`。\n\n```javascript\nconst date = new Date(2021, 1, 1);\nconsole.log(date instanceof Date);\n```\n\n## isValid Date\n\n判断一个对象是否是一个有效的日期对象，返回值为`boolean`。\n\n```javascript\nObject.prototype.toString;\n```\n","slug":"javascript/how-to-check-is-valid-date-object"},{"data":{"date":"January 8, 2021","title":"基于Docker镜像的更新","tags":["docker"],"fromNow":"a year ago"},"content":"\n1. 停止镜像\n\n```shell\ndocker stop <ID or name>\n```\n\n2. 移除镜像\n\n```shell\ndocker rm <ID or name>\n```\n\n3. 拉取最新镜像\n\n```shell\ndocker pull <image name>\n```\n\n4. 启动镜像\n\n```shell\ndocker run <image name> ...options\n```\n\n## 更多\n","slug":"docker/Docker更改镜像"},{"data":{"date":"May 21, 2020","title":"Go-HelloWorld","tags":["go"],"fromNow":"2 years ago"},"content":"\n## 搭建开发环境\n\n让我们创建一个目录，在该目录中编写我们的 hello world 程序。打开终端并运行以下命令。\n\n```shell\nmkdir ~/Documents/learngo/\n```\n\n上面的命令将 learngo 在当前用户的 Documents 目录中创建一个名为目录。\n\n### 你好，世界\n\n使用您喜欢的文本编辑器 main.go 在 learngo 目录中创建一个名为以下内容的文件。\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello World\")\n}\n```\n\n按照 Go 中的约定，将包含 main 函数的文件命名为 main.go。\n\n### 运行程序\n\n1. go install\n\n```shell\ncd ~/Documents/learngo/\ngo install\n#此命令将编译程序并将编译好的二进制文件复制到~/go/bin内\nls -al ~/go/bin/\n\n~/go/bin/learngo\n#输出hello world\n```\n\n2. go build\n\n```shell\ncd ~/Documents/learngo/\ngo build\n#上面的命令将learngo在当前目录中创建一个二进制文件。ls -al将显示learngo已创建一个名为的文件。\n./learngo\n#输出Hello World\n```\n\n3. go run\n\ncd ~/Documents/learngo/在终端中键入命令以将当前目录更改为 learngo。\n\n```shell\ngo run main.go\nHello World\n#go run和go build/go install命令之间的细微差别是，go run需要.go文件名作为参数。\n```\n\ngo run 工作原理非常相似 go build。无需将程序编译并安装到当前目录，而是将文件编译到一个临时位置并从该位置运行文件。如果您想知道 go run 将文件编译到的位置，请 go run 使用--work 参数运行。\n\n```shell\ngo run --work main.go\n```\n\n4. go playground\n\n<Gist gistLink=\"Manonicu/ef552d29300ffb0cd311d9cc8828bc6e\" />\n\n我们将简要讨论该程序的每一行的作用。\n\n- package main - 每个 go 文件必须以 package name 开始。\n- import \"fmt\" - import 语句用于导入其他软件\n\n  包\n\n- func main（）- func 关键字标记函数的开始。\n- fmt.Println（\"H​​ello World\"）\n","slug":"go/第一个Go程序"},{"data":{"date":"October 11, 2020","title":"Linux命令nohup","tags":["linux"],"description":"用于忽略 SIGHUP (挂断信号) 在系统后台不挂断地运行命令，退出终端不会影响程序的运行","fromNow":"a year ago"},"content":"\n**nohup**用于忽略 SIGHUP (\"signal hang up\" 译：挂断信号) 在系统后台不挂断地运行命令，退出终端不会影响程序的运行。\n\nnohup 命令在默认情况下（非重定向时），会输出一个名叫 nohup.out 的文件到当前目录下，如果当前目录的 nohup.out 文件不可写，输出重定向到 $HOME/nohup.out 文件中。\n\n## 使用方法\n\n```shell\nnohup <command>\n```\n\n停止运行\n\n```shell\n#使用如下命令找到进程pid，然后使用kill杀掉进程\nps -aux | grep <command>\n```\n\n## 参数\n\n- Command：要执行的命令。\n- Arg：一些参数，可以指定输出文件。\n- &：让命令在后台执行，终端退出后命令仍旧执行。\n\nnohup 命令可以在 Linux、macOS、WSL 和任何有 UNIX 环境的地方使用\n","slug":"linux/Linux命令-nohup"},{"data":{"date":"May 19, 2020","title":"类型判断","tags":["javascript"],"fromNow":"2 years ago"},"content":"\n## typeof\n\n> 用于判断操作数的数据类型，适用于除 null、object 的其他 5 种类型的判断。\n\n1. 对于基本类型，除 null 以外，均可以返回正确的结果。\n2. 对于引用类型，除 function 以外，一律返回 object 类型。\n3. 对于 null ，返回 object 类型。\n4. 对于 function 返回 function 类型。\n\n```javascript\ntypeof undefined; // \"undefined\";\ntypeof 1; // \"number\";\ntypeof '1'; // \"string\";\ntypeof true; // \"boolean\";\ntypeof Symbol(); // \"symbol\";\ntypeof { a: 1 }; // \"object\";\n\ntypeof null === 'object'; // true\ntypeof function () {} === 'function'; // true\n```\n\n## instanceof\n\n> 用于判断是对象的那个子类型\n\n```javascript\n[1, 2] instanceof Array; // true\n(function foo() {} instanceof Function); // true\nnew Date(2018) instanceof Date; // true\nnew Number(1) instanceof Number; // true\n1 instanceof Number; // false\n```\n\na instanceof b，instanceof 会去查找 a 的原型链(这里不展开讨论)上是否有 b 的 prototype 属性；如果有，就返回 true，否则返回 false。即判断 a 的原型链上是否有 a.\\_proto\\_\\_ === b.prototype 返回 true\n\n## constructor\n\n> 不仅可以用于对象子类型的判断，还可以用于基本类型的判断，返回创建实例对象的 Object 构造函数的引用，原始数据类型，constructor 只读，基本类型指向对应的内置对象的构造函数\n\n```javascript\n({ a: 1 }.constructor === Object); // true\n[1, 2].constructor === Array; // true\nnew Date(2018).constructor === Date; // true\n(function foo() {}.constructor === Function); // true\n'1'.constructor === String; // true\n(1).constructor === Number; // true\ntrue.constructor === Boolean; // true\n```\n\n## prototype\n\n> Object.prototype.toString.call('...')，通用方法判断对象类型。 Object.prototype 表示 Object 的原型对象，toString 返回表示该对象的字符串，call 用于指定 this\n\n```javascript\nObject.prototype.toString.call('1'); // \"[object String]\"\nObject.prototype.toString.call(1); // \"[object Number]\"\nObject.prototype.toString.call(true); // \"[object Boolean]\"\nObject.prototype.toString.call([1, 2, 3]); // \"[object Array]\"\nObject.prototype.toString.call(function foo() {}); // \"[object Function]\"\nObject.prototype.toString.call(null); //\"[object Null]\"\nObject.prototype.toString.call(undefined); //\"[object Undefined]\"\n```\n","slug":"javascript/advance/类型判断"},{"data":{"date":"May 10, 2018","title":"Boolean","tags":["javascript"],"fromNow":"4 years ago"},"content":"\nBoolean 有两个值 true/false。\n\n| 数据类型  | 转换为 true 的值 | 转换为 false 的值 |\n| --------- | ---------------- | ----------------- |\n| Boolean   | true             | false             |\n| String    | 任意飞空字符串   | 空字符串          |\n| Number    | 任何非零值       | 0 和 NaN          |\n| Object    | 任何对象         | null              |\n| Undefined |                  | undefined         |\n","slug":"javascript/base/Boolean"}]},"__N_SSG":true}