{"pageProps":{"data":{"date":"April 11, 2021","title":"闭包","tags":["swift"],"description":"闭包(Closures)是自包含的功能代码块，可以在代码中使用或者用来作为参数传值。","fromNow":"8 months ago"},"content":{"compiledSource":"var c=Object.defineProperty,m=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var d=(e,n,a)=>n in e?c(e,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[n]=a,t=(e,n)=>{for(var a in n||(n={}))r.call(n,a)&&d(e,a,n[a]);if(o)for(var a of o(n))p.call(n,a)&&d(e,a,n[a]);return e},i=(e,n)=>m(e,u(n));var s=(e,n)=>{var a={};for(var l in e)r.call(e,l)&&n.indexOf(l)<0&&(a[l]=e[l]);if(e!=null&&o)for(var l of o(e))n.indexOf(l)<0&&p.call(e,l)&&(a[l]=e[l]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var l=a,{components:e}=l,n=s(l,[\"components\"]);return mdx(MDXLayout,i(t(t({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"\\u95ED\\u5305\\u7684\\u5B9A\\u4E49\"),mdx(\"p\",null,`\\u95ED\\u5305(Closures)\\u662F\\u81EA\\u5305\\u542B\\u7684\\u529F\\u80FD\\u4EE3\\u7801\\u5757\\uFF0C\\u53EF\\u4EE5\\u5C06\\u95ED\\u5305\\u89C6\\u4E3A\\u65E0\\u540D\\u51FD\\u6570\\uFF0C\\u53EF\\u4EE5\\u5C06\\u5176\\u5206\\u914D\\u7ED9\\u53D8\\u91CF\\u6216\\u5C06\\u5176\\u4F5C\\u4E3A\\u53C2\\u6570\\u4F20\\u9012\\u7ED9\\u51FD\\u6570\\u3002\n\\u95ED\\u5305\\u4E3B\\u8981\\u7528\\u4E8E\\u5728\\u5C06\\u6765\\u6EE1\\u8DB3\\u6761\\u4EF6\\u65F6\\u6267\\u884C\\u67D0\\u9879\\u64CD\\u4F5C\\u3002\\u4F8B\\u5982\\uFF0C\\u6210\\u529F\\u4E0B\\u8F7D\\u6587\\u4EF6\\u540E\\uFF0C\\u5C06\\u5176\\u5185\\u5BB9\\u5B58\\u50A8\\u5230\\u6570\\u636E\\u5E93\\u4E2D\\u3002`),mdx(\"p\",null,\"\\u5168\\u5C40\\u51FD\\u6570\\u548C\\u5D4C\\u5957\\u51FD\\u6570\\u5176\\u5B9E\\u5C31\\u662F\\u7279\\u6B8A\\u7684\\u95ED\\u5305\\u3002\"),mdx(\"p\",null,\"\\u95ED\\u5305\\u7684\\u5F62\\u5F0F\\u6709\\uFF1A\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"\\u5168\\u5C40\\u51FD\\u6570\"),mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"\\u5D4C\\u5957\\u51FD\\u6570\"),mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"\\u95ED\\u5305\\u8868\\u8FBE\\u5F0F\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"\\u6709\\u540D\\u5B57\\u4F46\\u4E0D\\u80FD\\u6355\\u83B7\\u4EFB\\u4F55\\u503C\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"\\u6709\\u540D\\u5B57\\uFF0C\\u4E5F\\u80FD\\u6355\\u83B7\\u5C01\\u95ED\\u51FD\\u6570\\u5185\\u7684\\u503C\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"\\u65E0\\u540D\\u95ED\\u5305\\uFF0C\\u4F7F\\u7528\\u8F7B\\u91CF\\u7EA7\\u8BED\\u6CD5\\uFF0C\\u53EF\\u4EE5\\u6839\\u636E\\u4E0A\\u4E0B\\u6587\\u73AF\\u5883\\u6355\\u83B7\\u503C\")))),mdx(\"h2\",null,\"\\u521B\\u5EFA\\u95ED\\u5305\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-swift\"}),`let helloWorldClosure = {\n  print(\"hello\")\n}\n\nhelloWorldClosure()\n`)),mdx(\"p\",null,\"\\u4E0A\\u9762\\u7684\\u4EE3\\u7801\\u521B\\u5EFA\\u4E00\\u4E2A\\u6253\\u5370\",mdx(\"inlineCode\",{parentName:\"p\"},\"Hello\"),\"\\u7684\\u95ED\\u5305\\uFF0C\\u5E76\\u5C06\\u8BE5\\u95ED\\u5305\\u5206\\u914D\\u7ED9\",mdx(\"inlineCode\",{parentName:\"p\"},\"helloWorldClosure\"),\"\\u53D8\\u91CF\\u3002\\u7136\\u540E\\uFF0C\\u53EF\\u4EE5\\u50CF\\u8C03\\u7528\\u51FD\\u6570\\u4E00\\u6837\\u7B80\\u5355\\u5730\\u8C03\\u7528\\u95ED\\u5305\\u3002\"),mdx(\"h2\",null,\"\\u63A5\\u6536\\u53C2\\u6570\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-swift\"}),`let driving = { (place: String) in\n    print(\"I'm going to \\\\(place) in my car\")\n}\ndriving(\"London\")\n`)),mdx(\"h2\",null,\"\\u95ED\\u5305\\u8FD4\\u56DE\\u503C\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-swift\"}),`let addClosure = { (first: Int, second: Int) -> Int in\n    return first + second\n}\n\nlet sum = addClosure(1,2)\n`)),mdx(\"p\",null,\"\\u4E0A\\u9762\\u7684\\u4EE3\\u7801\\u521B\\u5EFA\\u4E00\\u4E2A\\u4EE5\\u4E24\\u4E2A\\u6570\\u5B57\\u4E3A\\u53C2\\u6570\\u7684\\u95ED\\u5305\\uFF0C\\u5E76\\u8FD4\\u56DE\\u6570\\u5B57\\u7684\\u603B\\u548C\\u3002\"),mdx(\"h2\",null,\"\\u4F5C\\u4E3A\\u53C2\\u6570\\u4F20\\u9012\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-swift\"}),`let saveFile = {\n   //code to save file\n}\n\nfunc downloadFile(imageUrl, onSuccess: () ->) {\n  //code to download file\n  if(downloadSuccessfull){\n     onSuccess()\n  }\n}\n\ndownloadFile(imageUrl: \"Instagram\", onSuccess: saveFile)\n`)),mdx(\"p\",null,\"\\u4E0A\\u9762\\u7684\\u4EE3\\u7801\\u521B\\u5EFA\\u4E86\\u4E00\\u4E2A\\u95ED\\u5305\\uFF0C\\u7528\\u4E8E\\u4FDD\\u5B58\\u4ECE\",mdx(\"inlineCode\",{parentName:\"p\"},\"Internet\"),\"\\u4E0B\\u8F7D\\u7684\\u6587\\u4EF6\\u3002\\u8FD9\\u4E2A\\u95ED\\u5305\\u88AB\\u4F20\\u9012\\u5230\",mdx(\"inlineCode\",{parentName:\"p\"},\"downloadFile\"),\"\\u51FD\\u6570\\u4E2D\\u3002\\u6B64\",mdx(\"inlineCode\",{parentName:\"p\"},\"downloadFile\"),\"\\u529F\\u80FD\\u4ECE\\u4E92\\u8054\\u7F51\\u4E0B\\u8F7D\\u6587\\u4EF6\\uFF0C\\u5982\\u679C\\u6587\\u4EF6\\u4E0B\\u8F7D\\u6210\\u529F\\uFF0C\\u5219\\u8C03\\u7528\\u4FDD\\u5B58\\u6587\\u4EF6\\u5173\\u95ED\\u3002\"))}MDXContent.isMDXComponent=!0;\n","scope":{"date":"April 11, 2021","title":"闭包","tags":["swift"],"description":"闭包(Closures)是自包含的功能代码块，可以在代码中使用或者用来作为参数传值。","fromNow":"8 months ago"}},"randomPost":[{"data":{"date":"January 14, 2021","title":"21个用于日常开发的有用JavaScript片段","tags":["i18n","javascript"],"fromNow":"a year ago"},"content":"\n## 输入值数字化\n\n```javascript\nconst checkMyValueType = (event) => {\n  console.log(typeof event.target.value); // string\n  console.log(typeof event.target.valueAsNumber); // number\n};\n<input type=\"number\" onkeyup=\"checkMyValueType(event)\" />;\n```\n\n## 复制输入框值到粘贴板\n\n```javascript\nfunction copyToClipboard(inputID) {\n  navigator.clipboard.writeText(document.querySelector(inputID).value);\n}\n```\n\n## 检查窗口是否可见\n\n```javascript\nconst isBrowserTabInView = () => document.hidden;\nisBrowserTabInView(); // returns true or false depending if tab is in view / focus\n```\n\n## 布尔值取反\n\n```javascript\nlet myBool = false;\nmyBool = !myBool;\nconsole.log(myBool); // true\nmyBool = !myBool;\nconsole.log(myBool); // false\n```\n\n## 检查值是否是偶数\n\n```javascript\nconst isEven = (num) => num % 2 === 0;\nconsole.log(isEven(2)); // true\nconsole.log(isEven(3)); // false\n```\n\n## 检查日期是否是工作日\n\n```javascript\nconst isWeekday = (d) => d.getDay() % 6 !== 0;\nconsole.log(isWeekday(new Date(2021, 0, 11))); // true (Monday)\nconsole.log(isWeekday(new Date(2021, 0, 10))); // false (Sunday)\n```\n\n## 日期加减\n\n```javascript\nconst addDaysToDate = (date, n) => {\n  date.setDate(date.getDate() + n);\n  return date.toISOString().split('T')[0];\n};\naddDaysToDate('2021-0-10', 10); // \"2021-01-20\"\naddDaysToDate('2021-0-10', -10); // '2020-12-31'\n```\n\n## 获取时分秒\n\n```javascript\nconst timeFromDate = (date) => date.toTimeString().slice(0, 8);\nconsole.log(timeFromDate(new Date(2021, 0, 10, 17, 30, 0)));\n// \"17:30:00\"\nconsole.log(timeFromDate(new Date(2021, 0, 10, 5, 56, 44)));\n// \"05:56:44\"\n```\n\n## 计算两个日期之间的工作日数\n\n````javascript\nconst countWeekDaysBetween = (startDate, endDate) =>\n  Array\n    .from({ length: (endDate - startDate) / (1000 * 3600 * 24) })\n    .reduce(count => {\n      if (startDate.getDay() % 6 !== 0) {\n        count++;\n      }\n     startDate = new Date(startDate.setDate(startDate.getDate() + 1));\n      return count;\n    }, 0);\ncountWeekDaysBetween(new Date(2021, 0, 10), new Date(2021, 0, 20)); // 7\ncountWeekDaysBetween(new Date(2021, 1, 10), new Date(2021, 2, 18)); // 26\n`## 检查localstorage是否可用\n``` javascript\nconst isLocalStorageEnabled = () => {\n  try {\n    const key = `__storage__test`;\n    window.localStorage.setItem(key, null);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\nisLocalStorageEnabled(); // true, if localStorage is accessible\n````\n\n## 计算函数等花费时间\n\n```javascript\nstartTime = performance.now();\nanyMethodOrCode();\nconst endTime = performance.now();\nconsole.log(endTime - startTime + ' milliseconds.'); // (Time in milliseconds)\n```\n\n## 捕获右键点击\n\n```javascript\nwindow.oncontextmenu = () => {\n  console.log('right click');\n};\n```\n\n## 只触发一次事件\n\n```javascript\nconst myButton = document.getElementById('myBtn');\nconst myClickFunction = () => {\n  console.log('this click will only get called once');\n};\nmyButton.addEventListener('click', myClickHandler, {\n  once: true,\n});\n```\n\n## 滚动到顶部\n\n```javascript\nconst scrollToTopOfDocument = () => {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n  if (c > 0) {\n    window.requestAnimationFrame(scrollToTop);\n    window.scrollTo(0, c - c / 8);\n  }\n};\nscrollToTopOfDocument();\n```\n\n## 检查字符串是否大写\n\n```javascript\nconst isUpperCase = (str) => str === str.toUpperCase();\nconsole.log(isUpperCase('string')); // false\nconsole.log(isUpperCase('STRING')); // true\nconsole.log(isUpperCase('5TR1NG')); // true\n```\n\n## 检查元素是否处于 focus 状态\n\n```javascript\nconst elementIsInFocus = (el) => el === document.activeElement;\nelementIsInFocus(anyElement); // returns true if in focus, false if not in focus\n```\n\n## 查找数组间不同元素\n\n```javascript\nconst differenceInArrays = (array1, array2) => {\n  const set = new Set(array2);\n  return array1.filter((x) => !set.has(x));\n};\ndifferenceInArrays(['apple', 'orange', 'banana'], ['apple', 'orange', 'mango']); // [\"banana\"]\ndifferenceInArrays([10, 12, 5], [66, 10, 6]); // [12, 5]\n```\n\n## 移除事件监听\n\n```javascript\nconst removeEventOffElement = (el, evt, fn, opts = false) =>\n  el.removeEventListener(evt, fn, opts);\nconst testFunction = () => console.log('My function has been called');\ndocument.body.addEventListener('click', testFunction);\n// Call remove method\nremoveEventOffElement(document.body, 'click', fn);\n```\n\n## 随机生成 HEX 值\n\n```javascript\nconst generateRandomColour = () =>\n  '#' + Math.floor(Math.random() * 16777215).toString(16);\n//EXAMPLE\ndocument.getElementsByTagName('body')[0].style.color = generateRandomColour();\n```\n\n## 查找第一个定义的非空参数\n\n```javascript\nconst getFirstValidValue = (...values) => values.find(v => ![undefined, null].includes(v));\nconsole.log(getFirstValidValue(null, undefined, 'Hey', null); // 'Hey'\n```\n\n## 元素外部监听事件\n\n```javascript\nconst onClickOutsideElement = (element, callback) => {\n  document.addEventListener('click', (e) => {\n    if (!element.contains(e.target)) callback();\n  });\n};\nonClickOutside('#some-element', () => console.log('Hey you missed'));\n// Will log \"Hey you missed\" everytime a click that was not \"some-element\" was clicked\n```\n\n## 总结\n\n有时开发人员会发现自己在一次又一次地创建相同的东西，希望上面的一些代码片段可以在在开发中重用。最新的 JavaScript 特性和浏览器 api 是很重要的。\n","slug":"translate/21个用于日常开发的有用JavaScript片段"},{"data":{"date":"October 13, 2020","title":"Linux命令cd","tags":["linux"],"description":"cd命令用于切换当前工作目录","fromNow":"a year ago"},"content":"\n**cd**命令用于切换当前工作目录。\n\n> ~ 也表示为 home 目录 的意思， . 则是表示目前所在的目录， .. 则表示目前目录位置的上一层目录\n\n## 使用方法\n\n```shell\n#切换到某个目录\ncd foldername\n\n#当前所在目录\ncd .\n\n#切换到上一层目录\ncd ..\n\n#切换到home目录\ncd ~\n\n#切换到根目录\ncd /\n```\n","slug":"linux/Linux命令-cd"},{"data":{"date":"May 19, 2020","title":"事件循环","tags":["javascript"],"description":"事件循环是每个前端开发必须理解的概念","fromNow":"2 years ago"},"content":"\n![w2fi5V](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/w2fi5V.jpg)\n\n众所周知 JS 是⻔⾮阻塞单线程语⾔，因为在最初 JS 就是为了和浏览器交互⽽诞⽣的。如果 JS 是⻔多线程的语⾔话，我们在多个线程中处理 DOM 就可能会发⽣问题（⼀个线程中新加节点，另⼀个线程中删除节点），当然可以引⼊读写锁解决这个问题。\n","slug":"javascript/advance/event_loop"},{"data":{"date":"January 7, 2021","title":"Docker Containers","description":"Docker 把应用程序及其依赖，打包在 image 文件里面。只有通过这个文件，才能生成 Docker 容器","tags":["docker"],"fromNow":"a year ago"},"content":"\nimage 文件生成的容器实例，本身也是一个文件，称为容器文件。也就是说，一旦容器生成，就会同时存在两个文件： image 文件和容器文件。而且关闭容器并不会删除容器文件，只是容器停止运行而已。\n\n```shell\n# 列出本机正在运行的容器\n$ docker container ls\n```\n\n```shell\n# 列出本机所有容器，包括终止运行的容器\n$ docker container ls --all\n```\n\n上面命令的输出结果之中，包括容器的 ID。很多地方都需要提供这个 ID，比如上一节终止容器运行的 docker container kill 命令。\n\n终止运行的容器文件，依然会占据硬盘空间，可以使用 docker container rm 命令删除。\n\n```shell\n$ docker container rm [containerID]\n```\n\n运行上面的命令之后，再使用 docker container ls --all 命令，就会发现被删除的容器文件已经消失了。\n\n## 更多\n","slug":"docker/Docker容器"},{"data":{"date":"October 30, 2020","title":"Linux命令tar","tags":["linux"],"description":"tar用于linux的文件和目录创建档案，利用tar命令，可以把一大堆的文件和目录全部打包成一个文件","fromNow":"a year ago"},"content":"\n**tar**用于 linux 的文件和目录创建档案，利用 tar 命令，可以把一大堆的文件和目录全部打包成一个文件\n\n## 使用方法\n\n```shell\ntar -cf archive.tar file1 file2\n#c参数代表创建压缩文档，f参数用于写入归档文件。\n\ntar -xf archive.tar\n#x参数代表解压压缩文档\n\ntar -xf archive.tar -C directory\n#C参数代表解压到某个目录\n\ntar -tf archive.tar\n#t参数代表列出压缩文档的内容\n```\n","slug":"linux/Linux命令-tar"},{"data":{"date":"May 20, 2020","title":"Cypress入门","tags":["i18n","javascript"],"fromNow":"2 years ago"},"content":"\n![XBcHdy](https://cdn.jsdelivr.net/gh/funnypan/pics@master/uPic/XBcHdy.jpg)\n\nCypress 包含测试网站所必须的所有组件，可以快速编写测试用例。\n\n## 下载源码\n\n```shell\ngit clone github.com/ahfarmer/emoji-search\n#安装依赖\ncd emoji-search && npm install\n#启动项目\nnpm run start\n#访问http://localhost:3000\n```\n\n![65rXws](https://cdn.jsdelivr.net/gh/funnypan/pics@master/uPic/65rXws.jpg)\n\n## 安装 Cypress\n\n```shell\n#安装\nnpm install cypress —save-dev\n\n#启动\nnpx cypress open\n#或者\n./node_modules/.bin/cypress open\n#或者\n$(npm bin)/cypress open\n```\n\n以上命令将会在项目根目录创建`cypress`文件夹，如下： ![09GuGd](https://cdn.jsdelivr.net/gh/funnypan/pics@master/uPic/09GuGd.jpg)\n\n## 创建测试用例\n\n默认情况下，所有测试都存储在`cypress/integration`文件夹中，该文件夹在第一次`Cypress`启动时自动创建。在此示例中，我们将编写一个测试，该测试将：\n\n检查输入单词`lollipop`后是否在页面上仅显示一个结果\n\n检查标题类的标签是否包含正确的文本\n\n首先在`cypress/integration`目录中创建一个`sample_spec.js`文件：\n\n该文件应包含以下代码：\n\n```javascript\ndescribe('Sample test', () => {\n  it('Search lollipop emoji', () => {\n    cy.visit('http://localhost:3000/'); // launch project website\n    cy.get('input').type('lollipop'); // enter 'lollipop' in search\n    cy.get('.component-emoji-result-row').should('have.length', 1); // check if only 1 result is returned\n    cy.contains('Lollipop').should('have.class', 'title'); // check if returned element contains 'title' class\n  });\n});\n```\n\n你将会看到这样的窗口：\n\n![ZabqgO](https://cdn.jsdelivr.net/gh/funnypan/pics@master/uPic/ZabqgO.jpg)\n\n单击`sample_spec.js`后，将打开一个带有搜索引擎实例的窗口，您可以在其中实时预览执行的测试。结果应如下所示（请记住，带有示例性网站的项目应该正在运行）：\n\n![3NotH3](https://cdn.jsdelivr.net/gh/funnypan/pics@master/uPic/3NotH3.jpg)\n","slug":"translate/cypress测试入门"}]},"__N_SSG":true}