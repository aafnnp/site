{"pageProps":{"data":{"date":"October 12, 2020","title":"Linux命令gunzip","tags":["linux"],"description":"“gunzip”命令的快速指南，用于解压缩gzip文件。","fromNow":"a year ago"},"content":{"compiledSource":"var s=Object.defineProperty,N=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var t=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var u=(e,a,l)=>a in e?s(e,a,{enumerable:!0,configurable:!0,writable:!0,value:l}):e[a]=l,p=(e,a)=>{for(var l in a||(a={}))i.call(a,l)&&u(e,l,a[l]);if(t)for(var l of t(a))r.call(a,l)&&u(e,l,a[l]);return e},o=(e,a)=>N(e,g(a));var m=(e,a)=>{var l={};for(var n in e)i.call(e,n)&&a.indexOf(n)<0&&(l[n]=e[n]);if(e!=null&&t)for(var n of t(e))a.indexOf(n)<0&&r.call(e,n)&&(l[n]=e[n]);return l};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(l){var n=l,{components:e}=n,a=m(n,[\"components\"]);return mdx(MDXLayout,o(p(p({},layoutProps),a),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"\\u201Cgunzip\\u201D\\u547D\\u4EE4\\u7684\\u5FEB\\u901F\\u6307\\u5357\\uFF0C\\u7528\\u4E8E\\u89E3\\u538B\\u7F29 gzip \\u6587\\u4EF6\\u3002\"),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"gunzip\"),\"\\u547D\\u4EE4\\u57FA\\u672C\\u4E0A\\u7B49\\u540C\\u4E8E\",mdx(\"strong\",{parentName:\"p\"},\"gzip\"),\"\\u547D\\u4EE4\\uFF0C\\u4F46\\u9ED8\\u8BA4\\u60C5\\u51B5-d \\u9009\\u9879\\u59CB\\u7EC8\\u5904\\u4E8E\\u542F\\u7528\\u72B6\\u6001\\u3002\"),mdx(\"h2\",null,\"\\u4F7F\\u7528\\u65B9\\u6CD5\"),mdx(\"pre\",null,mdx(\"code\",p({parentName:\"pre\"},{className:\"language-shell\"}),`gunzip filename.gz\n`)),mdx(\"p\",null,\"\\u8FD9\\u5C06\",mdx(\"strong\",{parentName:\"p\"},\"gunzip\"),\"\\u5E76\\u5220\\u9664\",mdx(\"strong\",{parentName:\"p\"},\".gz\"),\"\\u6269\\u5C55\\u540D\\uFF0C\\u5C06\\u7ED3\\u679C\\u653E\\u5165\\u6587\\u4EF6\\u540D\\u6587\\u4EF6\\u4E2D\\u3002\\u5982\\u679C\\u8BE5\\u6587\\u4EF6\\u5B58\\u5728\\uFF0C\\u5B83\\u5C06\\u8986\\u76D6\\u8BE5\\u6587\\u4EF6\\u3002\"),mdx(\"p\",null,\"\\u53EF\\u4EE5\\u4F7F\\u7528-c \\u9009\\u9879\\u4F7F\\u7528\\u8F93\\u51FA\\u91CD\\u5B9A\\u5411\\u5C06\\u5176\\u63D0\\u53D6\\u5230\\u5176\\u4ED6\\u6587\\u4EF6\\u540D\\uFF1A\"),mdx(\"pre\",null,mdx(\"code\",p({parentName:\"pre\"},{className:\"language-shell\"}),`gunzip -c filename.gz > anotherfilename\n`)),mdx(\"p\",null,\"gunzip \\u547D\\u4EE4\\u53EF\\u4EE5\\u5728 Linux\\u3001macOS\\u3001WSL \\u548C\\u4EFB\\u4F55\\u6709 UNIX \\u73AF\\u5883\\u7684\\u5730\\u65B9\\u4F7F\\u7528\"),mdx(\"h2\",null,\"\\u53C2\\u6570\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"-a \\u6216--ascii \\u3000\\u4F7F\\u7528 ASCII \\u6587\\u5B57\\u6A21\\u5F0F\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-c \\u6216--stdout \\u6216--to-stdout \\u3000\\u628A\\u89E3\\u538B\\u540E\\u7684\\u6587\\u4EF6\\u8F93\\u51FA\\u5230\\u6807\\u51C6\\u8F93\\u51FA\\u8BBE\\u5907\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-f \\u6216-force \\u3000\\u5F3A\\u884C\\u89E3\\u5F00\\u538B\\u7F29\\u6587\\u4EF6\\uFF0C\\u4E0D\\u7406\\u4F1A\\u6587\\u4EF6\\u540D\\u79F0\\u6216\\u786C\\u8FDE\\u63A5\\u662F\\u5426\\u5B58\\u5728\\u4EE5\\u53CA\\u8BE5\\u6587\\u4EF6\\u662F\\u5426\\u4E3A\\u7B26\\u53F7\\u8FDE\\u63A5\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-h \\u6216--help \\u3000\\u5728\\u7EBF\\u5E2E\\u52A9\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-l \\u6216--list \\u3000\\u5217\\u51FA\\u538B\\u7F29\\u6587\\u4EF6\\u7684\\u76F8\\u5173\\u4FE1\\u606F\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-L \\u6216--license \\u3000\\u663E\\u793A\\u7248\\u672C\\u4E0E\\u7248\\u6743\\u4FE1\\u606F\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-n \\u6216--no-name \\u3000\\u89E3\\u538B\\u7F29\\u65F6\\uFF0C\\u82E5\\u538B\\u7F29\\u6587\\u4EF6\\u5185\\u542B\\u6709\\u8FDC\\u6765\\u7684\\u6587\\u4EF6\\u540D\\u79F0\\u53CA\\u65F6\\u95F4\\u6233\\u8BB0\\uFF0C\\u5219\\u5C06\\u5176\\u5FFD\\u7565\\u4E0D\\u4E88\\u5904\\u7406\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-N \\u6216--name \\u3000\\u89E3\\u538B\\u7F29\\u65F6\\uFF0C\\u82E5\\u538B\\u7F29\\u6587\\u4EF6\\u5185\\u542B\\u6709\\u539F\\u6765\\u7684\\u6587\\u4EF6\\u540D\\u79F0\\u53CA\\u65F6\\u95F4\\u6233\\u8BB0\\uFF0C\\u5219\\u5C06\\u5176\\u56DE\\u5B58\\u5230\\u89E3\\u5F00\\u7684\\u6587\\u4EF6\\u4E0A\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-q \\u6216--quiet \\u3000\\u4E0D\\u663E\\u793A\\u8B66\\u544A\\u4FE1\\u606F\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-r \\u6216--recursive \\u3000\\u9012\\u5F52\\u5904\\u7406\\uFF0C\\u5C06\\u6307\\u5B9A\\u76EE\\u5F55\\u4E0B\\u7684\\u6240\\u6709\\u6587\\u4EF6\\u53CA\\u5B50\\u76EE\\u5F55\\u4E00\\u5E76\\u5904\\u7406\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-S<\\u538B\\u7F29\\u5B57\\u5C3E\\u5B57\\u7B26\\u4E32>\\u6216--suffix<\\u538B\\u7F29\\u5B57\\u5C3E\\u5B57\\u7B26\\u4E32> \\u3000\\u66F4\\u6539\\u538B\\u7F29\\u5B57\\u5C3E\\u5B57\\u7B26\\u4E32\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-t \\u6216--test \\u3000\\u6D4B\\u8BD5\\u538B\\u7F29\\u6587\\u4EF6\\u662F\\u5426\\u6B63\\u786E\\u65E0\\u8BEF\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-v \\u6216--verbose \\u3000\\u663E\\u793A\\u6307\\u4EE4\\u6267\\u884C\\u8FC7\\u7A0B\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-V \\u6216--version \\u663E\\u793A\\u7248\\u672C\\u4FE1\\u606F\\u3002\")))}MDXContent.isMDXComponent=!0;\n","scope":{"date":"October 12, 2020","title":"Linux命令gunzip","tags":["linux"],"description":"“gunzip”命令的快速指南，用于解压缩gzip文件。","fromNow":"a year ago"}},"randomPost":[{"data":{"date":"January 8, 2021","title":"Dockerfile","description":"Dockerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明","tags":["docker"],"fromNow":"a year ago"},"content":"\n> Dockerfile 是一个包含用于组合映像的命令的文本文档。可以使用在命令行中调用任何命令。 Docker 通过读取 Dockerfile 中的指令自动生成映像。 docker build 命令用于从 Dockerfile 构建映像。可以在 docker build 命令中使用-f 标志指向文件系统中任何位置的 Dockerfile。\n\n## 文件说明\n\nDocker 从上到下的顺序运行 Dockerfile 的指令，第一条指令必须是 FROM。\n\n1. FROM\n\n用于设置基本映像，FROM 必须作为第一条指令\n\n2. LABEL\n\n用于添加标签，设置映像标签\n\n```dockerfile\nLABEL maintainer=\"manon.icu\"\n```\n\n3. RUN\n\n用于执行当前映像的任何命令\n\n```dockerfile\nRUN /bin/bash -c \"source $HOME/.bashrc;echo $HOME\"\n```\n\n4. CMD\n\n用于执行映像的应用程序\n\n```dockerfile\nCMD [\"executable\",\"param1\",\"param2\"]\n```\n\n5. COPY/ADD\n\n用于将源文件复制到目的地\n\n```dockerfile\nCOPY dist /www/dist\n```\n\n6. WORKDIR\n\n用于为 RUN/CMD/COPY 指令设置工作目录，如不存在，会默认创建\n\n## 完整的 Dockerfile\n\n```dockerfile\nFROM node:lts-alpine\n\nWORKDIR /app\nADD . /app\nRUN npm install\n\nCMD [\"npm\", \"start\"]\n```\n\n## 更多\n","slug":"docker/Dockerfiles"},{"data":{"date":"November 24, 2021","title":"Strings","tags":["python"],"description":"","fromNow":"21 days ago"},"content":"\n## 字符串文本\n\n> 字符串文本通常是由单引号或者双引号括起来的。通常单行单引号，多行三引号。\n\n```python\n# Single quote\na = 'Yeah but no but yeah but...'\n\n# Double quote\nb = \"computer says no\"\n\n# Triple quotes\nc = '''\nLook into my eyes, look into my eyes, the eyes, the eyes, the eyes,\nnot around the eyes,\ndon't look around the eyes,\nlook into my eyes, you're under.\n'''\n```\n\n## 字符串转义\n\n```python\n'\\n'      # 换行\n'\\r'      # 回车\n'\\t'      # 水平制表符\n'\\''      # 单引号\n'\\\"'      # 双引号\n'\\\\'      # 反斜杠\n```\n\n## 字符串运算\n\n```python\n+  # 字符串连接\n*  # 重复\n[] # 取子串\n[:] # 截取字符串的一部分\nin # 判断字符串是否包含某个字符串\nnot in # 判断字符串是否不包含某个字符串\nr/re # 匹配字符串\n% # 格式化字符串\n\n\na = \"Hello\"\nb = \"Python\"\n\nprint \"a + b 输出结果：\", a + b\nprint \"a * 2 输出结果：\", a * 2\nprint \"a[1] 输出结果：\", a[1]\nprint \"a[1:4] 输出结果：\", a[1:4]\n\nif( \"H\" in a) :\n    print \"H 在变量 a 中\"\nelse :\n    print \"H 不在变量 a 中\"\n\nif( \"M\" not in a) :\n    print \"M 不在变量 a 中\"\nelse :\n    print \"M 在变量 a 中\"\n\nprint r'\\n'\nprint R'\\n'\n```\n\n## 字符串方法\n\n```python\ns = ' Hello'\nt = s.strip() #'Hello'去除空格\nl = s.lower() #' hello' 全部转换为小写\nu = s.upper() #' HELLO' 全部转换为大写\nc = s.capitalize() #'Hello' 字符串首字母大写\nt = s.replace('H', 'J') #'Jello' 将所有的H替换为J\n\ns.endswith(suffix)     # 判断字符串是否以指定后缀结尾\ns.find(t)              # 查找字符串中指定字符或字符串的索引位置\ns.index(t)             # 查找字符串中指定字符或字符串的索引位置\ns.isalpha()            # 判断字符串是否只有字母\ns.isdigit()            # 判断字符串是否只有数字\ns.islower()            # 判断字符串是否只有小写\ns.isupper()            # 判断字符串是否只有大写\ns.join(slist)          # 将字符串s与字符串列表slist中的字符串连接\ns.lower()              # 转换字符串中所有大写字符为小写\ns.replace(old,new)     # 替换字符串中的指定字符串\ns.rfind(t)             # 从右边开始查找字符串中指定字符或字符串的索引位置\ns.rindex(t)            # 从右边开始查找字符串中指定字符或字符串的索引位置\ns.split([delim])       # 将字符串分割成一个列表\ns.startswith(prefix)   # 判断字符串是否以指定前缀开头\ns.strip()              # 去掉字符串左右两边的空格\ns.upper()              # 转换字符串中的小写字母为大写\n```\n\n## 字符串类型转换\n\n> 使用`str()`将任何值转换成字符串\n\n```python\nx=42\nstr(x) #'42'\n```\n\n## 其他字符类型\n\n```python\n# 字节类型\ndata = b'Hello World\\r\\n'\nlen(data)                         # 13\ndata[0:5]                         # b'Hello'\ndata.replace(b'Hello', b'Cruel')  # b'Cruel World\\r\\n'\n\n# Raw字节类型\n>>> rs = r'c:\\newdata\\test' # Raw (uninterpreted backslash)\n>>> rs\n'c:\\\\newdata\\\\test'\n\n# f-string\n>>> name = 'IBM'\n>>> shares = 100\n>>> price = 91.1\n>>> a = f'{name:>10s} {shares:10d} {price:10.2f}'\n>>> a\n'       IBM        100      91.10'\n>>> b = f'Cost = ${shares*price:0.2f}'\n>>> b\n'Cost = $9110.00'\n>>>\n```\n","slug":"python/1.3-strings"},{"data":{"date":"April 13, 2021","title":"一些有用的Html&&css&&javascript Tips","tags":["i18n","javascript","css"],"fromNow":"8 months ago"},"content":"\n![dqCXJX](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/dqCXJX.jpg)\n\n<CodePen codePenId=\"VwKzaEm\" />\n\n## `loading=lazy`属性\n\n> 这是一个性能优化的措施，图片懒加载\n\n```html\n<img src=\"image.jpg\" loading=\"lazy\" alt=\"Alternative Text\" />\n```\n\n## Email、tel、sms\n\n```html\n<a href=\"mailto:{email}?subject={subject}&body={content}\"> Send us an email </a>\n\n<a href=\"tel:{phone}\"> Call us </a>\n\n<a href=\"sms:{phone}?body={content}\"> Send us a message </a>\n```\n\n## 列表`start`属性\n\n> 使用`start`属性改变列表的初始序号\n\n![XNg0zd](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/XNg0zd.jpg)\n\n## meter Element\n\n> 无需 js、css 写出 progress bar\n\n```html\n<label for=\"value1\">Low</label>\n<meter\n  id=\"value1\"\n  min=\"0\"\n  max=\"100\"\n  low=\"30\"\n  high=\"75\"\n  optimum=\"80\"\n  value=\"25\"\n></meter>\n\n<label for=\"value2\">Medium</label>\n<meter\n  id=\"value2\"\n  min=\"0\"\n  max=\"100\"\n  low=\"30\"\n  high=\"75\"\n  optimum=\"80\"\n  value=\"50\"\n></meter>\n\n<label for=\"value3\">High</label>\n<meter\n  id=\"value3\"\n  min=\"0\"\n  max=\"100\"\n  low=\"30\"\n  high=\"75\"\n  optimum=\"80\"\n  value=\"80\"\n></meter>\n```\n\n![xAOKxW](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/xAOKxW.jpg)\n\n## html 原生搜索\n\n```html\n<div class=\"wrapper\">\n  <h1>Native HTML Search</h1>\n\n  <input list=\"items\" />\n\n  <datalist id=\"items\">\n    <option value=\"Marko Denic\"></option>\n    <option value=\"FreeCodeCamp\"></option>\n    <option value=\"FreeCodeTools\"></option>\n    <option value=\"Web Development\"></option>\n    <option value=\"Web Developer\"></option>\n  </datalist>\n</div>\n```\n\n![KIOpYV](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/KIOpYV.jpg)\n\n## Fieldset Element\n\n```html\n<form>\n  <fieldset>\n    <legend>Choose your favorite language</legend>\n\n    <input type=\"radio\" id=\"javascript\" name=\"language\" />\n    <label for=\"javascript\">JavaScript</label><br />\n\n    <input type=\"radio\" id=\"python\" name=\"language\" />\n    <label for=\"python\">Python</label><br />\n\n    <input type=\"radio\" id=\"java\" name=\"language\" />\n    <label for=\"java\">Java</label>\n  </fieldset>\n</form>\n```\n\n![6gS5fT](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/6gS5fT.jpg)\n\n## Window.opener\n\n> 用`target = \"_ blank\"`打开的页面允许新页面访问原始页面的`window.opener`。这可能具有安全性和性能影响。包括`rel = \"noopener\"或者`rel = \"noreferer\"`来防止这种情况。\n\n```html\n<a href=\"https://markodenic.com/\" target=\"_blank\" rel=\"noopener\">\n  Marko's website\n</a>\n```\n\n## Base Element\n\n> 如果需要在新标签打开所有的链接，使用`base`\n\n```html\n<head>\n  <base target=\"_blank\" />\n</head>\n<!-- This link will open in a new tab. -->\n<div class=\"wrapper\">\n  This link will be opened in a new tab: &nbsp;\n  <a href=\"https://freecodetools.org/\"> Free Code Tools </a>\n\n  <p>\n    Read more: <br /><a\n      href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base\"\n    >\n      MDN Documentation\n    </a>\n  </p>\n</div>\n```\n\n## 去除 favicon 缓存\n\n> 使用时间戳或者其他版本信息去除缓存，这样每次获取的 favicon 都是新的\n\n```html\n<link rel=\"icon\" href=\"/favicon.ico?v=2\" />\n```\n\n## 原生 sliders\n\n```html\n<label for=\"volume\">Volume: </label>\n<input type=\"range\" id=\"volume\" name=\"volume\" min=\"0\" max=\"20\" />\n\n<label for=\"result\">Your choice: </label>\n<input type=\"number\" id=\"result\" name=\"result\" />\n```\n\n![8tZXxw](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/8tZXxw.jpg)\n\n## html Accordion\n\n```html\n<div class=\"wrapper\">\n  <details>\n    <summary>Click me to see more details</summary>\n\n    <p>\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut eum\n      perferendis eius. Adipisci velit et similique earum quas illo odio rerum\n      optio, quis, expedita assumenda enim dicta aliquam porro maxime minima sed\n      a ullam, aspernatur corporis.\n    </p>\n  </details>\n</div>\n```\n\n![gqU6rS](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/gqU6rS.jpg)\n\n## mark 标签\n\n> 使用`mark`标签高亮文字\n\n![USVaFH](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/USVaFH.jpg)\n\n## `download`属性\n\n```html\n<a href=\"path/to/file\" download> Download </a>\n```\n\n## picture 标签\n\n```html\n<picture>\n  <!-- load .webp image if supported -->\n  <source srcset=\"logo.webp\" type=\"image/webp\" />\n\n  <!--\n\tFallback if `.webp` images or <picture> tag\n\tnot supported by the browser.\n  -->\n  <img src=\"logo.png\" alt=\"logo\" />\n</picture>\n```\n\n![XwNY7B](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/XwNY7B.jpg)\n\n## fancy text\n\n![FYjzyB](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/FYjzyB.png)\n\n```html\n<h1>CSS IS AWESOME</h1>\n\n<style>\n  h1 {\n    background: blue url('https://picsum.photos/id/1015/200/300');\n    background-clip: text;\n    -webkit-background-clip: text;\n    color: transparent;\n    margin-top: 20px;\n    font-size: 120px;\n  }\n</style>\n```\n\n## caret-color\n\n> 改变光标颜色\n\n![xgF4Hf](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/xgF4Hf.jpg)\n\n## CSS only tooltips\n\n![HoUV0U](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/HoUV0U.png)\n\n```html\n<h1>HTML/CSS tooltip</h1>\n\n<p>\n  Hover <span class=\"tooltip\" data-tooltip=\"Tooltip Content\">Here</span> to see\n  the tooltip.\n</p>\n\n<p>\n  You can also hover\n  <span class=\"tooltip\" data-tooltip=\"This is another Tooltip Content\"\n    >here</span\n  >\n  to see another example.\n</p>\n\n<style>\n  .tooltip {\n    position: relative;\n    border-bottom: 1px dotted black;\n  }\n\n  /* Tooltip box */\n  .tooltip:before {\n    content: attr(data-tooltip);\n    position: absolute;\n    width: 100px;\n    background-color: #062b45;\n    color: #fff;\n    text-align: center;\n    padding: 10px;\n    line-height: 1.2;\n    border-radius: 6px;\n    z-index: 1;\n    opacity: 0;\n    transition: opacity 0.6s;\n    bottom: 125%;\n    left: 50%;\n    margin-left: -60px;\n    font-size: 0.75em;\n  }\n\n  /* Tooltip arrow */\n  .tooltip:after {\n    content: '';\n    position: absolute;\n    bottom: 75%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    opacity: 0;\n    transition: opacity 0.6s;\n    border-color: #062b45 transparent transparent transparent;\n  }\n\n  .tooltip:hover:before,\n  .tooltip:hover:after {\n    opacity: 1;\n  }\n</style>\n```\n\n<!-- TODO -->\n\n- [x] javascript\n","slug":"translate/some-tips"},{"data":{"date":"July 30, 2017","title":"css的小技巧","tags":["css"],"fromNow":"4 years ago"},"content":"\n1. 使用 CSS 复位\n\n不同浏览器有不同的自带初始样式，通常可以使用 normalize.css、tinyreset.css 进行通配初始化。\n\n```css\n*,\n*:after,\n*:before {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n```\n\n2. 继承 box-sizing\n\n```css\nhtml {\n  box-sizing: border-box;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n```\n\n3. 使用 unset 而不是重置所有属性\n4. 使用 :not() 选择器来决定表单是否显示边框\n5. 为 body 元素添加行高\n6. 為表單元素設置:focus\n7. 垂直居中任何元素\n8. 逗号分隔的列表\n9. 使用负的 nth-child 来选择元素\n10. 使用 SVG 图标\n11. 使用 “形似猫头鹰” 的选择器\n12. 使用 max-height 来建立纯 CSS 的滑块\n13. 创造格子等宽的表格\n14. 利用 Flexbox 去除多余的外边距\n15. 利用属性选择器来选择空链接\n16. 给 “默认” 链接定义样式\n17. 一致的垂直节奏\n18. 内在比例盒\n19. 为破碎图象定义样式\n20. 用 rem 来调整全局大小；用 em 来调整局部大小\n21. 隐藏没有静音、自动播放的影片\n22. 使用选择器 :root 来控制字体弹性\n23. 为更好的移动体验，为表单元素设置字体大小\n24. 使用指针事件來控制鼠标事件\n","slug":"css/小技巧-ChicksTricks"},{"data":{"date":"April 5, 2021","title":"循环","tags":["swift"],"description":"取得成功的秘诀就是开始","fromNow":"8 months ago"},"content":"\nSwift 有三种循环：\n\n- for\n- while\n- repeat\n\n## for 循环\n\n> 用来重复执行一系列语句直到达成特定条件，如下图：\n\n![sgvlgu](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/sgvlgu.png)\n\n```swift\n// 语法\nfor init; condition; increment{\n   // do something\n}\n\n// example\nlet albums = [\"Red\", \"1989\", \"Reputation\"]\nfor album in albums {\n    print(\"\\(album) is on Apple Music\")\n}\n```\n\n## while 循环\n\n> while 循环从计算单一条件开始。如果条件为 true，会重复运行一系列语句，直到条件变为 false。\n\n![WOrVgL](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/WOrVgL.png)\n\n```swift\n// 语法\nwhile condition{\n   // do something\n}\n// example\nvar number = 1\n\nwhile number <= 20 {\n    print(number)\n    number += 1\n}\n\nprint(\"Ready or not, here I come!\")\n```\n\n## repeat 循环\n\n> repeat...while 循环不像 for 和 while 循环在循环体开始执行前先判断条件语句，而是在循环执行结束时判断条件是否符合。 `repeat...while无论条件是否符合，循环会执行至少一次`\n\n![bF7YMc](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/bF7YMc.png)\n\n```swift\n// 语法\nrepeat{\n   statement(s);\n}while( condition );\n\n// example\nvar number = 1\n\nrepeat {\n    print(number)\n    number += 1\n} while number <= 20\n\nprint(\"Ready or not, here I come!\")\n```\n\n## 退出循环\n\n使用`break`退出循环语句，比如在 while 循环中：\n\n```swift\nwhile countDown >= 0 {\n    print(countDown)\n\n    if countDown == 4 {\n        print(\"I'm bored. Let's go now!\")\n\t\t// 当countDown等于4的时候会退出循环\n        break\n    }\n\n    countDown -= 1\n}\n```\n\n## 退出多重循环\n\n在嵌套循环中，想要同时打破内循环和外循环是很常见的。举个例子，我们可以编写一些代码来计算从 1 到 10 的乘法表，如下所示:\n\n```swift\nfor i in 1...10 {\n    for j in 1...10 {\n        let product = i * j\n        print (\"\\(i) * \\(j) is \\(product)\")\n    }\n}\n```\n\n如果需要退出这个双重循环，需要做两步，首先，给外循环加上 label:`outerLoop`\n\n```swift\nouterLoop: for i in 1...10 {\n    for j in 1...10 {\n        let product = i * j\n        print (\"\\(i) * \\(j) is \\(product)\")\n    }\n}\n```\n\n第二步，在内循环执行`break outerLoop`\n\n```swift\nouterLoop: for i in 1...10 {\n    for j in 1...10 {\n        let product = i * j\n        print (\"\\(i) * \\(j) is \\(product)\")\n\n        if product == 50 {\n            print(\"It's a bullseye!\")\n            break outerLoop\n        }\n    }\n}\n```\n\n## 跳过条件 - continue\n\n> `break`退出循环。但是，如果只想跳过当前条件，继续下一个条件，应该使用`continue`。比如如下跳过奇数：\n\n```swift\nfor i in 1...10 {\n    if i % 2 == 1 {\n        continue\n    }\n\n    print(i)\n}\n```\n","slug":"swift/100days/day04"},{"data":{"date":"December 21, 2020","title":"Docker images","description":"Docker 把应用程序及其依赖，打包在 image 文件里面。只有通过这个文件，才能生成 Docker 容器","tags":["docker"],"fromNow":"a year ago"},"content":"\nDocker 把应用程序及其依赖，打包在 image 文件里面。只有通过这个文件，才能生成 Docker 容器。image 文件可以看作是容器的模板。Docker 根据 image 文件生成容器的实例。同一个 image 文件，可以生成多个同时运行的容器实例。\n\nimage 是二进制文件。实际开发中，一个 image 文件往往通过继承另一个 image 文件，加上一些个性化设置而生成。举例来说，你可以在 Ubuntu 的 image 基础上，往里面加入 Apache 服务器，形成你的 image。\n\n```shell\n# 列出本机的所有 image 文件。\n$ docker image ls\n\n# 删除 image 文件\n$ docker image rm [imageName]\n```\n\nimage 文件是通用的，一台机器的 image 文件拷贝到另一台机器，照样可以使用。一般来说，为了节省时间，我们应该尽量使用别人制作好的 image 文件，而不是自己制作。即使要定制，也应该基于别人的 image 文件进行加工，而不是从零开始制作。\n\n为了方便共享，image 文件制作完成后，可以上传到网上的仓库。Docker 的官方仓库 Docker Hub 是最重要、最常用的 image 仓库。此外，出售自己制作的 image 文件也是可以的。\n\n## 更多\n","slug":"docker/Docker镜像"}]},"__N_SSG":true}