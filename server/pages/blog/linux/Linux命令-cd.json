{"pageProps":{"data":{"date":"October 13, 2020","title":"Linux命令cd","tags":["linux"],"description":"cd命令用于切换当前工作目录","fromNow":"a year ago"},"content":{"compiledSource":"var s=Object.defineProperty,l=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var c=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var u=(e,o,t)=>o in e?s(e,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[o]=t,a=(e,o)=>{for(var t in o||(o={}))c.call(o,t)&&u(e,t,o[t]);if(p)for(var t of p(o))r.call(o,t)&&u(e,t,o[t]);return e},d=(e,o)=>l(e,h(o));var m=(e,o)=>{var t={};for(var n in e)c.call(e,n)&&o.indexOf(n)<0&&(t[n]=e[n]);if(e!=null&&p)for(var n of p(e))o.indexOf(n)<0&&r.call(e,n)&&(t[n]=e[n]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var n=t,{components:e}=n,o=m(n,[\"components\"]);return mdx(MDXLayout,d(a(a({},layoutProps),o),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"cd\"),\"\\u547D\\u4EE4\\u7528\\u4E8E\\u5207\\u6362\\u5F53\\u524D\\u5DE5\\u4F5C\\u76EE\\u5F55\\u3002\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},\"~ \\u4E5F\\u8868\\u793A\\u4E3A home \\u76EE\\u5F55 \\u7684\\u610F\\u601D\\uFF0C . \\u5219\\u662F\\u8868\\u793A\\u76EE\\u524D\\u6240\\u5728\\u7684\\u76EE\\u5F55\\uFF0C .. \\u5219\\u8868\\u793A\\u76EE\\u524D\\u76EE\\u5F55\\u4F4D\\u7F6E\\u7684\\u4E0A\\u4E00\\u5C42\\u76EE\\u5F55\")),mdx(\"h2\",null,\"\\u4F7F\\u7528\\u65B9\\u6CD5\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell\"}),`#\\u5207\\u6362\\u5230\\u67D0\\u4E2A\\u76EE\\u5F55\ncd foldername\n\n#\\u5F53\\u524D\\u6240\\u5728\\u76EE\\u5F55\ncd .\n\n#\\u5207\\u6362\\u5230\\u4E0A\\u4E00\\u5C42\\u76EE\\u5F55\ncd ..\n\n#\\u5207\\u6362\\u5230home\\u76EE\\u5F55\ncd ~\n\n#\\u5207\\u6362\\u5230\\u6839\\u76EE\\u5F55\ncd /\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"date":"October 13, 2020","title":"Linux命令cd","tags":["linux"],"description":"cd命令用于切换当前工作目录","fromNow":"a year ago"}},"randomPost":[{"data":{"date":"September 3, 2021","title":"JavaScript - Ultimate Free Resources","tags":["javascript"],"fromNow":"3 months ago"},"content":"\n## 文档(Documentation)\n\nMDN (Mozilla) JavaScript 参考是带有示例和其他信息的主要文档。\n\n- [MDN JavaScript Docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript.)\n\n## 兼容性(Compatibility tables)\n\n由于 `JavaScript` 是一门持续开发中的语言，所以会定期添加新的特性，其中一些特性可能不会被所有的浏览器或引擎所支持。下面的网站可以帮助你识别哪些功能是由哪些浏览器/引擎或浏览器版本等所支持的。\n\n- [Can i Use](https://caniuse.com/#search=javascript)\n- [Compat Table](https://kangax.github.io/compat-table)\n\n## 编辑器(IDE's)\n\n一些比较热门的编辑器\n\n- [Sublime Text](https://www.sublimetext.com/)\n- [Atom](https://atom.io/)\n- [WebStorm](https://www.jetbrains.com/webstorm/)\n- [Visual Studio Code](https://code.visualstudio.com/)\n\n## 教程(Tutorials / Courses)\n\n- [MDN JavaScript Docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide)\n- [The Modern Javascript Tutorial](https://javascript.info/)\n- [Getting Started with JavaScript for Web Development Courses](https://scotch.io/courses/getting-started-with-javascript-for-web-development)\n- [ES6-features.org](http://es6-features.org/)\n- [JavaScript Tutorial](https://www.javascripttutorial.net/)\n- [ES6 Tutorial](https://www.javascripttutorial.net/es6/)\n- [Intro to ES6](https://scrimba.com/learn/introtoes6)\n- [Tutorials Point - ES6 for beginners](https://www.tutorialspoint.com/es6/index.htm)\n- [JavaScript Free Resources](https://www.java5cript.com/)\n\n## 视频(Videos/ Courses)\n\n- [Learn JavaScript - Full Course for Beginners - Video By freecodecamp.org](https://www.youtube.com/watch?v=PkZNo7MFNFg&list=PLWKjhJtqVAbleDe3_ZA8h3AO2rXar-q2V&ab_channel=freeCodeCamp.orgfreeCodeCamp.orgVerified)\n- [ES6 - JavaScript Improved](https://www.udacity.com/course/es6-javascript-improved--ud356)\n- [Javascript Essentials](https://www.udemy.com/course/javascript-essentials/)\n- [Learning ECMAScript The Next Generation of Javascript](https://www.udemy.com/course/ecmascript2015/)\n\n## 书籍(Books)\n\n- [Eloquent JavaScript](https://eloquentjavascript.net/)\n- [Understanding ECMAScript 6](http://superherojs.com/)\n- [JavaScript the Good Parts](https://andersonguelphjs.github.io/OReilly_JavaScript_The_Good_Parts_May_2008.pdf)\n- [Speaking JavaScript](http://speakingjs.com/es5/index.html)\n\n## 练习(Learn JavaScript by building small projects)\n\n- [30 Day Vanilla JS Coding Challenge](https://javascript30.com/)\n- [Learn Javascript by building 7 games](https://www.freecodecamp.org/news/learn-javascript-by-building-7-games-video-course/)\n- [24days of christmas](https://scrimba.com/learn/adventcalendar/welcome-to-24-days-of-javascriptmas-cg2QbehG)\n- [Learn JavaScript](https://scrimba.com/learn/learnjavascript)\n- [JavaScript Algorithms and Data Structures](https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/)\n- [Freecodecamp.org](https://www.freecodecamp.org/)\n- [Build a Quiz App with HTML, CSS, and JavaScript](https://www.udemy.com/course/build-a-quiz-app-with-html-css-and-javascript/)\n- [Smarter Way to learn JavaScript](http://www.asmarterwaytolearn.com/js/index-of-exercises.html)\n- [30 Days of JavaScript](https://github.com/Asabeneh/30-Days-Of-JavaScript)\n- [Learn JavaScript Online](https://learnjavascript.online/)\n- [learn-js.org interactive JavaScript tutorial.](https://www.learn-js.org/en/)\n\n## GitHub\n\n- [Javascript Algorithm and Data Structures](https://github.com/trekhleb/javascript-algorithms)\n- [33 JS Concepts](https://github.com/leonardomso/33-js-concepts)\n- [20+ Web Projects With Vanilla JavaScript](https://github.com/bradtraversy/vanillawebprojects)\n- [50 Projects in 50 Days - HTML/CSS and JavaScript](https://github.com/bradtraversy/50projects50days)\n- [JavaScript Style Guide](https://blog.kritikapattalam.com/[https://github.com/airbnb/javascript)\n- [30 seconds of code](https://github.com/30-seconds/30-seconds-of-code)\n- [30 Day Vanilla JS Coding Challenge](https://github.com/wesbos/JavaScript30)\n- [Clean Code Javascript](https://github.com/ryanmcdermott/clean-code-javascript)\n- [Javascript Questions](https://github.com/lydiahallie/javascript-questions)\n- [The Algorithms - JavaScript](https://github.com/TheAlgorithms/Javascript)\n\n## 编程挑战(Programming Challenges)\n\n- [Hackerrank](https://www.hackerrank.com/)\n- [Coding Game](https://www.codingame.com/)\n- [Leet Code](https://www.hackerrank.com/)\n- [Coder Byte](https://coderbyte.com/)\n- [Exercism](https://exercism.io/my/tracks/javascript)\n- [Elevator Saga](http://play.elevatorsaga.com/)\n- [Code Wars](https://www.codewars.com/)\n\n## 在线编辑器(Coding Ground)\n\n- [Codepen](https://codepen.io/)\n- [Js fiddle](https://jsfiddle.net/)\n- [Tutorials Point Coding Ground.](https://www.tutorialspoint.com/codingground.htm)\n- [CodeSandBox](https://codesandbox.io/)\n\n## 博客(Blogs)\n\n- [Dmitri Pavlutin](https://dmitripavlutin.com/)\n- [David Walsh](https://davidwalsh.name/)\n- [SuperHero.JS](https://superherojs.com/)\n- [Medium](https://medium.com/)\n- [dev.to](https://dev.to/)\n- [Hashnode](https://hashnode.com/)\n","slug":"javascript/Ultimate_Free_Resouce"},{"data":{"date":"February 10, 2019","title":"online&offline","tags":["javascript"],"description":"当浏览器从在线与离线状态中切换时，这两个事件会在页面的 body 上触发","fromNow":"3 years ago"},"content":"\n> 当浏览器从在线与离线状态中切换时，这两个事件会在页面的 body 上触发，并冒泡到 document 和 window。可使用 window、document、document.body、添加监听事件`addEventListener`。\n\n## 使用方法\n\n```javascript\n//网络状态\nwindow.addEventListener('load', () => {\n  const updateOnlineStatus = () => {\n    this.online = navigator.onLine;\n  };\n\n  window.addEventListener('online', updateOnlineStatus);\n  window.addEventListener('offline', updateOnlineStatus);\n});\n```\n","slug":"apis/online-offline"},{"data":{"date":"October 26, 2021","title":"Battery Api","tags":["javascript"],"description":"Battery Api提供了有关系统充电级别的信息并提供了通过电池等级或者充电状态的改变提醒用户的事件","fromNow":"2 months ago"},"content":"\nimport CanIUse from 'components/CanIUse.jsx';\n\n## Battery Api\n\n> 提供了有关系统充电级别的信息并提供了通过电池等级或者充电状态的改变提醒用户的事件，Battery Status API 向 window.navigator 扩展了一个 navigator.getBattery 方法，其返回了一个 battery promise, 完成后传递一个 BatteryManager 对象，并提供了一些新的可以操作电池状态的事件。\n\n<CanIUse tag=\"will-change\" />\n\n## 方法\n\n- chargingchange\n- levelchange\n- chargingtimechange\n- dischargingtimechange\n\n```javascript\nnavigator.getBattery().then(function (battery) {\n  console.log('Battery charging? ' + (battery.charging ? 'Yes' : 'No'));\n  console.log('Battery level: ' + battery.level * 100 + '%');\n  console.log('Battery charging time: ' + battery.chargingTime + ' seconds');\n  console.log(\n    'Battery discharging time: ' + battery.dischargingTime + ' seconds'\n  );\n\n  battery.addEventListener('chargingchange', function () {\n    console.log('Battery charging? ' + (battery.charging ? 'Yes' : 'No'));\n  });\n\n  battery.addEventListener('levelchange', function () {\n    console.log('Battery level: ' + battery.level * 100 + '%');\n  });\n\n  battery.addEventListener('chargingtimechange', function () {\n    console.log('Battery charging time: ' + battery.chargingTime + ' seconds');\n  });\n\n  battery.addEventListener('dischargingtimechange', function () {\n    console.log(\n      'Battery discharging time: ' + battery.dischargingTime + ' seconds'\n    );\n  });\n});\n```\n\n![r63S43](https://cdn.jsdelivr.net/gh/funnypan/pics@master/uPic/r63S43.png)\n\n[chrome-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/CDWccX.jpg\n[firefox-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/mqRvLw.jpg\n[ie-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/uKn6gH.jpg\n[opera-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/mpzJp6.jpg\n[safari-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/mIxpPG.jpg\n[edge-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/aoF7l0.jpg\n","slug":"apis/Battery"},{"data":{"date":"May 4, 2016","title":"老生常谈-居中","tags":["css"],"description":"几种居中的方法","fromNow":"6 years ago"},"content":"\n## 水平居中\n\n### Text\n\n```css\np {\n  text-align: center;\n}\n```\n\n### Blocks\n\n![image](https://cdn.jsdelivr.net/gh/funnypan/pics@master/images/20190125091332.png)\n\n```css\n/*flexbox*/\n#mysection {\n  display: flex;\n  justify-content: center;\n}\n\n/*margin*/\n#mysection {\n  margin: 0 auto;\n  width: 50%;\n}\n```\n\n## 垂直居中\n\n### Text\n\n![image](https://cdn.jsdelivr.net/gh/funnypan/pics@master/images/20190125092037.png)\n\n```css\n#mysection {\n  display: flex;\n  align-items: center;\n}\n```\n\n## 水平垂直居中\n\n![image](https://cdn.jsdelivr.net/gh/funnypan/pics@master/images/20190125091735.png)\n\n```css\n/*flex*/\n#mysection {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n/*grid*/\nbody {\n  display: grid;\n  place-items: center;\n  height: 100vh;\n}\n```\n","slug":"css/老生常谈-居中"},{"data":{"date":"November 20, 2021","title":"如何在 vue 中使用 Debounce、Throttle","tags":["vue","javascript"],"description":"如input、resize、scroll、intersection observer 等事件可能发生得非常频繁，例如每秒发生几次，因此调用一个动作，比如对每个事件发出读取请求，并不是一个明智的方法。","fromNow":"25 days ago"},"content":"\n## 为什么要使用 debounce 和 throttle\n\n防抖和节流就是针对响应跟不上触发频率这类问题的两种解决方案。在给 DOM 绑定事件时，有些事件我们是无法控制触发频率的。 如鼠标移动事件 onmousemove, 滚动滚动条事件 onscroll，窗口大小改变事件 onresize，瞬间的操作都会导致这些事件会被高频触发。 如果事件的回调函数较为复杂，就会导致响应跟不上触发，出现页面卡顿，假死现象。 在实时检查输入时，如果我们绑定 onkeyup 事件发请求去服务端检查，用户输入过程中，事件的触发频率也会很高，会导致大量的请求发出，响应速度会大大跟不上触发。\n\n## 在 watcher 中使用 debounce\n\n1. 在`created`生命周期将`this.debounce`绑定到`this`上，这样`this.debounce`就可以在`created`生命周期中使用。\n2. 在`watch`函数中，使用`this.debounce`调用`debounce`函数，并传入`this.debounce`的回调函数。\n3. 在事件销毁前，使用`this.debounce`调用`clear`函数，清除定时器。\n\n```html\n<template>\n  <input v-model=\"value\" type=\"text\" />\n  <p>{{ value }}</p>\n</template>\n<script>\n  import debounce from 'lodash.debounce';\n  export default {\n    data() {\n      return {\n        value: '',\n      };\n    },\n    watch: {\n      value(...args) {\n        this.debouncedWatch(...args);\n      },\n    },\n    created() {\n      this.debouncedWatch = debounce((newValue, oldValue) => {\n        console.log('New value:', newValue);\n      }, 500);\n    },\n    beforeUnmount() {\n      this.debouncedWatch.cancel();\n    },\n  };\n</script>\n```\n\n## 使用 debounce 处理事件\n\n```html\n<template>\n  <input v-on:input=\"debouncedHandler\" type=\"text\" />\n</template>\n<script>\n  import debounce from 'lodash.debounce';\n  export default {\n    created() {\n      this.debouncedHandler = debounce((event) => {\n        console.log('New value:', event.target.value);\n      }, 500);\n    },\n    beforeUnmount() {\n      this.debouncedHandler.cancel();\n    },\n  };\n</script>\n```\n\n为什么不适用`debounce`或`throttle`直接绑定函数呢？比如：\n\n```html\n<template>\n  <input v-on:input=\"debouncedHandler\" type=\"text\" />\n</template>\n<script>\n  import debounce from 'lodash.debounce';\n  export default {\n    methods: {\n      // Don't do this!\n      debouncedHandler: debounce(function (event) {\n        console.log('New value:', event.target.value);\n      }, 500),\n    },\n  };\n</script>\n```\n\n**使用`export default { ... }`从组件导出的 options 对象，包括方法，将被组件的所有实例重用。如果网页中有 2 个或更多的组件实例，那么所有的组件都将使用相同的`debounce`或`throttle`的函数方法。**\n\n## 总结\n\n在 `vue` 中使用 `debounce` 和 `throttle` 函数，应该在 `created` 和 `beforeUnmount` 生命周期中使用，而不是在 `watch` 中使用。\n\n```html\n<template>\n  <input v-on:input=\"debouncedHandler\" type=\"text\" />\n</template>\n<script>\n  export default {\n    created() {\n      this.debouncedCallback = debounce((...args) => {\n        // The debounced\n        callback;\n      }, 500);\n    },\n    watch: {\n      value(...args) {\n        this.debouncedCallback(...args);\n      },\n    },\n  };\n</script>\n```\n","slug":"vue/debounce-throttle"},{"data":{"date":"May 19, 2020","title":"MacbookPro-前端开发环境配置","tags":["i18n"],"fromNow":"2 years ago"},"content":"\n![](https://cdn.jsdelivr.net/gh/funnypan/pics@master/img/20200427135628.png)\n\n这是一份为 Web 开发准备的 Mac 配置指南，包括推荐工具，快捷方式，技巧等\n\n- macOS Settings\n  - System preferences\n  - Finder\n  - Screenshot\n- macOS Shortcuts\n- Command-line Tools\n  - Homebrew\n  - iTerm2\n  - Git\n  - Zsh\n  - Oh My Zsh\n  - Node.js\n  - Docker\n  - tldr\n  - htop\n  - fzf\n  - ripgrep\n  - path-extractor\n  - lnav\n- MacOS Applications\n  - Visual Studio Code\n  - Rectangle\n  - GIMP\n  - LICEcap\n  - Alfred\n  - Numi\n- Tips and Tricks\n","slug":"translate/MacbookPro-前端开发环境配置"}]},"__N_SSG":true}