{"pageProps":{"data":{"date":"October 28, 2020","title":"Linux命令traceroute","tags":["linux"],"description":"traceroute命令用于显示数据包到主机之间的路径","fromNow":"a year ago"},"content":{"compiledSource":"var c=Object.defineProperty,s=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var n=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var o=(e,t,a)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,r=(e,t)=>{for(var a in t||(t={}))n.call(t,a)&&o(e,a,t[a]);if(p)for(var a of p(t))i.call(t,a)&&o(e,a,t[a]);return e},u=(e,t)=>s(e,N(t));var m=(e,t)=>{var a={};for(var l in e)n.call(e,l)&&t.indexOf(l)<0&&(a[l]=e[l]);if(e!=null&&p)for(var l of p(e))t.indexOf(l)<0&&i.call(e,l)&&(a[l]=e[l]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var l=a,{components:e}=l,t=m(l,[\"components\"]);return mdx(MDXLayout,u(r(r({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"traceroute\"),\"\\u547D\\u4EE4\\u7528\\u4E8E\\u663E\\u793A\\u6570\\u636E\\u5305\\u5230\\u4E3B\\u673A\\u4E4B\\u95F4\\u7684\\u8DEF\\u5F84\\u3002\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},\"raceroute \\u547D\\u4EE4 \\u7528\\u4E8E\\u8FFD\\u8E2A\\u6570\\u636E\\u5305\\u5728\\u7F51\\u7EDC\\u4E0A\\u7684\\u4F20\\u8F93\\u65F6\\u7684\\u5168\\u90E8\\u8DEF\\u5F84\\uFF0C\\u5B83\\u9ED8\\u8BA4\\u53D1\\u9001\\u7684\\u6570\\u636E\\u5305\\u5927\\u5C0F\\u662F 40 \\u5B57\\u8282\\u3002\"),mdx(\"p\",{parentName:\"blockquote\"},\"\\u901A\\u8FC7 traceroute \\u6211\\u4EEC\\u53EF\\u4EE5\\u77E5\\u9053\\u4FE1\\u606F\\u4ECE\\u4F60\\u7684\\u8BA1\\u7B97\\u673A\\u5230\\u4E92\\u8054\\u7F51\\u53E6\\u4E00\\u7AEF\\u7684\\u4E3B\\u673A\\u662F\\u8D70\\u7684\\u4EC0\\u4E48\\u8DEF\\u5F84\\u3002\\u5F53\\u7136\\u6BCF\\u6B21\\u6570\\u636E\\u5305\\u7531\\u67D0\\u4E00\\u540C\\u6837\\u7684\\u51FA\\u53D1\\u70B9\\uFF08source\\uFF09\\u5230\\u8FBE\\u67D0\\u4E00\\u540C\\u6837\\u7684\\u76EE\\u7684\\u5730(destination)\\u8D70\\u7684\\u8DEF\\u5F84\\u53EF\\u80FD\\u4F1A\\u4E0D\\u4E00\\u6837\\uFF0C\\u4F46\\u57FA\\u672C\\u4E0A\\u6765\\u8BF4\\u5927\\u90E8\\u5206\\u65F6\\u5019\\u6240\\u8D70\\u7684\\u8DEF\\u7531\\u662F\\u76F8\\u540C\\u7684\\u3002\"),mdx(\"p\",{parentName:\"blockquote\"},\"traceroute \\u901A\\u8FC7\\u53D1\\u9001\\u5C0F\\u7684\\u6570\\u636E\\u5305\\u5230\\u76EE\\u7684\\u8BBE\\u5907\\u76F4\\u5230\\u5176\\u8FD4\\u56DE\\uFF0C\\u6765\\u6D4B\\u91CF\\u5176\\u9700\\u8981\\u591A\\u957F\\u65F6\\u95F4\\u3002\\u4E00\\u6761\\u8DEF\\u5F84\\u4E0A\\u7684\\u6BCF\\u4E2A\\u8BBE\\u5907 traceroute \\u8981\\u6D4B 3 \\u6B21\\u3002\\u8F93\\u51FA\\u7ED3\\u679C\\u4E2D\\u5305\\u62EC\\u6BCF\\u6B21\\u6D4B\\u8BD5\\u7684\\u65F6\\u95F4(ms)\\u548C\\u8BBE\\u5907\\u7684\\u540D\\u79F0\\uFF08\\u5982\\u6709\\u7684\\u8BDD\\uFF09\\u53CA\\u5176 ip \\u5730\\u5740\\u3002\")),mdx(\"h2\",null,\"\\u4F7F\\u7528\\u65B9\\u6CD5\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-shell\"}),`traceroute <host>\n`)),mdx(\"h2\",null,\"\\u6848\\u4F8B\"),mdx(\"p\",null,mdx(\"img\",r({parentName:\"p\"},{src:\"https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/1EOlsJ.png\",alt:\"1EOlsJ\"}))),mdx(\"h2\",null,\"\\u53C2\\u6570\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"-d \\u4F7F\\u7528 Socket \\u5C42\\u7EA7\\u7684\\u6392\\u9519\\u529F\\u80FD\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-f<\\u5B58\\u6D3B\\u6570\\u503C> \\u8BBE\\u7F6E\\u7B2C\\u4E00\\u4E2A\\u68C0\\u6D4B\\u6570\\u636E\\u5305\\u7684\\u5B58\\u6D3B\\u6570\\u503C TTL \\u7684\\u5927\\u5C0F\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-F \\u8BBE\\u7F6E\\u52FF\\u79BB\\u65AD\\u4F4D\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-g<\\u7F51\\u5173> \\u8BBE\\u7F6E\\u6765\\u6E90\\u8DEF\\u7531\\u7F51\\u5173\\uFF0C\\u6700\\u591A\\u53EF\\u8BBE\\u7F6E 8 \\u4E2A\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-i<\\u7F51\\u7EDC\\u754C\\u9762> \\u4F7F\\u7528\\u6307\\u5B9A\\u7684\\u7F51\\u7EDC\\u754C\\u9762\\u9001\\u51FA\\u6570\\u636E\\u5305\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-I \\u4F7F\\u7528 ICMP \\u56DE\\u5E94\\u53D6\\u4EE3 UDP \\u8D44\\u6599\\u4FE1\\u606F\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-m<\\u5B58\\u6D3B\\u6570\\u503C> \\u8BBE\\u7F6E\\u68C0\\u6D4B\\u6570\\u636E\\u5305\\u7684\\u6700\\u5927\\u5B58\\u6D3B\\u6570\\u503C TTL \\u7684\\u5927\\u5C0F\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-n \\u76F4\\u63A5\\u4F7F\\u7528 IP \\u5730\\u5740\\u800C\\u975E\\u4E3B\\u673A\\u540D\\u79F0\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-p<\\u901A\\u4FE1\\u7AEF\\u53E3> \\u8BBE\\u7F6E UDP \\u4F20\\u8F93\\u534F\\u8BAE\\u7684\\u901A\\u4FE1\\u7AEF\\u53E3\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-r \\u5FFD\\u7565\\u666E\\u901A\\u7684 Routing Table\\uFF0C\\u76F4\\u63A5\\u5C06\\u6570\\u636E\\u5305\\u9001\\u5230\\u8FDC\\u7AEF\\u4E3B\\u673A\\u4E0A\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-s<\\u6765\\u6E90\\u5730\\u5740> \\u8BBE\\u7F6E\\u672C\\u5730\\u4E3B\\u673A\\u9001\\u51FA\\u6570\\u636E\\u5305\\u7684 IP \\u5730\\u5740\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-t<\\u670D\\u52A1\\u7C7B\\u578B> \\u8BBE\\u7F6E\\u68C0\\u6D4B\\u6570\\u636E\\u5305\\u7684 TOS \\u6570\\u503C\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-v \\u8BE6\\u7EC6\\u663E\\u793A\\u6307\\u4EE4\\u7684\\u6267\\u884C\\u8FC7\\u7A0B\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-w<\\u8D85\\u65F6\\u79D2\\u6570> \\u8BBE\\u7F6E\\u7B49\\u5F85\\u8FDC\\u7AEF\\u4E3B\\u673A\\u56DE\\u62A5\\u7684\\u65F6\\u95F4\\u3002\"),mdx(\"li\",{parentName:\"ul\"},\"-x \\u5F00\\u542F\\u6216\\u5173\\u95ED\\u6570\\u636E\\u5305\\u7684\\u6B63\\u786E\\u6027\\u68C0\\u9A8C\\u3002\")),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"traceroute\"),\"\\u547D\\u4EE4\\u53EF\\u5728 Linux\\u3001macOS\\u3001WSL \\u548C\\u4EFB\\u4F55 UNIX \\u73AF\\u5883\\u4E0B\\u8FD0\\u884C\"))}MDXContent.isMDXComponent=!0;\n","scope":{"date":"October 28, 2020","title":"Linux命令traceroute","tags":["linux"],"description":"traceroute命令用于显示数据包到主机之间的路径","fromNow":"a year ago"}},"randomPost":[{"data":{"date":"January 19, 2020","title":"使用js获取位置","tags":["i18n","javascript"],"fromNow":"2 years ago"},"content":"\n![quick-tip-detecting-your-location-with-javascript](https://cdn.jsdelivr.net/gh/funnypan/pics@master/images/20190121163457.png)\n\n首先，我们使用 caniuse-cmd 查看下 geolocation 的兼容性,几乎所有的现代浏览器都支持 geolocation\n\nGeolocation 通过使用 GPS、WIFI、IP 地址检测自己的位置信息，开发人员可使用这些信息给用户提供更好的搜索建议，比如附近的便利店，并实现互动。\n\n本地资源（location sources） JavaScript 提供了一个简单，但功能强大的工具来定位设备的地理定位 API 的形式。它包括一个小的一组易于使用的方法，可以获得设备的位置：\n\nGPS-主要在移动设备，精确到 10 米 WIFI-几乎所有的联网设备 IP-仅限于区域，备选方案采用哪种方案取决于浏览器支持，一般情况下 WIFI 快于 GPS 快于 IP\n\n使用 geolocation api 通过使用 caniuse-cmd，我们知道大部分浏览器支持 geolocation，但我们需要做好判断，请确保可以正常使用 geolocation\n\n```javascript\nif (navigator.geolocation) {\n  // 支持geolocation\n} else {\n  // 不支持geolocation\n}\n```\n\nnavigator.geolocation 有如下几个方法：\n\n- Geolocation.getCurrentPosition() //获取当前位置\n- Geolocation.watchPosition() //监测定位\n- Geolocation.clearWatch() //清除监测\n\ngetCurrentPosition() and watchPosition() methods 的工作方式是基本相同的。这两方法目的基本相同，都是用来去获取 device 的位置信息吧， 都是以一个异步的工作形式来获取位置信息的， 他们也都依赖于一个 attempt call 的结果\n\n```javascript\nnavigator.geolocation.getCurrentPosition(\n\n    // 位置获取成功\n    function(position) {\n\n        position = {\n            coords: {\n                latitude - //纬度.\n                longitude - //经度.\n                altitude - //高度.\n                accuracy - //精确度.\n                altitudeAccuracy - //高度的准确性.\n                heading - //.\n                speed - //.\n            }\n            timestamp - //时间戳.\n        }\n\n    },\n\n    // 位置获取失败\n    function(error){\n\n    }\n);\n```\n\n如上，使用 geolocation api 很简单，只需要正确调用方法，等待返回坐标即可。\n\n用户权限由于 geolocation api 会暴露用户信息，所以当应用程序访问的时候，将以弹窗请求用户操作，如下\n\n主机安全另一个保护措施是使用 HTTPS 连接。由于一个新的网络安全策略，谷歌浏览器（桌面版和手机版）不再允许非安全的主机上运行的 geolocation api。使用 https 可以最大限度的减少数据信息的盗用或被滥用的风险。\n\n这里查看更多关于这个问题。\n\n```javascript\n一个简单的Demo;\nfindMeButton.on('click', function () {\n  navigator.geolocation.getCurrentPosition(function (position) {\n    // Get the coordinates of the current position.\n    var lat = position.coords.latitude;\n    var lng = position.coords.longitude;\n\n    // Create a new map and place a marker at the device location.\n    var map = new GMaps({\n      el: '#map',\n      lat: lat,\n      lng: lng,\n    });\n\n    map.addMarker({\n      lat: lat,\n      lng: lng,\n    });\n  });\n});\n```\n\n[在线 demo](https://jsfiddle.net/dannymarkov/ubrvm4ao/ 'https://jsfiddle.net/dannymarkov/ubrvm4ao/')\n\n翻译自[Detecting Your Location With JavaScript](http://tutorialzine.com/2016/06/quick-tip-detecting-your-location-with-javascript/ 'http://tutorialzine.com/2016/06/quick-tip-detecting-your-location-with-javascript/')\n","slug":"translate/使用js获取位置"},{"data":{"date":"November 20, 2021","title":"如何在 vue 中使用 Debounce、Throttle","tags":["vue","javascript"],"description":"如input、resize、scroll、intersection observer 等事件可能发生得非常频繁，例如每秒发生几次，因此调用一个动作，比如对每个事件发出读取请求，并不是一个明智的方法。","fromNow":"25 days ago"},"content":"\n## 为什么要使用 debounce 和 throttle\n\n防抖和节流就是针对响应跟不上触发频率这类问题的两种解决方案。在给 DOM 绑定事件时，有些事件我们是无法控制触发频率的。 如鼠标移动事件 onmousemove, 滚动滚动条事件 onscroll，窗口大小改变事件 onresize，瞬间的操作都会导致这些事件会被高频触发。 如果事件的回调函数较为复杂，就会导致响应跟不上触发，出现页面卡顿，假死现象。 在实时检查输入时，如果我们绑定 onkeyup 事件发请求去服务端检查，用户输入过程中，事件的触发频率也会很高，会导致大量的请求发出，响应速度会大大跟不上触发。\n\n## 在 watcher 中使用 debounce\n\n1. 在`created`生命周期将`this.debounce`绑定到`this`上，这样`this.debounce`就可以在`created`生命周期中使用。\n2. 在`watch`函数中，使用`this.debounce`调用`debounce`函数，并传入`this.debounce`的回调函数。\n3. 在事件销毁前，使用`this.debounce`调用`clear`函数，清除定时器。\n\n```html\n<template>\n  <input v-model=\"value\" type=\"text\" />\n  <p>{{ value }}</p>\n</template>\n<script>\n  import debounce from 'lodash.debounce';\n  export default {\n    data() {\n      return {\n        value: '',\n      };\n    },\n    watch: {\n      value(...args) {\n        this.debouncedWatch(...args);\n      },\n    },\n    created() {\n      this.debouncedWatch = debounce((newValue, oldValue) => {\n        console.log('New value:', newValue);\n      }, 500);\n    },\n    beforeUnmount() {\n      this.debouncedWatch.cancel();\n    },\n  };\n</script>\n```\n\n## 使用 debounce 处理事件\n\n```html\n<template>\n  <input v-on:input=\"debouncedHandler\" type=\"text\" />\n</template>\n<script>\n  import debounce from 'lodash.debounce';\n  export default {\n    created() {\n      this.debouncedHandler = debounce((event) => {\n        console.log('New value:', event.target.value);\n      }, 500);\n    },\n    beforeUnmount() {\n      this.debouncedHandler.cancel();\n    },\n  };\n</script>\n```\n\n为什么不适用`debounce`或`throttle`直接绑定函数呢？比如：\n\n```html\n<template>\n  <input v-on:input=\"debouncedHandler\" type=\"text\" />\n</template>\n<script>\n  import debounce from 'lodash.debounce';\n  export default {\n    methods: {\n      // Don't do this!\n      debouncedHandler: debounce(function (event) {\n        console.log('New value:', event.target.value);\n      }, 500),\n    },\n  };\n</script>\n```\n\n**使用`export default { ... }`从组件导出的 options 对象，包括方法，将被组件的所有实例重用。如果网页中有 2 个或更多的组件实例，那么所有的组件都将使用相同的`debounce`或`throttle`的函数方法。**\n\n## 总结\n\n在 `vue` 中使用 `debounce` 和 `throttle` 函数，应该在 `created` 和 `beforeUnmount` 生命周期中使用，而不是在 `watch` 中使用。\n\n```html\n<template>\n  <input v-on:input=\"debouncedHandler\" type=\"text\" />\n</template>\n<script>\n  export default {\n    created() {\n      this.debouncedCallback = debounce((...args) => {\n        // The debounced\n        callback;\n      }, 500);\n    },\n    watch: {\n      value(...args) {\n        this.debouncedCallback(...args);\n      },\n    },\n  };\n</script>\n```\n","slug":"vue/debounce-throttle"},{"data":{"date":"January 14, 2021","title":"21个用于日常开发的有用JavaScript片段","tags":["i18n","javascript"],"fromNow":"a year ago"},"content":"\n## 输入值数字化\n\n```javascript\nconst checkMyValueType = (event) => {\n  console.log(typeof event.target.value); // string\n  console.log(typeof event.target.valueAsNumber); // number\n};\n<input type=\"number\" onkeyup=\"checkMyValueType(event)\" />;\n```\n\n## 复制输入框值到粘贴板\n\n```javascript\nfunction copyToClipboard(inputID) {\n  navigator.clipboard.writeText(document.querySelector(inputID).value);\n}\n```\n\n## 检查窗口是否可见\n\n```javascript\nconst isBrowserTabInView = () => document.hidden;\nisBrowserTabInView(); // returns true or false depending if tab is in view / focus\n```\n\n## 布尔值取反\n\n```javascript\nlet myBool = false;\nmyBool = !myBool;\nconsole.log(myBool); // true\nmyBool = !myBool;\nconsole.log(myBool); // false\n```\n\n## 检查值是否是偶数\n\n```javascript\nconst isEven = (num) => num % 2 === 0;\nconsole.log(isEven(2)); // true\nconsole.log(isEven(3)); // false\n```\n\n## 检查日期是否是工作日\n\n```javascript\nconst isWeekday = (d) => d.getDay() % 6 !== 0;\nconsole.log(isWeekday(new Date(2021, 0, 11))); // true (Monday)\nconsole.log(isWeekday(new Date(2021, 0, 10))); // false (Sunday)\n```\n\n## 日期加减\n\n```javascript\nconst addDaysToDate = (date, n) => {\n  date.setDate(date.getDate() + n);\n  return date.toISOString().split('T')[0];\n};\naddDaysToDate('2021-0-10', 10); // \"2021-01-20\"\naddDaysToDate('2021-0-10', -10); // '2020-12-31'\n```\n\n## 获取时分秒\n\n```javascript\nconst timeFromDate = (date) => date.toTimeString().slice(0, 8);\nconsole.log(timeFromDate(new Date(2021, 0, 10, 17, 30, 0)));\n// \"17:30:00\"\nconsole.log(timeFromDate(new Date(2021, 0, 10, 5, 56, 44)));\n// \"05:56:44\"\n```\n\n## 计算两个日期之间的工作日数\n\n````javascript\nconst countWeekDaysBetween = (startDate, endDate) =>\n  Array\n    .from({ length: (endDate - startDate) / (1000 * 3600 * 24) })\n    .reduce(count => {\n      if (startDate.getDay() % 6 !== 0) {\n        count++;\n      }\n     startDate = new Date(startDate.setDate(startDate.getDate() + 1));\n      return count;\n    }, 0);\ncountWeekDaysBetween(new Date(2021, 0, 10), new Date(2021, 0, 20)); // 7\ncountWeekDaysBetween(new Date(2021, 1, 10), new Date(2021, 2, 18)); // 26\n`## 检查localstorage是否可用\n``` javascript\nconst isLocalStorageEnabled = () => {\n  try {\n    const key = `__storage__test`;\n    window.localStorage.setItem(key, null);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\nisLocalStorageEnabled(); // true, if localStorage is accessible\n````\n\n## 计算函数等花费时间\n\n```javascript\nstartTime = performance.now();\nanyMethodOrCode();\nconst endTime = performance.now();\nconsole.log(endTime - startTime + ' milliseconds.'); // (Time in milliseconds)\n```\n\n## 捕获右键点击\n\n```javascript\nwindow.oncontextmenu = () => {\n  console.log('right click');\n};\n```\n\n## 只触发一次事件\n\n```javascript\nconst myButton = document.getElementById('myBtn');\nconst myClickFunction = () => {\n  console.log('this click will only get called once');\n};\nmyButton.addEventListener('click', myClickHandler, {\n  once: true,\n});\n```\n\n## 滚动到顶部\n\n```javascript\nconst scrollToTopOfDocument = () => {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n  if (c > 0) {\n    window.requestAnimationFrame(scrollToTop);\n    window.scrollTo(0, c - c / 8);\n  }\n};\nscrollToTopOfDocument();\n```\n\n## 检查字符串是否大写\n\n```javascript\nconst isUpperCase = (str) => str === str.toUpperCase();\nconsole.log(isUpperCase('string')); // false\nconsole.log(isUpperCase('STRING')); // true\nconsole.log(isUpperCase('5TR1NG')); // true\n```\n\n## 检查元素是否处于 focus 状态\n\n```javascript\nconst elementIsInFocus = (el) => el === document.activeElement;\nelementIsInFocus(anyElement); // returns true if in focus, false if not in focus\n```\n\n## 查找数组间不同元素\n\n```javascript\nconst differenceInArrays = (array1, array2) => {\n  const set = new Set(array2);\n  return array1.filter((x) => !set.has(x));\n};\ndifferenceInArrays(['apple', 'orange', 'banana'], ['apple', 'orange', 'mango']); // [\"banana\"]\ndifferenceInArrays([10, 12, 5], [66, 10, 6]); // [12, 5]\n```\n\n## 移除事件监听\n\n```javascript\nconst removeEventOffElement = (el, evt, fn, opts = false) =>\n  el.removeEventListener(evt, fn, opts);\nconst testFunction = () => console.log('My function has been called');\ndocument.body.addEventListener('click', testFunction);\n// Call remove method\nremoveEventOffElement(document.body, 'click', fn);\n```\n\n## 随机生成 HEX 值\n\n```javascript\nconst generateRandomColour = () =>\n  '#' + Math.floor(Math.random() * 16777215).toString(16);\n//EXAMPLE\ndocument.getElementsByTagName('body')[0].style.color = generateRandomColour();\n```\n\n## 查找第一个定义的非空参数\n\n```javascript\nconst getFirstValidValue = (...values) => values.find(v => ![undefined, null].includes(v));\nconsole.log(getFirstValidValue(null, undefined, 'Hey', null); // 'Hey'\n```\n\n## 元素外部监听事件\n\n```javascript\nconst onClickOutsideElement = (element, callback) => {\n  document.addEventListener('click', (e) => {\n    if (!element.contains(e.target)) callback();\n  });\n};\nonClickOutside('#some-element', () => console.log('Hey you missed'));\n// Will log \"Hey you missed\" everytime a click that was not \"some-element\" was clicked\n```\n\n## 总结\n\n有时开发人员会发现自己在一次又一次地创建相同的东西，希望上面的一些代码片段可以在在开发中重用。最新的 JavaScript 特性和浏览器 api 是很重要的。\n","slug":"translate/21个用于日常开发的有用JavaScript片段"},{"data":{"date":"October 19, 2020","title":"css-BFC","tags":["css"],"fromNow":"a year ago"},"content":"\n## 什么是 BFC\n\nBlock Formatting Context（块级格式化上下文）\n\n> Web 页面的可视 CSS 渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域\n\n## 布局规则\n\n- 内部的 Box 会在垂直方向一个接一个地放置\n- Box 垂直方向的距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠\n- 每个盒子（块盒与行盒）的 margin box 的左边，与包含块 border box 的左边相接触，即使存在浮动也是如此\n- BFC 的区域不会与 float box 重叠\n- BFC 就是页面上的一个隔离的独立容器，容器里面的子元素不会影响外面的元素。反之也是如此\n- 计算 BFC 的高度时，浮动元素也参与计算\n\n## 如何创建 BFC\n\n- 根元素或其他包含他的元素\n- 浮动元素（元素的 float 不是 none）\n- 绝对定位元素（元素具有 position 为 absolute 或 fixed）\n- 内联块（元素具有 display: inline-block）\n- 表格单元格（元素具有 display: table-cell ，HTML 表格单元格默认属性）\n- 表格标题（元素具有 display: table-caption，HTML 表格标题默认属性）\n- 具有 overflow 且值不是 visible 的块元素\n- 弹性盒子（flex 或 inline-flex）\n- ` css display: flow-root`\n- `css column-span: all`\n\n## BFC 作用\n\n- 利用 BFC 避免 margin 重叠\n- 自适应两栏布局\n- 清除浮动\n","slug":"interview/css/BFC"},{"data":{"date":"January 8, 2021","title":"基于Docker镜像的更新","tags":["docker"],"fromNow":"a year ago"},"content":"\n1. 停止镜像\n\n```shell\ndocker stop <ID or name>\n```\n\n2. 移除镜像\n\n```shell\ndocker rm <ID or name>\n```\n\n3. 拉取最新镜像\n\n```shell\ndocker pull <image name>\n```\n\n4. 启动镜像\n\n```shell\ndocker run <image name> ...options\n```\n\n## 更多\n","slug":"docker/Docker更改镜像"},{"data":{"date":"May 8, 2018","title":"Symbol","tags":["javascript"],"fromNow":"4 years ago"},"content":"","slug":"javascript/base/Symbol"}]},"__N_SSG":true}