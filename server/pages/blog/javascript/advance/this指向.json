{"pageProps":{"data":{"date":"May 19, 2020","title":"this的指向","tags":["javascript"],"fromNow":"2 years ago"},"content":{"compiledSource":"var c=Object.defineProperty,m=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var r=(l,a,e)=>a in l?c(l,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[a]=e,t=(l,a)=>{for(var e in a||(a={}))o.call(a,e)&&r(l,e,a[e]);if(p)for(var e of p(a))i.call(a,e)&&r(l,e,a[e]);return l},s=(l,a)=>m(l,h(a));var u=(l,a)=>{var e={};for(var n in l)o.call(l,n)&&a.indexOf(n)<0&&(e[n]=l[n]);if(l!=null&&p)for(var n of p(l))a.indexOf(n)<0&&i.call(l,n)&&(e[n]=l[n]);return e};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(e){var n=e,{components:l}=n,a=u(n,[\"components\"]);return mdx(MDXLayout,s(t(t({},layoutProps),a),{components:l,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"img\",t({parentName:\"p\"},{src:\"https://cdn.jsdelivr.net/gh/funnypan/pics@master/img/20200413141906.png\",alt:null}))),mdx(\"h2\",null,\"this \\u6307\\u5411\"),mdx(\"p\",null,\"this \\u603B\\u662F\\u6307\\u5411\\u51FD\\u6570\\u7684\\u76F4\\u63A5\\u8C03\\u2F64\\u8005\\uFF08\\u2F7D\\u2FAE\\u95F4\\u63A5\\u8C03\\u2F64\\u8005\\uFF09\"),mdx(\"p\",null,\"\\u5982\\u679C\\u6709 new \\u5173\\u952E\\u5B57\\uFF0C this \\u6307\\u5411 new \\u51FA\\u6765\\u7684\\u90A3\\u4E2A\\u5BF9\\u8C61\"),mdx(\"p\",null,\"\\u5728\\u4E8B\\u4EF6\\u4E2D\\uFF0C this \\u6307\\u5411\\u89E6\\u53D1\\u8FD9\\u4E2A\\u4E8B\\u4EF6\\u7684\\u5BF9\\u8C61\\uFF0C\\u7279\\u6B8A\\u7684\\u662F\\uFF0C IE \\u4E2D\\u7684 attachEvent \\u4E2D\\u7684 this \\u603B\\u662F\\u6307\\u5411\\u5168\\u5C40\\u5BF9\\u8C61 Window\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},\"\\u521B\\u5EFA\\u2F00\\u4E2A\\u7A7A\\u5BF9\\u8C61\\uFF0C\\u5E76\\u4E14 this \\u53D8\\u91CF\\u5F15\\u2F64\\u8BE5\\u5BF9\\u8C61\\uFF0C\\u540C\\u65F6\\u8FD8\\u7EE7\\u627F\\u4E86\\u8BE5\\u51FD\\u6570\\u7684\\u539F\\u578B\\u5C5E\\u6027\\u548C\\u2F45\\u6CD5\\u88AB\\u52A0\\u2F0A\\u5230 this \\u5F15\\u2F64\\u7684\\u5BF9\\u8C61\\u4E2D\\u65B0\\u521B\\u5EFA\\u7684\\u5BF9\\u8C61\\u7531 this \\u6240\\u5F15\\u2F64\\uFF0C\\u5E76\\u4E14\\u6700\\u540E\\u9690\\u5F0F\\u7684\\u8FD4\\u56DE this\")),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-javascript\"}),`var test = {\n  prop: 42,\n  func: function () {\n    return this.prop;\n  },\n};\n\nconsole.log(test.func()); //42\\uFF0C\\u8C03\\u7528\\u8005\\u662Ftest\n//42\n\nvar fullname = 'David Jones';\nvar obj = {\n  fullname: 'Colin Brown',\n  prop: {\n    fullname: 'Aurelio Deftch',\n    getFullname: function () {\n      return this.fullname;\n    },\n  },\n};\nvar test = obj.prop.getFullname;\nconsole.log(test()); // David Jones\\uFF0C\\u8C03\\u7528\\u8005\\u662Fwindow\\uFF0Cwindow.fullname\\u662FDavid Jones\nobj.prop.getFullname(); // Aurelio Deftch\\uFF0C\\u8C03\\u7528\\u8005\\u662Fobj.prop\\uFF0Cobj.prop.fullname\\u662FAurelio Deftch\n`)),mdx(\"h2\",null,\"\\u6269\\u5C55\\uFF08call\\u3001bind\\u3001apply\\uFF09\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"apply \\u3001 call \\u3001bind \\u4E09\\u8005\\u90FD\\u662F\\u7528\\u6765\\u6539\\u53D8\\u51FD\\u6570\\u7684 this \\u5BF9\\u8C61\\u7684\\u6307\\u5411\\u7684\\uFF1B\"),mdx(\"li\",{parentName:\"ul\"},\"apply \\u3001 call \\u3001bind \\u4E09\\u8005\\u7B2C\\u4E00\\u4E2A\\u53C2\\u6570\\u90FD\\u662F this \\u8981\\u6307\\u5411\\u7684\\u5BF9\\u8C61\\uFF0C\\u4E5F\\u5C31\\u662F\\u60F3\\u6307\\u5B9A\\u7684\\u4E0A\\u4E0B\\u6587\\uFF1B\"),mdx(\"li\",{parentName:\"ul\"},\"apply \\u3001 call \\u3001bind \\u4E09\\u8005\\u90FD\\u53EF\\u4EE5\\u5229\\u7528\\u540E\\u7EED\\u53C2\\u6570\\u4F20\\u53C2\\uFF1B\"),mdx(\"li\",{parentName:\"ul\"},\"bind \\u662F\\u8FD4\\u56DE\\u5BF9\\u5E94\\u51FD\\u6570\\uFF0C\\u4FBF\\u4E8E\\u7A0D\\u540E\\u8C03\\u7528\\uFF1Bapply \\u3001call \\u5219\\u662F\\u7ACB\\u5373\\u8C03\\u7528 \\u3002\")),mdx(\"h3\",null,\"apply\\u3001call\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"apply\\u3001call \\u662F\\u4E3A\\u4E86\\u6539\\u53D8\\u67D0\\u4E2A\\u51FD\\u6570\\u8FD0\\u884C\\u65F6\\u7684\\u4E0A\\u4E0B\\u6587\\uFF08context\\uFF09\\u800C\\u5B58\\u5728\\u7684\\uFF0C\\u5373\\u6539\\u53D8\\u51FD\\u6570\\u4F53\\u5185\\u90E8\\u7684 this \\u6307\\u5411\"),mdx(\"li\",{parentName:\"ul\"},\"\\u4F5C\\u7528\\u4E00\\u6837\\uFF0C\\u533A\\u522B\\u5728\\u4E8E\\u63A5\\u53D7\\u7684\\u53C2\\u6570\\u4E0D\\u4E00\\u6837\"),mdx(\"li\",{parentName:\"ul\"},\"func.call(this,args)\"),mdx(\"li\",{parentName:\"ul\"},\"func.apply(this,\",\"[args]\",\")\"),mdx(\"li\",{parentName:\"ul\"},\"\\u7528\\u6CD5\\uFF1A\\u5F53\\u77E5\\u9053\\u53C2\\u6570\\u6570\\u91CF\\u7684\\u65F6\\u5019\\u7528 call\\uFF0C\\u4E0D\\u786E\\u5B9A\\u7684\\u65F6\\u5019\\u7528 apply\")),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-javascript\"}),`function log() {\n  var _args = [...arguments];\n  console.log(_args);\n  args.unshift('(app)');\n\n  console.log.apply(console, args);\n}\nlog(1, 2, 3); //(app) 1 2 3\n`)),mdx(\"h3\",null,\"bind\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},\"MDN \\u7684\\u89E3\\u91CA\\u662F\\uFF1Abind()\\u65B9\\u6CD5\\u4F1A\\u521B\\u5EFA\\u4E00\\u4E2A\\u65B0\\u51FD\\u6570\\uFF0C\\u79F0\\u4E3A\\u7ED1\\u5B9A\\u51FD\\u6570\\uFF0C\\u5F53\\u8C03\\u7528\\u8FD9\\u4E2A\\u7ED1\\u5B9A\\u51FD\\u6570\\u65F6\\uFF0C\\u7ED1\\u5B9A\\u51FD\\u6570\\u4F1A\\u4EE5\\u521B\\u5EFA\\u5B83\\u65F6\\u4F20\\u5165 bind()\\u65B9\\u6CD5\\u7684\\u7B2C\\u4E00\\u4E2A\\u53C2\\u6570\\u4F5C\\u4E3A this\\uFF0C\\u4F20\\u5165 bind() \\u65B9\\u6CD5\\u7684\\u7B2C\\u4E8C\\u4E2A\\u4EE5\\u53CA\\u4EE5\\u540E\\u7684\\u53C2\\u6570\\u52A0\\u4E0A\\u7ED1\\u5B9A\\u51FD\\u6570\\u8FD0\\u884C\\u65F6\\u672C\\u8EAB\\u7684\\u53C2\\u6570\\u6309\\u7167\\u987A\\u5E8F\\u4F5C\\u4E3A\\u539F\\u51FD\\u6570\\u7684\\u53C2\\u6570\\u6765\\u8C03\\u7528\\u539F\\u51FD\\u6570\\u3002\")),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-javascript\"}),`var bar = function () {\n  console.log(this.x);\n};\nvar foo = {\n  x: 3,\n};\nbar(); // undefined\nvar func = bar.bind(foo);\nfunc(); // 3,this\\u6307\\u5411\\u4E86foo\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"date":"May 19, 2020","title":"this的指向","tags":["javascript"],"fromNow":"2 years ago"}},"randomPost":[{"data":{"date":"May 7, 2018","title":"Undefined","tags":["javascript"],"fromNow":"4 years ago"},"content":"\nUndefined 类型只有一个值-undefined，即声明变量但未赋值，这个变量的值就是 undefined。\n\n```javascript\nvar a;\nconsole.log(a == undefined); //true\nconsole.log(typeof a); //\"undefined\"\n```\n\n> 对未初始化的变量和未声明的变量执行 typeof 都会返回 undefined\n","slug":"javascript/base/Undefined"},{"data":{"date":"April 1, 2021","title":"基本类型与引用类型","tags":["javascript"],"fromNow":"8 months ago"},"content":"\n在 ECMAScript 中，变量可以存在两种类型的值，即原始值和引用值。\n\n- 原始值：存储在栈（stack）中的简单数据段，也就是说，它们的值直接存储在变量访问的位置。\n- 引用值：存储在堆（heap）中的对象，也就是说，存储在变量处的值是一个指针（point），指向存储对象的内存处。\n\n## 基本类型\n\n- Number：`typeof instance === \"number\"`\n- Boolean：`typeof instance === \"boolean\"`\n- String：`typeof instance === \"string\"`\n- Symbol：`typeof instance === \"symbol\"`\n- Null：`typeof instance === \"object\"`\n- Undefined：`typeof instance === \"undefined\"`\n\n```javascript\nconst number = 10;\n\nconst bool = false;\n\nconst str = 'Hello!';\n\nconst missingObject = null;\n\nconst nothing = undefined;\n```\n\n![fZKmxT](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/fZKmxT.jpg)\n\n如果给一个变量赋值一个原始类型值，我们可以认为该变量包含这个原始值。当使用 = 将该变量赋值给其他变量值，其实是将值拷贝了一份并赋值给新的变量，因此原始值是通过值的拷贝来赋值的。\n\n```javascript\nlet a = 1;\nlet b = a;\n\nb = b + 2;\n\nconsole.log(a); // 1\nconsole.log(b); // 3\n```\n\n## 引用类型\n\n- Object：`typeof instance === \"object\"`\n- Array：`typeof instance === \"array\"`\n- Function：`typeof instance === \"function\"`\n\n```javascript\n// Objects\nconst plainObject = {\n  prop: 'Value',\n};\n\nconst array = [1, 5, 6];\n\nconst functionObject = (n1, n2) => {\n  return n1 + n2;\n};\n```\n\n![GLC3Zu](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/GLC3Zu.jpg)\n\n将一个非原始值赋值给一个变量，相当于给这个变量赋值了一个引用类型的值，这个引用执行对象在内存中的地址，而这个变量实际上并不包含这个值。\n\n当一个引用类型，比如一个对象，使用 = 将其赋值给另一个变量，实际上是代表那个对象的地址引用赋值给了新的变量，就和是原始值的拷贝一样\n\n```javascript\nlet x = [1];\nlet y = x;\n\ny.push(2);\n\nconsole.log(x); // [1, 2]\nconsole.log(y); // [1, 2]\n```\n\n> **任何非基本类型的都是对象**\n\n## 比较对象\n\n原始值按值比较，引用值按引用比较\n\n```javascript\n// 原始值比较\nconst one = 1;\nconst oneCopy = 1;\n\nconsole.log(one === oneCopy); // true\nconsole.log(one === 1); // true\nconsole.log(one === one); // true\n\n// 引用值比较\nconst ar1 = [1];\nconst ar2 = [1];\n\nconsole.log(ar1 === ar2); // false\nconsole.log(ar1 === [1]); // false\n\nconst ar11 = ar1;\nconsole.log(ar1 === ar11); // true\nconsole.log(ar1 === ar1); // true\n```\n\n## 总结\n\n原始变量及他们的值储存在栈中，当把一个原始变量传递给另一个原始变量时，是把一个栈房间的东西复制到另一个栈房间，且这两个原始变量互不影响。\n\n引用值是把引用变量的名称储存在栈中，但是把其实际对象储存在堆中，且存在一个指针由变量名指向储存在堆中的实际对象，当把引用对象传递给另一个变量时，复制的其实是指向实际对象的指针，此时两者指向的是同一个数据，若通过方法改变其中一个变量的值，则访问另一个变量时，其值也会随之加以改变；但若不是通过方法而是通过重新赋值，此时，相当于重新开了一个房间，该值的原指针改变，则另外一个值不会随他的改变而改变\n","slug":"javascript/advance/基本类型与引用类型"},{"data":{"date":"October 28, 2020","title":"Linux命令traceroute","tags":["linux"],"description":"traceroute命令用于显示数据包到主机之间的路径","fromNow":"a year ago"},"content":"\n**traceroute**命令用于显示数据包到主机之间的路径。\n\n> raceroute 命令 用于追踪数据包在网络上的传输时的全部路径，它默认发送的数据包大小是 40 字节。\n>\n> 通过 traceroute 我们可以知道信息从你的计算机到互联网另一端的主机是走的什么路径。当然每次数据包由某一同样的出发点（source）到达某一同样的目的地(destination)走的路径可能会不一样，但基本上来说大部分时候所走的路由是相同的。\n>\n> traceroute 通过发送小的数据包到目的设备直到其返回，来测量其需要多长时间。一条路径上的每个设备 traceroute 要测 3 次。输出结果中包括每次测试的时间(ms)和设备的名称（如有的话）及其 ip 地址。\n\n## 使用方法\n\n```shell\ntraceroute <host>\n```\n\n## 案例\n\n![1EOlsJ](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/1EOlsJ.png)\n\n## 参数\n\n- -d 使用 Socket 层级的排错功能。\n- -f<存活数值> 设置第一个检测数据包的存活数值 TTL 的大小。\n- -F 设置勿离断位。\n- -g<网关> 设置来源路由网关，最多可设置 8 个。\n- -i<网络界面> 使用指定的网络界面送出数据包。\n- -I 使用 ICMP 回应取代 UDP 资料信息。\n- -m<存活数值> 设置检测数据包的最大存活数值 TTL 的大小。\n- -n 直接使用 IP 地址而非主机名称。\n- -p<通信端口> 设置 UDP 传输协议的通信端口。\n- -r 忽略普通的 Routing Table，直接将数据包送到远端主机上。\n- -s<来源地址> 设置本地主机送出数据包的 IP 地址。\n- -t<服务类型> 设置检测数据包的 TOS 数值。\n- -v 详细显示指令的执行过程。\n- -w<超时秒数> 设置等待远端主机回报的时间。\n- -x 开启或关闭数据包的正确性检验。\n\n**traceroute**命令可在 Linux、macOS、WSL 和任何 UNIX 环境下运行\n","slug":"linux/Linux命令-traceroute"},{"data":{"date":"May 19, 2020","title":"作用域","tags":["javascript"],"fromNow":"2 years ago"},"content":"\n作⽤域链的作⽤是保证执⾏环境⾥有权访问的变量和函数是有序的，作⽤域链的变量只能向上访问，变量访问到 window 对象即被终⽌，作⽤域链向下访问变量是不被允许的简单的说，作⽤域就是变量与函数的可访问范围，即作⽤域控制着变量与函数的可⻅性和⽣命周期\n","slug":"javascript/advance/作用域"},{"data":{"date":"February 10, 2019","title":"online&offline","tags":["javascript"],"description":"当浏览器从在线与离线状态中切换时，这两个事件会在页面的 body 上触发","fromNow":"3 years ago"},"content":"\n> 当浏览器从在线与离线状态中切换时，这两个事件会在页面的 body 上触发，并冒泡到 document 和 window。可使用 window、document、document.body、添加监听事件`addEventListener`。\n\n## 使用方法\n\n```javascript\n//网络状态\nwindow.addEventListener('load', () => {\n  const updateOnlineStatus = () => {\n    this.online = navigator.onLine;\n  };\n\n  window.addEventListener('online', updateOnlineStatus);\n  window.addEventListener('offline', updateOnlineStatus);\n});\n```\n","slug":"apis/online-offline"},{"data":{"date":"October 9, 2020","title":"Linux命令gzip","tags":["linux"],"description":"“gzip”命令的快速指南，用于压缩文件","fromNow":"a year ago"},"content":"\n“gzip”命令的快速指南，用于压缩文件\n\ngzip 命令可以在 Linux、macOS、WSL 和任何有 UNIX 环境的地方使用。\n\n您可以使用 gzip 命令使用名为[LZ77](https://en.wikipedia.org/wiki/LZ77_and_LZ78)的 gzip 压缩协议压缩文件。\n\n## 使用方法\n\n```shell\ngzip filename\n```\n\n这将压缩文件，并向其附加一个.gz 扩展名，原始文件将被删除。为了防止出现这种情况，可以使用`-C`选项并使用输出重定向将输出写入文件名.gz 文件：\n\n```shell\ngzip -c filename > filename.gz\n```\n\n-C 选项指定输出将转到标准输出流，保留原始文件不变\n\n同时也可以使用-K 选项\n\n```shell\ngzip -k filename\n```\n\n压缩越多，压缩（和解压缩）所需的时间就越长。级别范围从 1（最快、最差的压缩）到 9（最慢、更好的压缩），默认值为 6。您可以使用-`<NUMBER>`选项选择特定级别：\n\n```shell\ngzip -1 filename\n```\n\n压缩多文件\n\n```shell\ngzip filename1 filename2\n```\n\n使用-r 选项递归地压缩目录中的所有文件：\n\n```shell\ngzip -r a_folder\n```\n\n-v 选项打印压缩百分比信息。下面是一个与-k（keep）选项一起使用的示例：\n\n![fvzBBf](https://cdn.jsdelivr.net/gh/funnyPan/pics@master/uPic/fvzBBf.png)\n\ngzip 还可以用于解压缩文件，使用-d 选项：\n\n```shell\ngzip -d filename.gz\n```\n","slug":"linux/Linux命令-gzip"}]},"__N_SSG":true}