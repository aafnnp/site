{"pageProps":{"data":{"date":"September 3, 2021","title":"JavaScript - Ultimate Free Resources","tags":["javascript"],"fromNow":"3 months ago"},"content":{"compiledSource":"var h=Object.defineProperty,c=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;var m=(e,t,r)=>t in e?h(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,a=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&m(e,r,t[r]);if(l)for(var r of l(t))n.call(t,r)&&m(e,r,t[r]);return e},o=(e,t)=>c(e,u(t));var s=(e,t)=>{var r={};for(var i in e)p.call(e,i)&&t.indexOf(i)<0&&(r[i]=e[i]);if(e!=null&&l)for(var i of l(e))t.indexOf(i)<0&&n.call(e,i)&&(r[i]=e[i]);return r};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(r){var i=r,{components:e}=i,t=s(i,[\"components\"]);return mdx(MDXLayout,o(a(a({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"\\u6587\\u6863(Documentation)\"),mdx(\"p\",null,\"MDN (Mozilla) JavaScript \\u53C2\\u8003\\u662F\\u5E26\\u6709\\u793A\\u4F8B\\u548C\\u5176\\u4ED6\\u4FE1\\u606F\\u7684\\u4E3B\\u8981\\u6587\\u6863\\u3002\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript.\"}),\"MDN JavaScript Docs\"))),mdx(\"h2\",null,\"\\u517C\\u5BB9\\u6027(Compatibility tables)\"),mdx(\"p\",null,\"\\u7531\\u4E8E \",mdx(\"inlineCode\",{parentName:\"p\"},\"JavaScript\"),\" \\u662F\\u4E00\\u95E8\\u6301\\u7EED\\u5F00\\u53D1\\u4E2D\\u7684\\u8BED\\u8A00\\uFF0C\\u6240\\u4EE5\\u4F1A\\u5B9A\\u671F\\u6DFB\\u52A0\\u65B0\\u7684\\u7279\\u6027\\uFF0C\\u5176\\u4E2D\\u4E00\\u4E9B\\u7279\\u6027\\u53EF\\u80FD\\u4E0D\\u4F1A\\u88AB\\u6240\\u6709\\u7684\\u6D4F\\u89C8\\u5668\\u6216\\u5F15\\u64CE\\u6240\\u652F\\u6301\\u3002\\u4E0B\\u9762\\u7684\\u7F51\\u7AD9\\u53EF\\u4EE5\\u5E2E\\u52A9\\u4F60\\u8BC6\\u522B\\u54EA\\u4E9B\\u529F\\u80FD\\u662F\\u7531\\u54EA\\u4E9B\\u6D4F\\u89C8\\u5668/\\u5F15\\u64CE\\u6216\\u6D4F\\u89C8\\u5668\\u7248\\u672C\\u7B49\\u6240\\u652F\\u6301\\u7684\\u3002\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://caniuse.com/#search=javascript\"}),\"Can i Use\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://kangax.github.io/compat-table\"}),\"Compat Table\"))),mdx(\"h2\",null,\"\\u7F16\\u8F91\\u5668(IDE's)\"),mdx(\"p\",null,\"\\u4E00\\u4E9B\\u6BD4\\u8F83\\u70ED\\u95E8\\u7684\\u7F16\\u8F91\\u5668\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.sublimetext.com/\"}),\"Sublime Text\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://atom.io/\"}),\"Atom\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.jetbrains.com/webstorm/\"}),\"WebStorm\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://code.visualstudio.com/\"}),\"Visual Studio Code\"))),mdx(\"h2\",null,\"\\u6559\\u7A0B(Tutorials / Courses)\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide\"}),\"MDN JavaScript Docs\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://javascript.info/\"}),\"The Modern Javascript Tutorial\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://scotch.io/courses/getting-started-with-javascript-for-web-development\"}),\"Getting Started with JavaScript for Web Development Courses\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"http://es6-features.org/\"}),\"ES6-features.org\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.javascripttutorial.net/\"}),\"JavaScript Tutorial\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.javascripttutorial.net/es6/\"}),\"ES6 Tutorial\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://scrimba.com/learn/introtoes6\"}),\"Intro to ES6\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.tutorialspoint.com/es6/index.htm\"}),\"Tutorials Point - ES6 for beginners\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.java5cript.com/\"}),\"JavaScript Free Resources\"))),mdx(\"h2\",null,\"\\u89C6\\u9891(Videos/ Courses)\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.youtube.com/watch?v=PkZNo7MFNFg&list=PLWKjhJtqVAbleDe3_ZA8h3AO2rXar-q2V&ab_channel=freeCodeCamp.orgfreeCodeCamp.orgVerified\"}),\"Learn JavaScript - Full Course for Beginners - Video By freecodecamp.org\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.udacity.com/course/es6-javascript-improved--ud356\"}),\"ES6 - JavaScript Improved\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.udemy.com/course/javascript-essentials/\"}),\"Javascript Essentials\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.udemy.com/course/ecmascript2015/\"}),\"Learning ECMAScript The Next Generation of Javascript\"))),mdx(\"h2\",null,\"\\u4E66\\u7C4D(Books)\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://eloquentjavascript.net/\"}),\"Eloquent JavaScript\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"http://superherojs.com/\"}),\"Understanding ECMAScript 6\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://andersonguelphjs.github.io/OReilly_JavaScript_The_Good_Parts_May_2008.pdf\"}),\"JavaScript the Good Parts\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"http://speakingjs.com/es5/index.html\"}),\"Speaking JavaScript\"))),mdx(\"h2\",null,\"\\u7EC3\\u4E60(Learn JavaScript by building small projects)\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://javascript30.com/\"}),\"30 Day Vanilla JS Coding Challenge\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.freecodecamp.org/news/learn-javascript-by-building-7-games-video-course/\"}),\"Learn Javascript by building 7 games\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://scrimba.com/learn/adventcalendar/welcome-to-24-days-of-javascriptmas-cg2QbehG\"}),\"24days of christmas\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://scrimba.com/learn/learnjavascript\"}),\"Learn JavaScript\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\"}),\"JavaScript Algorithms and Data Structures\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.freecodecamp.org/\"}),\"Freecodecamp.org\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.udemy.com/course/build-a-quiz-app-with-html-css-and-javascript/\"}),\"Build a Quiz App with HTML, CSS, and JavaScript\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"http://www.asmarterwaytolearn.com/js/index-of-exercises.html\"}),\"Smarter Way to learn JavaScript\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://github.com/Asabeneh/30-Days-Of-JavaScript\"}),\"30 Days of JavaScript\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://learnjavascript.online/\"}),\"Learn JavaScript Online\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.learn-js.org/en/\"}),\"learn-js.org interactive JavaScript tutorial.\"))),mdx(\"h2\",null,\"GitHub\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://github.com/trekhleb/javascript-algorithms\"}),\"Javascript Algorithm and Data Structures\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://github.com/leonardomso/33-js-concepts\"}),\"33 JS Concepts\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://github.com/bradtraversy/vanillawebprojects\"}),\"20+ Web Projects With Vanilla JavaScript\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://github.com/bradtraversy/50projects50days\"}),\"50 Projects in 50 Days - HTML/CSS and JavaScript\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://blog.kritikapattalam.com/%5Bhttps://github.com/airbnb/javascript\"}),\"JavaScript Style Guide\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://github.com/30-seconds/30-seconds-of-code\"}),\"30 seconds of code\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://github.com/wesbos/JavaScript30\"}),\"30 Day Vanilla JS Coding Challenge\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://github.com/ryanmcdermott/clean-code-javascript\"}),\"Clean Code Javascript\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://github.com/lydiahallie/javascript-questions\"}),\"Javascript Questions\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://github.com/TheAlgorithms/Javascript\"}),\"The Algorithms - JavaScript\"))),mdx(\"h2\",null,\"\\u7F16\\u7A0B\\u6311\\u6218(Programming Challenges)\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.hackerrank.com/\"}),\"Hackerrank\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.codingame.com/\"}),\"Coding Game\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.hackerrank.com/\"}),\"Leet Code\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://coderbyte.com/\"}),\"Coder Byte\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://exercism.io/my/tracks/javascript\"}),\"Exercism\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"http://play.elevatorsaga.com/\"}),\"Elevator Saga\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.codewars.com/\"}),\"Code Wars\"))),mdx(\"h2\",null,\"\\u5728\\u7EBF\\u7F16\\u8F91\\u5668(Coding Ground)\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://codepen.io/\"}),\"Codepen\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://jsfiddle.net/\"}),\"Js fiddle\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.tutorialspoint.com/codingground.htm\"}),\"Tutorials Point Coding Ground.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://codesandbox.io/\"}),\"CodeSandBox\"))),mdx(\"h2\",null,\"\\u535A\\u5BA2(Blogs)\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://dmitripavlutin.com/\"}),\"Dmitri Pavlutin\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://davidwalsh.name/\"}),\"David Walsh\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://superherojs.com/\"}),\"SuperHero.JS\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://medium.com/\"}),\"Medium\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://dev.to/\"}),\"dev.to\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"https://hashnode.com/\"}),\"Hashnode\"))))}MDXContent.isMDXComponent=!0;\n","scope":{"date":"September 3, 2021","title":"JavaScript - Ultimate Free Resources","tags":["javascript"],"fromNow":"3 months ago"}},"randomPost":[{"data":{"date":"January 19, 2020","title":"使用js获取位置","tags":["i18n","javascript"],"fromNow":"2 years ago"},"content":"\n![quick-tip-detecting-your-location-with-javascript](https://cdn.jsdelivr.net/gh/funnypan/pics@master/images/20190121163457.png)\n\n首先，我们使用 caniuse-cmd 查看下 geolocation 的兼容性,几乎所有的现代浏览器都支持 geolocation\n\nGeolocation 通过使用 GPS、WIFI、IP 地址检测自己的位置信息，开发人员可使用这些信息给用户提供更好的搜索建议，比如附近的便利店，并实现互动。\n\n本地资源（location sources） JavaScript 提供了一个简单，但功能强大的工具来定位设备的地理定位 API 的形式。它包括一个小的一组易于使用的方法，可以获得设备的位置：\n\nGPS-主要在移动设备，精确到 10 米 WIFI-几乎所有的联网设备 IP-仅限于区域，备选方案采用哪种方案取决于浏览器支持，一般情况下 WIFI 快于 GPS 快于 IP\n\n使用 geolocation api 通过使用 caniuse-cmd，我们知道大部分浏览器支持 geolocation，但我们需要做好判断，请确保可以正常使用 geolocation\n\n```javascript\nif (navigator.geolocation) {\n  // 支持geolocation\n} else {\n  // 不支持geolocation\n}\n```\n\nnavigator.geolocation 有如下几个方法：\n\n- Geolocation.getCurrentPosition() //获取当前位置\n- Geolocation.watchPosition() //监测定位\n- Geolocation.clearWatch() //清除监测\n\ngetCurrentPosition() and watchPosition() methods 的工作方式是基本相同的。这两方法目的基本相同，都是用来去获取 device 的位置信息吧， 都是以一个异步的工作形式来获取位置信息的， 他们也都依赖于一个 attempt call 的结果\n\n```javascript\nnavigator.geolocation.getCurrentPosition(\n\n    // 位置获取成功\n    function(position) {\n\n        position = {\n            coords: {\n                latitude - //纬度.\n                longitude - //经度.\n                altitude - //高度.\n                accuracy - //精确度.\n                altitudeAccuracy - //高度的准确性.\n                heading - //.\n                speed - //.\n            }\n            timestamp - //时间戳.\n        }\n\n    },\n\n    // 位置获取失败\n    function(error){\n\n    }\n);\n```\n\n如上，使用 geolocation api 很简单，只需要正确调用方法，等待返回坐标即可。\n\n用户权限由于 geolocation api 会暴露用户信息，所以当应用程序访问的时候，将以弹窗请求用户操作，如下\n\n主机安全另一个保护措施是使用 HTTPS 连接。由于一个新的网络安全策略，谷歌浏览器（桌面版和手机版）不再允许非安全的主机上运行的 geolocation api。使用 https 可以最大限度的减少数据信息的盗用或被滥用的风险。\n\n这里查看更多关于这个问题。\n\n```javascript\n一个简单的Demo;\nfindMeButton.on('click', function () {\n  navigator.geolocation.getCurrentPosition(function (position) {\n    // Get the coordinates of the current position.\n    var lat = position.coords.latitude;\n    var lng = position.coords.longitude;\n\n    // Create a new map and place a marker at the device location.\n    var map = new GMaps({\n      el: '#map',\n      lat: lat,\n      lng: lng,\n    });\n\n    map.addMarker({\n      lat: lat,\n      lng: lng,\n    });\n  });\n});\n```\n\n[在线 demo](https://jsfiddle.net/dannymarkov/ubrvm4ao/ 'https://jsfiddle.net/dannymarkov/ubrvm4ao/')\n\n翻译自[Detecting Your Location With JavaScript](http://tutorialzine.com/2016/06/quick-tip-detecting-your-location-with-javascript/ 'http://tutorialzine.com/2016/06/quick-tip-detecting-your-location-with-javascript/')\n","slug":"translate/使用js获取位置"},{"data":{"date":"May 19, 2020","title":"this的指向","tags":["javascript"],"fromNow":"2 years ago"},"content":"\n![](https://cdn.jsdelivr.net/gh/funnypan/pics@master/img/20200413141906.png)\n\n## this 指向\n\nthis 总是指向函数的直接调⽤者（⽽⾮间接调⽤者）\n\n如果有 new 关键字， this 指向 new 出来的那个对象\n\n在事件中， this 指向触发这个事件的对象，特殊的是， IE 中的 attachEvent 中的 this 总是指向全局对象 Window\n\n> 创建⼀个空对象，并且 this 变量引⽤该对象，同时还继承了该函数的原型属性和⽅法被加⼊到 this 引⽤的对象中新创建的对象由 this 所引⽤，并且最后隐式的返回 this\n\n```javascript\nvar test = {\n  prop: 42,\n  func: function () {\n    return this.prop;\n  },\n};\n\nconsole.log(test.func()); //42，调用者是test\n//42\n\nvar fullname = 'David Jones';\nvar obj = {\n  fullname: 'Colin Brown',\n  prop: {\n    fullname: 'Aurelio Deftch',\n    getFullname: function () {\n      return this.fullname;\n    },\n  },\n};\nvar test = obj.prop.getFullname;\nconsole.log(test()); // David Jones，调用者是window，window.fullname是David Jones\nobj.prop.getFullname(); // Aurelio Deftch，调用者是obj.prop，obj.prop.fullname是Aurelio Deftch\n```\n\n## 扩展（call、bind、apply）\n\n- apply 、 call 、bind 三者都是用来改变函数的 this 对象的指向的；\n- apply 、 call 、bind 三者第一个参数都是 this 要指向的对象，也就是想指定的上下文；\n- apply 、 call 、bind 三者都可以利用后续参数传参；\n- bind 是返回对应函数，便于稍后调用；apply 、call 则是立即调用 。\n\n### apply、call\n\n- apply、call 是为了改变某个函数运行时的上下文（context）而存在的，即改变函数体内部的 this 指向\n- 作用一样，区别在于接受的参数不一样\n- func.call(this,args)\n- func.apply(this,[args])\n- 用法：当知道参数数量的时候用 call，不确定的时候用 apply\n\n```javascript\nfunction log() {\n  var _args = [...arguments];\n  console.log(_args);\n  args.unshift('(app)');\n\n  console.log.apply(console, args);\n}\nlog(1, 2, 3); //(app) 1 2 3\n```\n\n### bind\n\n> MDN 的解释是：bind()方法会创建一个新函数，称为绑定函数，当调用这个绑定函数时，绑定函数会以创建它时传入 bind()方法的第一个参数作为 this，传入 bind() 方法的第二个以及以后的参数加上绑定函数运行时本身的参数按照顺序作为原函数的参数来调用原函数。\n\n```javascript\nvar bar = function () {\n  console.log(this.x);\n};\nvar foo = {\n  x: 3,\n};\nbar(); // undefined\nvar func = bar.bind(foo);\nfunc(); // 3,this指向了foo\n```\n","slug":"javascript/advance/this指向"},{"data":{"date":"May 21, 2020","title":"第1部分：介绍和安装","tags":["go"],"fromNow":"2 years ago"},"content":"\n## Go 介绍\n\nGo 也称为 Golang，是 Google 开发的一种开源，编译和静态类型的编程语言。Go 创作背后的关键人物是 Rob Pike， Ken Thompson 和 Robert Griesemer。Go 于 2009 年 11 月公开发布。\n\nGo 是一种通用的编程语言，具有简单的语法，并具有强大的标准库作为后盾。Go 大放异彩的关键领域之一是创建高可用性和可伸缩性的 Web 应用程序。Go 还可以用于创建命令行应用程序，桌面应用程序甚至移动应用程序。\n\n## Go 优点\n\n当大量其他语言（例如 python，ruby，nodejs ...）执行相同的工作时，为什么选择 Go 作为服务器端编程语言。\n\n这是我选择 Go 时发现的一些优点。\n\n### 简单语法\n\n语法简单明了，并且该语言不会因不必要的功能而肿。这使得编写可读性和可维护性的代码变得容易。\n\n### 易于编写并发程序\n\n并发是语言的固有部分。结果，编写多线程程序简直是小菜一碟。这是通过 Goroutines 和渠道实现的，我们将在接下来的教程中对其进行讨论。\n\n### 编译语言\n\nGo 是一种编译语言。源代码被编译为本地二进制文件。解释语言（例如，nodejs 中使用的 JavaScript）缺少此功能。\n\n### 快速编译\n\nGo 编译器非常神奇，并且从一开始就被设计为快速的。\n\n### 静态链接\n\nGo 编译器支持静态链接。整个 Go 项目可以静态链接到一个大的二进制文件中，并且可以轻松部署在云服务器中，而不必担心依赖关系。\n\n### Go 工具\n\n工具在 Go 中值得特别提及。Go 附带了功能强大的工具，可帮助开发人员编写更好的代码。很少有常用的工具是\n\n- gofmt- gofmt 用于自动格式化 go 源代码。它使用制表符进行缩进，并使用空格进行对齐。\n- vet- vet 分析 go 源代码并报告可能的可疑代码。vet 报告的所有内容都不是真正的问题，但是具有捕获编译器未报告的错误的能力，例如使用 Printf 时格式不正确的说明符。\n- golint- golint 用于识别代码中的样式问题。\n\n### 垃圾收集\n\nGo 使用垃圾回收，因此内存管理几乎会自动执行，开发人员无需担心内存管理问题。这也有助于轻松地编写并发程序。\n\n### 简单语言规范\n\n语言规范非常简单。在整个规范在页面千篇一律，你甚至可以用它来写你自己的编译器:)\n\n### 开源的\n\n最后但并非最不重要的一点是，Go 是一个开源项目。您可以参与 Go 项目并为该项目做出贡献。\n\n## 使用 Go 构建的热门产品\n\n以下是一些使用 Go 构建的流行产品。\n\n- Google 使用 Go 开发了 Kubernetes。\n- Docker 是世界著名的容器化平台，是使用 Go 开发的。\n- Dropbox 已将其性能关键组件从 Python 迁移到 Go。\n- Infoblox 的下一代网络产品是使用 Go 开发的。\n\n## 安装\n\nGo 可以安装在 Mac，Windows 和 Linux 这三个平台上。您可以从https://golang.org/dl/下载对应平台的二进制文件\n\n### Mac\n\n从https://golang.org/dl/下载Mac OS 安装程序。双击开始安装。按照提示进行操作，这会将 Golang 安装在/usr/local/go 中，并且还将文件夹/usr/local/go/bin 添加到 PATH 环境变量中。\n\n```shell\n# if you don't have git install it like so:\nbrew install git\n\n# then install go\nbrew install go\n\n# add GOBIN path to your PATH in ~/.bash_profile\nexport PATH=${HOME}/go/bin:$PATH\n```\n\n### Windows\n\n从https://golang.org/dl/下载MSI安装程序。双击开始安装，然后按照提示进行操作。这会将Go安装在位置c:\\Go，还将目录c:\\Go\\ bin 添加到您的路径环境变量中。\n\n### Linux\n\n从https://golang.org/dl/下载tar文件并将其解压缩到/usr/local。\n\n将/usr/local/go/bin 添加到 PATH 环境变量中。\n\n## 验证安装\n\n要验证 Go 安装是否成功，请 go version 在终端中键入命令，它将输出已安装的 Go 版本。这是我终端的输出。\n\n```shell\n$ go version\ngo version go1.13.6 darwin/amd64\n```\n","slug":"go/简介和安装"},{"data":{"date":"May 19, 2020","title":"类型判断","tags":["javascript"],"fromNow":"2 years ago"},"content":"\n## typeof\n\n> 用于判断操作数的数据类型，适用于除 null、object 的其他 5 种类型的判断。\n\n1. 对于基本类型，除 null 以外，均可以返回正确的结果。\n2. 对于引用类型，除 function 以外，一律返回 object 类型。\n3. 对于 null ，返回 object 类型。\n4. 对于 function 返回 function 类型。\n\n```javascript\ntypeof undefined; // \"undefined\";\ntypeof 1; // \"number\";\ntypeof '1'; // \"string\";\ntypeof true; // \"boolean\";\ntypeof Symbol(); // \"symbol\";\ntypeof { a: 1 }; // \"object\";\n\ntypeof null === 'object'; // true\ntypeof function () {} === 'function'; // true\n```\n\n## instanceof\n\n> 用于判断是对象的那个子类型\n\n```javascript\n[1, 2] instanceof Array; // true\n(function foo() {} instanceof Function); // true\nnew Date(2018) instanceof Date; // true\nnew Number(1) instanceof Number; // true\n1 instanceof Number; // false\n```\n\na instanceof b，instanceof 会去查找 a 的原型链(这里不展开讨论)上是否有 b 的 prototype 属性；如果有，就返回 true，否则返回 false。即判断 a 的原型链上是否有 a.\\_proto\\_\\_ === b.prototype 返回 true\n\n## constructor\n\n> 不仅可以用于对象子类型的判断，还可以用于基本类型的判断，返回创建实例对象的 Object 构造函数的引用，原始数据类型，constructor 只读，基本类型指向对应的内置对象的构造函数\n\n```javascript\n({ a: 1 }.constructor === Object); // true\n[1, 2].constructor === Array; // true\nnew Date(2018).constructor === Date; // true\n(function foo() {}.constructor === Function); // true\n'1'.constructor === String; // true\n(1).constructor === Number; // true\ntrue.constructor === Boolean; // true\n```\n\n## prototype\n\n> Object.prototype.toString.call('...')，通用方法判断对象类型。 Object.prototype 表示 Object 的原型对象，toString 返回表示该对象的字符串，call 用于指定 this\n\n```javascript\nObject.prototype.toString.call('1'); // \"[object String]\"\nObject.prototype.toString.call(1); // \"[object Number]\"\nObject.prototype.toString.call(true); // \"[object Boolean]\"\nObject.prototype.toString.call([1, 2, 3]); // \"[object Array]\"\nObject.prototype.toString.call(function foo() {}); // \"[object Function]\"\nObject.prototype.toString.call(null); //\"[object Null]\"\nObject.prototype.toString.call(undefined); //\"[object Undefined]\"\n```\n","slug":"javascript/advance/类型判断"},{"data":{"date":"October 26, 2021","title":"Battery Api","tags":["javascript"],"description":"Battery Api提供了有关系统充电级别的信息并提供了通过电池等级或者充电状态的改变提醒用户的事件","fromNow":"2 months ago"},"content":"\nimport CanIUse from 'components/CanIUse.jsx';\n\n## Battery Api\n\n> 提供了有关系统充电级别的信息并提供了通过电池等级或者充电状态的改变提醒用户的事件，Battery Status API 向 window.navigator 扩展了一个 navigator.getBattery 方法，其返回了一个 battery promise, 完成后传递一个 BatteryManager 对象，并提供了一些新的可以操作电池状态的事件。\n\n<CanIUse tag=\"will-change\" />\n\n## 方法\n\n- chargingchange\n- levelchange\n- chargingtimechange\n- dischargingtimechange\n\n```javascript\nnavigator.getBattery().then(function (battery) {\n  console.log('Battery charging? ' + (battery.charging ? 'Yes' : 'No'));\n  console.log('Battery level: ' + battery.level * 100 + '%');\n  console.log('Battery charging time: ' + battery.chargingTime + ' seconds');\n  console.log(\n    'Battery discharging time: ' + battery.dischargingTime + ' seconds'\n  );\n\n  battery.addEventListener('chargingchange', function () {\n    console.log('Battery charging? ' + (battery.charging ? 'Yes' : 'No'));\n  });\n\n  battery.addEventListener('levelchange', function () {\n    console.log('Battery level: ' + battery.level * 100 + '%');\n  });\n\n  battery.addEventListener('chargingtimechange', function () {\n    console.log('Battery charging time: ' + battery.chargingTime + ' seconds');\n  });\n\n  battery.addEventListener('dischargingtimechange', function () {\n    console.log(\n      'Battery discharging time: ' + battery.dischargingTime + ' seconds'\n    );\n  });\n});\n```\n\n![r63S43](https://cdn.jsdelivr.net/gh/funnypan/pics@master/uPic/r63S43.png)\n\n[chrome-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/CDWccX.jpg\n[firefox-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/mqRvLw.jpg\n[ie-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/uKn6gH.jpg\n[opera-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/mpzJp6.jpg\n[safari-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/mIxpPG.jpg\n[edge-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/aoF7l0.jpg\n","slug":"apis/Battery"},{"data":{"date":"April 8, 2021","title":"函数、参数、错误","tags":["swift"],"description":"一般来说，一个函数是可以通过外部代码调用的一个“子程序”（或在递归的情况下由内部函数调用）。像程序本身一样，一个函数由称为函数体的一系列语句组成。值可以传递给一个函数，函数将返回一个值。","fromNow":"8 months ago"},"content":"\n## 创建函数\n\nSwift 函数从 func 关键字开始，然后是函数名，然后`{}`。函数的所有主体——都放在大括号内。\n\n```swift\n// 创建函数\nfunc printHelp() {\n    let message = \"\"\"\n\t\tWelcome to MyApp!\n\n\t\tRun this app inside a directory of images and\n\t\tMyApp will resize them all into thumbnails\n\t\t\"\"\"\n    print(message)\n}\n// 调用函数printHelp\nprintHelp()\n```\n\n## 接收参数\n\n函数接收参数，比如内置的`print`函数，参数定义数据类型表示接收的参数类型。\n\n```swift\nprint(\"hello world\") // hello world即为参数\n```\n\n创建函数打印平方值\n\n```swift\nfunc square(number: Int) {\n    print(number * number)\n}\n// Int 表示参数只接受Int类型\nsquare(number: 8) // 64\n```\n\n## 返回值\n\n除了接收数据，函数还可以返回数据。通过`-> <数据类型>`告诉 swift 将返回什么数据类型的值。\n\n```swift\nfunc square(number: Int) -> Int {\n    return number * number\n}\n// -> Int 表示将返回Int类型的值\nlet result = square(number: 8)\nprint(result) // 64\n```\n\n## 参数标签\n\n每一个函数的形式参数都包含形式参数标签和形式参数名两部分\n\n- 形式参数标签用在调用函数的时候\n- 形式参数名用在函数的实现当中\n- 在调用函数的时候，每一个形式参数前边都会有一个形式参数标签\n- 默认情况下，形式参数使用它们的形式参数名作为形式参数标签\n- 如果不想要形式参数标签，可以在形式参数名称前加上`_`\n\n```swift\n//这里的info1和info2就是形式参数标签\n//name和age是形式参数名称\nfunc personalInfo(info1 name : String, info2 age : Int) { //在函数的实现中使用形式参数名称 print(\"姓名：(name)，年龄：(age)\")\n}\n//在函数调用的时候使用形式参数标签\npersonalInfo(info1: \"norman\", info2: 23)\n\n//下面是默认写法\n//此时，name和age既是形式参数标签，也是形式参数名称\nfunc personalInfo(name : String, age : Int) { //在函数内部实现的时候，name和age是形式参数名称 print(\"姓名：(name)，年龄：(age)\")\n}\n//在函数调用的时候，name和age是形式参数标签\npersonalInfo(name: \"norman\", age: 24)\n\n//如果不想要形式参数标签，可以在形式参数名称前面加 _\nfunc personalInfo(_ name : String, _ age : Int) { print(\"姓名：(name)，年龄：(age)\")\n}\n//在函数调用的时候，没有形式参数标签\npersonalInfo(\"norman\", 24)\n```\n\n## 默认参数\n\nswift 允许设置参数默认值，如：\n\n```swift\nfunc greet(_ person: String, nicely: Bool = true) {\n    if nicely == true {\n        print(\"Hello, \\(person)!\")\n    } else {\n        print(\"Oh no, it's \\(person) again...\")\n    }\n}\n\n// 调用\ngreet(\"Taylor\")\ngreet(\"Taylor\", nicely: false)\n```\n\n## 变量参数\n\n当参数不确定，或者参数有多个，在类型后使用`...`，swift 会将传入的值转换为数组，因此可以在函数内部使用循环语句处理。如：\n\n```swift\nfunc square(numbers: Int...) {\n    for number in numbers {\n        print(\"\\(number) squared is \\(number * number)\")\n    }\n}\n\nsquare(numbers: 1, 2, 3, 4, 5)\n```\n\n## io 参数\n\n一般默认在函数中定义的参数都是常量参数，也就是这个参数你只可以查询使用，不能改变它的值。\n\n如果想要声明一个变量参数，可以在参数定义前加 inout 关键字，这样就可以改变这个参数的值了。\n\n比如，如果你想将一个数字翻倍——即直接更改值，而不是返回一个新的值——你可以写一个这样的函数：\n\n```swift\nfunc doubleInPlace(number: inout Int) {\n    number *= 2\n}\n\nvar myNum = 10\ndoubleInPlace(number: &myNum)\n```\n\n## 函数总结\n\n- 函数允许我们重复使用代码，而不需要重复声明。\n- 函数可以接受参数——只需告诉 Swift 每个参数的类型。\n- 函数可以返回值，同样，您只需指定要返回的类型。如果您想返回一些内容，可以使用元组。\n- 可以在内部和外部对参数使用不同的名称，也可以完全忽略外部名称。\n- 参数可以具有默认值，这有助于在通常使用特定值时编写更少的代码。\n- 可变参数函数接受零个或多个特定参数，Swift 将输入转换为数组。\n- 函数可以抛出错误，但必须使用 try 和 handle errors 来调用它们。\n- 可以使用 inout 来更改函数内部的变量，但通常最好是返回一个新值。\n","slug":"swift/100days/day05"}]},"__N_SSG":true}