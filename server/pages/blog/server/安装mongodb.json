{"pageProps":{"data":{"date":"October 19, 2019","title":"安装mongodb","tags":["server"],"fromNow":"2 years ago"},"content":{"compiledSource":"var c=Object.defineProperty,u=Object.defineProperties;var l=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var n=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable;var d=(o,e,s)=>e in o?c(o,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):o[e]=s,a=(o,e)=>{for(var s in e||(e={}))n.call(e,s)&&d(o,s,e[s]);if(r)for(var s of r(e))m.call(e,s)&&d(o,s,e[s]);return o},g=(o,e)=>u(o,l(e));var p=(o,e)=>{var s={};for(var t in o)n.call(o,t)&&e.indexOf(t)<0&&(s[t]=o[t]);if(o!=null&&r)for(var t of r(o))e.indexOf(t)<0&&m.call(o,t)&&(s[t]=o[t]);return s};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var t=s,{components:o}=t,e=p(t,[\"components\"]);return mdx(MDXLayout,g(a(a({},layoutProps),e),{components:o,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"\\u5B89\\u88C5 mongodb\"),mdx(\"h2\",null,\"\\u6DFB\\u52A0 mongodb \\u6E90\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-bash\"}),`sudo vi /etc/yum.repos.d/mongodb-org.repo\n\n\n[mongodb-org-3.4]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-bash\"}),`yum repolist\n`)),mdx(\"h2\",null,\"\\u5B89\\u88C5 mongodb\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-bash\"}),`sudo yum install mongodb-org\n\n\\u542F\\u52A8\nsudo systemctl start mongod\n\n\\u91CD\\u8F7D\nsudo systemctl reload mongod\n\n\\u505C\\u6B62\nsudo systemctl stop mongod\n\n\\u91CD\\u542F\nsudo systemctl restart mongod\n\n\\u52A0\\u5165\\u81EA\\u542F\nsudo systemctl enable mongod\n\n\\u68C0\\u67E5\\u72B6\\u6001\nsystemctl status mongod\n\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"date":"October 19, 2019","title":"安装mongodb","tags":["server"],"fromNow":"2 years ago"}},"randomPost":[{"data":{"date":"October 26, 2021","title":"Battery Api","tags":["javascript"],"description":"Battery Api提供了有关系统充电级别的信息并提供了通过电池等级或者充电状态的改变提醒用户的事件","fromNow":"2 months ago"},"content":"\nimport CanIUse from 'components/CanIUse.jsx';\n\n## Battery Api\n\n> 提供了有关系统充电级别的信息并提供了通过电池等级或者充电状态的改变提醒用户的事件，Battery Status API 向 window.navigator 扩展了一个 navigator.getBattery 方法，其返回了一个 battery promise, 完成后传递一个 BatteryManager 对象，并提供了一些新的可以操作电池状态的事件。\n\n<CanIUse tag=\"will-change\" />\n\n## 方法\n\n- chargingchange\n- levelchange\n- chargingtimechange\n- dischargingtimechange\n\n```javascript\nnavigator.getBattery().then(function (battery) {\n  console.log('Battery charging? ' + (battery.charging ? 'Yes' : 'No'));\n  console.log('Battery level: ' + battery.level * 100 + '%');\n  console.log('Battery charging time: ' + battery.chargingTime + ' seconds');\n  console.log(\n    'Battery discharging time: ' + battery.dischargingTime + ' seconds'\n  );\n\n  battery.addEventListener('chargingchange', function () {\n    console.log('Battery charging? ' + (battery.charging ? 'Yes' : 'No'));\n  });\n\n  battery.addEventListener('levelchange', function () {\n    console.log('Battery level: ' + battery.level * 100 + '%');\n  });\n\n  battery.addEventListener('chargingtimechange', function () {\n    console.log('Battery charging time: ' + battery.chargingTime + ' seconds');\n  });\n\n  battery.addEventListener('dischargingtimechange', function () {\n    console.log(\n      'Battery discharging time: ' + battery.dischargingTime + ' seconds'\n    );\n  });\n});\n```\n\n![r63S43](https://cdn.jsdelivr.net/gh/funnypan/pics@master/uPic/r63S43.png)\n\n[chrome-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/CDWccX.jpg\n[firefox-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/mqRvLw.jpg\n[ie-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/uKn6gH.jpg\n[opera-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/mpzJp6.jpg\n[safari-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/mIxpPG.jpg\n[edge-image]: https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/aoF7l0.jpg\n","slug":"apis/Battery"},{"data":{"date":"December 16, 2020","title":"安装Certbot","tags":["server"],"fromNow":"a year ago"},"content":"\n![Fkz8eJ](https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/Fkz8eJ.jpg)\n\n## 前置条件\n\n- Centos 8/Ubuntu 18.04/Debain 10\n- 域名 xxx.com\n- 域名解析到对应服务器\n\n## Centos 8 安装 Certbot\n\n### 加入 EPEL 软件源\n\n```shell\nsudo yum install epel-release\nsudo yum -y update\n```\n\n### 下载并安装特定于 Certbot 和 web 服务器的包\n\n```shell\nsudo curl -O https://dl.eff.org/certbot-auto\nsudo mv certbot-auto /usr/local/bin/certbot-auto\nchmod 0755 /usr/local/bin/certbot-auto\n```\n\n### 启动 Certbot\n\n```shell\nsudo /usr/local/bin/certbot-auto --nginx\n```\n\n### 启动 jenkins\n\n```bash\nsudo systemctl start jenkins\n```\n\n### 询问信息如下\n\n```shell\n\n# sudo /usr/local/bin/certbot-auto --nginx\nSaving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator nginx, Installer nginx\nNo names were found in your configuration files. Please enter in your domain\nname(s) (comma and/or space separated)  (Enter 'c' to cancel): www.example.com\nObtaining a new certificate\nPerforming the following challenges:\nhttp-01 challenge for www.example.com\nWaiting for verification...\nCleaning up challenges\nDeploying Certificate to VirtualHost /etc/nginx/nginx.conf\n\nPlease choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n1: No redirect - Make no further changes to the webserver configuration.\n2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for\nnew sites, or if you're confident your site works on HTTPS. You can undo this\nchange by editing your web server's configuration.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nSelect the appropriate number [1-2] then [enter] (press 'c' to cancel): 2\nRedirecting all traffic on port 80 to ssl in /etc/nginx/nginx.conf\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n```\n\n### 开启防火墙\n\n```shell\nsudo firewall-cmd --zone=public --permanent --add-service=https\nsudo firewall-cmd --reload\n```\n\n## Ubuntu 18.04 安装 Certbot\n\n### 安装 Certbot 和 web 服务器\n\n```shell\nsudo apt-get update\nsudo add-apt-repository ppa:certbot/certbot\nsudo apt-get install python-certbot-nginx\nsudo certbot --nginx\n```\n\n### 开启防火墙\n\n```shell\nsudo systemctl start ufw && sudo systemctl enable ufw\nsudo ufw allow http\nsudo ufw allow https\nsudo ufw enable\n```\n\n## Debain 10 安装 Certbot\n\n### 安装 Certbot 和 web 服务器\n\n```shell\nsudo apt install certbot python-certbot-nginx\nsudo certbot --nginx\n```\n\n### 询问信息\n\n```shell\n# sudo certbot --nginx\nSaving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator nginx, Installer nginx\nEnter email address (used for urgent renewal and security notices) (Enter 'c' to\ncancel): admin@example.com\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nPlease read the Terms of Service at\nhttps://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You must\nagree in order to register with the ACME server at\nhttps://acme-v02.api.letsencrypt.org/directory\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n(A)gree/(C)ancel: A\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nWould you be willing to share your email address with the Electronic Frontier\nFoundation, a founding partner of the Let's Encrypt project and the non-profit\norganization that develops Certbot? We'd like to send you email about our work\nencrypting the web, EFF news, campaigns, and ways to support digital freedom.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n(Y)es/(N)o: N\nNo names were found in your configuration files. Please enter in your domain\nname(s) (comma and/or space separated)  (Enter 'c' to cancel): www.rajie.wiki\nObtaining a new certificate\nPerforming the following challenges:\nhttp-01 challenge for www.example.com\nWaiting for verification...\nCleaning up challenges\nDeploying Certificate to VirtualHost /etc/nginx/sites-enabled/default\n\nPlease choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n1: No redirect - Make no further changes to the webserver configuration.\n2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for\nnew sites, or if you're confident your site works on HTTPS. You can undo this\nchange by editing your web server's configuration.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nSelect the appropriate number [1-2] then [enter] (press 'c' to cancel): 2\nRedirecting all traffic on port 80 to ssl in /etc/nginx/sites-enabled/default\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n```\n\n### 开启防火墙\n\n```shell\nsudo systemctl start ufw && sudo systemctl enable ufw\nsudo ufw allow http\nsudo ufw allow https\nsudo ufw enable\n```\n","slug":"server/安装Certbot"},{"data":{"date":"December 19, 2019","title":"JS概念扩展","tags":["i18n","javascript"],"fromNow":"2 years ago"},"content":"\n## 原始值和引用值\n\n> 了解如何将对象，数组和函数复制并传递给函数。要知道引用时复制了什么。理解原始值是通过复制值来进行复制和传递的。\n\n## 作用域\n\n> 了解全局作用域，函数作用域和块作级用域之间的区别。了解哪些变量在哪些地方可用。知道 JavaScript 引擎如何执行变量查找。\n\n## 提升\n\n> 理解变量和函数声明会被提升到可用作用域的顶部。 理解函数表达式不会被提升。\n\n## 闭包\n\n> 知道一个函数保留，并且可以访问创建它的作用域。知道这些可以让我们做什么，例如数据隐藏、内存化以及动态函数生成。\n\n## this\n\n> 知道 this 绑定的规则。知道它的工作机制，知道如何弄清楚在一个函数中它等同于什么，或者说指向什么？并知道为什么它是有用的。\n\n## new\n\n> 知道它如何与面向对象编程相关。知道用 new 调用的函数会发生什么。理解如何使用 new 来继承函数 prototype(原型) 属性生成的对象。\n\n## apply、call、bind\n\n> 知道这些函数的工作机制。 知道如何使用它们。了解它们对 this 做了什么。\n\n## 原型和继承\n\n> 了解 JavaScript 中的继承是通过 [[Prototype]] 链实现的。了解如何通过函数和对象来设置继承，以及 new 是如何帮助我们实现的。知道 **proto** 和 prototype 属性是什么，以及他们的作用。\n\n## 异步和同步\n\n> 理解事件循环，理解浏览器是如何处理用户输入、Web 请求和一般事件的。知道如何识别并正确实现异步代码。理解 JavaScript 中异步和单线程分别是怎样的。\n\n## 高阶函数\n\n> 理解这些函数是 JavaScript 中的一等公民，以及这意味着什么。 知道从另一个函数返回一个函数是完全合法的。 了解闭包和更高阶函数允许我们使用的技巧\n","slug":"translate/概念扩展"},{"data":{"date":"September 19, 2019","title":"安装jenkins","tags":["server"],"fromNow":"2 years ago"},"content":"\n基于 centos 7.2\n\n## 安装 java 环境\n\n```bash\nsudo yum install java-1.8.0-openjdk-devel\n```\n\n## 加入软件源\n\n```bash\ncurl --silent --location http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo | sudo tee /etc/yum.repos.d/jenkins.repo\n```\n\n## 加入软件 key\n\n```bash\nsudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\n```\n\n## 安装\n\n```bash\nsudo yum install jenkins\n```\n\n## 启动 jenkins\n\n```bash\nsudo systemctl start jenkins\n```\n\n## 检查 jenkins 状态\n\n```bash\nsystemctl status jenkins\n```\n\n## 加入开机启动\n\n```bash\nsudo systemctl enable jenkins\n```\n\n## 访问\n\n```bash\nhttp://your_ip_or_domain:8080\n```\n\n![](https://cdn.jsdelivr.net/gh/funnypan/pics@master/img/20190621160854.png)\n\n```bash\nsudo cat /var/lib/jenkins/secrets/initialAdminPassword\n```\n\n## 安装默认插件\n\n![](https://cdn.jsdelivr.net/gh/funnypan/pics@master/img/20190621161025.png)\n\n![](https://cdn.jsdelivr.net/gh/funnypan/pics@master/img/20190621161045.png)\n\n## 注册用户\n\n![](https://cdn.jsdelivr.net/gh/funnypan/pics@master/img/20190621161123.png)\n\n## 完成\n\n![](https://cdn.jsdelivr.net/gh/funnypan/pics@master/img/20190621161155.png)\n","slug":"server/安装jenkins"},{"data":{"date":"April 12, 2018","title":"Flexbox指南","tags":["css"],"description":"Flexible Box 模型，通常被称为 flexbox，是一种一维的布局模型。它给 flexbox 的子元素之间提供了强大的空间分布和对齐能力。","fromNow":"4 years ago"},"content":"\n![Flexbox](https://cdn.jsdelivr.net/gh/funnypan/pics@master/20181016105026.png)\n\nFlexible Box 模型，通常被称为 flexbox，是一种一维的布局模型。它给 flexbox 的子元素之间提供了强大的空间分布和对齐能力。\n\n- 基本介绍\n- 浏览器兼容性\n- 启用 Flexbox\n- 容器属性\n  - 行||列 对齐 ==row and columns==\n  - 水平||垂直 对齐 ==Vertical and horizontal==\n  - 更改水平对齐 ==change horizontal alignment==\n  - 更改垂直对齐 ==change vertical alignment==\n    - 关于基准线 ==about baseline==\n  - 换行 ==wrap==\n- flex 元素上的属性\n  - order\n  - align-self\n  - flex-grow\n  - flex-shrink\n  - flex-basis\n  - flex\n\n### 介绍\n\nFlexbox，也称为灵活盒模块，是两个现代布局系统之一，还有 CSS Grid。与 CSS Grid（二维）相比，flexbox 是一维布局模型。它将基于行或列控制布局，但不能同时控制布局。flexbox 的主要目标是允许项目填充其容器提供的整个空间，具体取决于您设置的一些规则。Flexbox 不兼容 IE10 以下，IE10 以下可以使用如下方式：\n\n- Table layouts\n- Floats\n- clearfix hacks\n- display: table hacks\n\n### 兼容性\n\n![image](https://cdn.jsdelivr.net/gh/funnypan/pics@master/20181020205051.png)\n\nIE10 以下不兼容，一些浏览器需要使用-webkit 或者 display:-webkit-box 兼容处理。\n\n### 使用 flexbox\n\n```css\ndisplay: flexbox;\n```\n\n或者\n\n```css\ndisplay: inline-flexbox;\n```\n\n### 容器属性\n\n- flex-direction\n- justify-content\n- align-items\n- flex-wrap\n- flex-flow\n\n### 行对齐或者列对齐\n\nflex-direction 决定容器以行对齐还是列对齐。\n\n- flex-direction:row，行对齐，从左到右\n- flex-direction:row-reverse，行对齐，从右到左\n- flex-direction:column，列对齐，从上到下\n- flex-direction:column-reverse，列对齐，从下到上\n\n如下图所示：\n\n![image](https://cdn.jsdelivr.net/gh/funnypan/pics@master/20181020205713.png)\n\n### 水平对齐或者垂直对齐\n\nflex-direction 默认是 row，从左向右，当其属性值为 column 时，是从上到下，可以使用 justify-content 和 align-items 改变水平和垂直对齐。\n\n![image](https://cdn.jsdelivr.net/gh/funnypan/pics@master/20181022100130.png)\n\n### 改变水平对齐方式\n\njustify-content 有 5 个属性值：\n\n1. flex-start 左对齐\n2. flex-end 右对齐\n3. center 居中对齐\n4. space-between 首尾对齐容器左右侧，中间间距相等\n5. space-around 每个元素的间距相等\n\n![image](https://cdn.jsdelivr.net/gh/funnypan/pics@master/20181022100921.png)\n\n### 改变垂直对齐方式\n\nalign-items 有 5 个属性值：\n\n1. flex-start 顶部对齐\n2. flex-end 底部对齐\n3. center 居中对齐\n4. baseline 基线对齐\n5. stretch 拉伸以适应容器\n\n![image](https://cdn.jsdelivr.net/gh/funnypan/pics@master/images/20181022141409.png)\n\n关于 align-items:baseline，可以看看 codepen：[https://codepen.io/flaviocopes/pen/oExoJR](https://codepen.io/flaviocopes/pen/oExoJR)\n\n### 换行\n\n默认情况下，flexbox 容器中的项目保留在一行中，缩小它们以适合容器。\n\n可以使用 flex-wrap:wrap 或者 flex-wrap:wrap-reverse 对容器中的元素进行换行处理。\n\n一种简写方式：flex-flow:row wrap;即 flex-direction:row && flex-wrap:wrap\n\n### 适用于 flexbox 容器内每个元素的属性\n\n1. order\n2. align-self\n3. flex-grow\n4. flex-shrink\n5. flex-basis\n6. flex\n\n#### order-改变元素的顺序，如下图所示，可以指定某个元素的 order 值，以改变其位置，默认值为 0\n\n![image](https://cdn.jsdelivr.net/gh/funnypan/pics@master/images/20181022142507.png)\n\n#### align-self-元素使用 align-self 覆盖容器的 align-items 对当前元素的对齐方式\n\n![image](https://cdn.jsdelivr.net/gh/funnypan/pics@master/images/20181022142842.png)\n\n#### flex-grow || flex-shrink 如有必要，可以增加或缩小某个元素\n\nflex-grow：默认值为 0，当某个元素 flex-grow 为 1，另一个为 2，则为 flex-grow：2 的元素占用 flex-grow:1 的空间的 2 倍。\n\nflex-shrink：默认值为 1，如果没有显示定义该属性，将会自动按照默认值 1 在所有因子相加之后计算比率来进行空间收缩。\n\n比如：有这么一个容器，div>.box1*3+.box2*2 父容器定义宽度为 500px，子元素定义宽度为 120px，box1 的 flex-shrink 为 1，.box2 的 flex-shrink 为 2，那么子项相加之后即为 600 px，超出父容器 100px。那么超出的 100px 需要被 A、B、C、D、E 消化 通过收缩因子，所以加权综合可得 100*1+100*1+100*1+100*2+100\\*2=700px。\n\n```\n于是我们可以计算 A、B、C、D、E 将被移除的溢出量是多少：\nA 被移除溢出量：(100*1/700)*100，即约等于14px\nB 被移除溢出量：(100*1/700)*100，即约等于14px\nC 被移除溢出量：(100*1/700)*100，即约等于14px\nD 被移除溢出量：(100*2/700)*100，即约等于28px\nE 被移除溢出量：(100*2/700)*100，即约等于28px\n\n最后A、B、C、D、E的实际宽度分别为：120-14=106px, 120-14=106px, 120-14=106px, 120-28=92px,120-28=92px\n```\n\n#### flex-basis-用于设置或检索弹性盒伸缩基准值，默认值为 auto，其与 width 的区别可以参考这篇文章：https://www.jianshu.com/p/17b1b445ecd4\n\n#### flex：有三个属性值\n\n1. flex-grow\n2. flex-shrink\n3. flex-basis\n\n```css\nflex: 0 1 auto 分别对应flex-grow、flex-shrink、flex-basis;\n```\n\n## 结尾\n\n友情献上小游戏，通过游戏学习 flexbox\n\nhttp://flexboxfroggy.com/#zh-cn\n","slug":"css/Flexbox指南"},{"data":{"date":"November 18, 2021","title":"第一个程序","tags":["python"],"description":"","fromNow":"a month ago"},"content":"\n## 运行 python\n\n> Python 程序总是在解释器中运行。解释器是一个“基于控制台的”应用程序，通常使用命令运行。\n\n```python\npython3\nPython 3.9.8 (main, Nov 10 2021, 03:55:42)\n[Clang 13.0.0 (clang-1300.0.29.3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>>\n```\n\n## 交互模式\n\n当在终端运行`python3`后，就进入了交互模式，即 REPL。\n\n- `>>>`表示开始新的语句\n- `...`表示继续上一条语句\n- `_`表示最后的返回值\n\n```python\n>>> print('hello world')\nhello world\n>>> 37*42\n1554\n>>> for i in range(5):\n...     print(i)\n...\n0\n1\n2\n3\n4\n>>>\n```\n\n## 创建程序\n\n> python 程序以`.py`结尾，可以直接运行。\n\n```python\n# hello.py\nprint('hello world')\n```\n\n## 运行程序\n\n> python 程序运行的命令是`python hello.py`\n\n```python\n$ python hello.py\n$ python3 hello.py\n```\n\n## 样例程序\n\n> 问题：一天早上，你出去，在芝加哥西尔斯大厦旁的人行道上放了一张美元钞票。从那以后，你每天出去的账单都会翻倍。这堆钞票超过塔的高度需要多长时间？\n\n解决方法：\n\n```python\n# sears.py\nbill_thickness = 0.11 * 0.001 # Meters (0.11 mm)\nsears_height = 442 # Height (meters)\nnum_bills = 1\nday = 1\n\nwhile num_bills * bill_thickness < sears_height:\n    print(day, num_bills, num_bills * bill_thickness)\n    day = day + 1\n    num_bills = num_bills * 2\n\nprint('Number of days', day)\nprint('Number of bills', num_bills)\nprint('Final height', num_bills * bill_thickness)\n```\n\n```shell\nbash % python3 sears.py\n1 1 0.00011\n2 2 0.00022\n3 4 0.00044\n4 8 0.00088\n5 16 0.00176\n6 32 0.00352\n...\n21 1048576 115.34336\n22 2097152 230.68672\nNumber of days 23\nNumber of bills 4194304\nFinal height 461.37344\n```\n\n### 语句\n\n> 每行语句以换行符结束，但是不能以分号结束。\n\n```python\na = 3 + 4\nb = a * 2\nprint(b)\n```\n\n### 注释 comment\n\n> 注释以#开始，不会被运行。\n\n```python\na = 3 + 4\n# This is a comment\nb = a * 2\nprint(b)\n```\n\n### 类型与变量 type&variable\n\n> python 属于动态类型语言，变量可以随时变化。python 变量名称可以包含字母、数字、下划线，但不能以数字或关键字开头。对大小写敏感。\n\n```python\nheight = 442           # An integer\nheight = 442.0         # Floating point\nheight = 'Really tall' # A string\n\n# 大小写敏感\nname = 'Jake'\nName = 'Elwood'\nNAME = 'Guido'\n\nwhile x < 0:   # OK\nWHILE x < 0:   # ERROR\n```\n\n### 循环 for/while\n\n```python\nwhile num_bills * bill_thickness < sears_height:\n    print(day, num_bills, num_bills * bill_thickness)\n    day = day + 1\n    num_bills = num_bills * 2\n\nprint('Number of days', day)\n```\n\n### 缩进 indentation\n\n> 缩进是用来表示一组连在一起的语句:\n\n```python\nwhile num_bills * bill_thickness < sears_height:\n    print(day, num_bills, num_bills * bill_thickness)\n    day = day + 1\n    num_bills = num_bills * 2\n\nprint('Number of days', day)\n```\n\n- 使用空格代替 tab 来缩进\n- 使用 4 个空格来缩进\n\n### 条件语句 if-else\n\n```python\nif a > b:\n    print('Computer says no')\nelif a == b:\n    print('Computer says yes')\nelse:\n    print('Computer says maybe')\n```\n\n### 输出语句 print\n\n```python\nprint('Hello world!') # Prints the text 'Hello world!'\n\n#用户输出\nname = input('Enter your name:')\nprint('Your name is', name)\n```\n","slug":"python/1.1-first-program"}]},"__N_SSG":true}