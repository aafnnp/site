{"pageProps":{"data":{"date":"December 16, 2020","title":"安装Certbot","tags":["server"],"fromNow":"a year ago"},"content":{"compiledSource":"var p=Object.defineProperty,d=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var c=(e,t,o)=>t in e?p(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,r=(e,t)=>{for(var o in t||(t={}))s.call(t,o)&&c(e,o,t[o]);if(n)for(var o of n(t))l.call(t,o)&&c(e,o,t[o]);return e},i=(e,t)=>d(e,g(t));var u=(e,t)=>{var o={};for(var a in e)s.call(e,a)&&t.indexOf(a)<0&&(o[a]=e[a]);if(e!=null&&n)for(var a of n(e))t.indexOf(a)<0&&l.call(e,a)&&(o[a]=e[a]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var a=o,{components:e}=a,t=u(a,[\"components\"]);return mdx(MDXLayout,i(r(r({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"img\",r({parentName:\"p\"},{src:\"https://cdn.jsdelivr.net/gh/manonicu/pics@master/uPic/Fkz8eJ.jpg\",alt:\"Fkz8eJ\"}))),mdx(\"h2\",null,\"\\u524D\\u7F6E\\u6761\\u4EF6\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Centos 8/Ubuntu 18.04/Debain 10\"),mdx(\"li\",{parentName:\"ul\"},\"\\u57DF\\u540D xxx.com\"),mdx(\"li\",{parentName:\"ul\"},\"\\u57DF\\u540D\\u89E3\\u6790\\u5230\\u5BF9\\u5E94\\u670D\\u52A1\\u5668\")),mdx(\"h2\",null,\"Centos 8 \\u5B89\\u88C5 Certbot\"),mdx(\"h3\",null,\"\\u52A0\\u5165 EPEL \\u8F6F\\u4EF6\\u6E90\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-shell\"}),`sudo yum install epel-release\nsudo yum -y update\n`)),mdx(\"h3\",null,\"\\u4E0B\\u8F7D\\u5E76\\u5B89\\u88C5\\u7279\\u5B9A\\u4E8E Certbot \\u548C web \\u670D\\u52A1\\u5668\\u7684\\u5305\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-shell\"}),`sudo curl -O https://dl.eff.org/certbot-auto\nsudo mv certbot-auto /usr/local/bin/certbot-auto\nchmod 0755 /usr/local/bin/certbot-auto\n`)),mdx(\"h3\",null,\"\\u542F\\u52A8 Certbot\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-shell\"}),`sudo /usr/local/bin/certbot-auto --nginx\n`)),mdx(\"h3\",null,\"\\u542F\\u52A8 jenkins\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-bash\"}),`sudo systemctl start jenkins\n`)),mdx(\"h3\",null,\"\\u8BE2\\u95EE\\u4FE1\\u606F\\u5982\\u4E0B\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-shell\"}),`\n# sudo /usr/local/bin/certbot-auto --nginx\nSaving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator nginx, Installer nginx\nNo names were found in your configuration files. Please enter in your domain\nname(s) (comma and/or space separated)  (Enter 'c' to cancel): www.example.com\nObtaining a new certificate\nPerforming the following challenges:\nhttp-01 challenge for www.example.com\nWaiting for verification...\nCleaning up challenges\nDeploying Certificate to VirtualHost /etc/nginx/nginx.conf\n\nPlease choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n1: No redirect - Make no further changes to the webserver configuration.\n2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for\nnew sites, or if you're confident your site works on HTTPS. You can undo this\nchange by editing your web server's configuration.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nSelect the appropriate number [1-2] then [enter] (press 'c' to cancel): 2\nRedirecting all traffic on port 80 to ssl in /etc/nginx/nginx.conf\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n`)),mdx(\"h3\",null,\"\\u5F00\\u542F\\u9632\\u706B\\u5899\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-shell\"}),`sudo firewall-cmd --zone=public --permanent --add-service=https\nsudo firewall-cmd --reload\n`)),mdx(\"h2\",null,\"Ubuntu 18.04 \\u5B89\\u88C5 Certbot\"),mdx(\"h3\",null,\"\\u5B89\\u88C5 Certbot \\u548C web \\u670D\\u52A1\\u5668\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-shell\"}),`sudo apt-get update\nsudo add-apt-repository ppa:certbot/certbot\nsudo apt-get install python-certbot-nginx\nsudo certbot --nginx\n`)),mdx(\"h3\",null,\"\\u5F00\\u542F\\u9632\\u706B\\u5899\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-shell\"}),`sudo systemctl start ufw && sudo systemctl enable ufw\nsudo ufw allow http\nsudo ufw allow https\nsudo ufw enable\n`)),mdx(\"h2\",null,\"Debain 10 \\u5B89\\u88C5 Certbot\"),mdx(\"h3\",null,\"\\u5B89\\u88C5 Certbot \\u548C web \\u670D\\u52A1\\u5668\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-shell\"}),`sudo apt install certbot python-certbot-nginx\nsudo certbot --nginx\n`)),mdx(\"h3\",null,\"\\u8BE2\\u95EE\\u4FE1\\u606F\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-shell\"}),`# sudo certbot --nginx\nSaving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator nginx, Installer nginx\nEnter email address (used for urgent renewal and security notices) (Enter 'c' to\ncancel): admin@example.com\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nPlease read the Terms of Service at\nhttps://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You must\nagree in order to register with the ACME server at\nhttps://acme-v02.api.letsencrypt.org/directory\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n(A)gree/(C)ancel: A\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nWould you be willing to share your email address with the Electronic Frontier\nFoundation, a founding partner of the Let's Encrypt project and the non-profit\norganization that develops Certbot? We'd like to send you email about our work\nencrypting the web, EFF news, campaigns, and ways to support digital freedom.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n(Y)es/(N)o: N\nNo names were found in your configuration files. Please enter in your domain\nname(s) (comma and/or space separated)  (Enter 'c' to cancel): www.rajie.wiki\nObtaining a new certificate\nPerforming the following challenges:\nhttp-01 challenge for www.example.com\nWaiting for verification...\nCleaning up challenges\nDeploying Certificate to VirtualHost /etc/nginx/sites-enabled/default\n\nPlease choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n1: No redirect - Make no further changes to the webserver configuration.\n2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for\nnew sites, or if you're confident your site works on HTTPS. You can undo this\nchange by editing your web server's configuration.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nSelect the appropriate number [1-2] then [enter] (press 'c' to cancel): 2\nRedirecting all traffic on port 80 to ssl in /etc/nginx/sites-enabled/default\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n`)),mdx(\"h3\",null,\"\\u5F00\\u542F\\u9632\\u706B\\u5899\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-shell\"}),`sudo systemctl start ufw && sudo systemctl enable ufw\nsudo ufw allow http\nsudo ufw allow https\nsudo ufw enable\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"date":"December 16, 2020","title":"安装Certbot","tags":["server"],"fromNow":"a year ago"}},"randomPost":[{"data":{"date":"November 20, 2021","title":"Numbers","tags":["python"],"description":"关于数学运算","fromNow":"25 days ago"},"content":"\n## Numbers 类型\n\n> python 有 4 种数字类型\n\n- Boolean\n- Integer\n- Float\n- Complex\n\n### Boolean\n\n布尔值，只有 True 和 False 两个值，可以用来表示真假。\n\n```python\na=True\nb=False\n```\n\n在数学运算种，布尔值的值只有 0 和 1，0 表示 False，1 表示 True。\n\n```python\nc=4+True #5\nd=False\nif d==0:\n    print('d is zero')\nelse:\n    print('d is not zero')\n```\n\n### Integer\n\n```python\na = 37\nb = -299392993727716627377128481812241231\nc = 0x7fa8      # Hexadecimal\nd = 0o253       # Octal\ne = 0b10001111  # Binary\n```\n\n### Float\n\n```python\n>>> a = 2.1 + 4.2\n>>> a == 6.3\nFalse\n>>> a\n6.300000000000001\n>>>\n```\n\n### 比较 Comparisons\n\npython 有如下比较运算符：\n\n```python\nx < y      Less than\nx <= y     Less than or equal\nx > y      Greater than\nx >= y     Greater than or equal\nx == y     Equal to\nx != y     Not equal to\n\n#布尔值操作\nif b >= a and b <= c:\n    print('b is between a and c')\n\nif not (b < a or b > c):\n    print('b is still between a and c')\n```\n\n### 数字转换\n\n使用类型名转换数字，如下：\n\n```python\na = int(3.14)\nb = float(3)\n```\n","slug":"python/1.2-numbers"},{"data":{"date":"October 12, 2020","title":"Linux命令ping","tags":["linux"],"description":"ping命令用于检测主机","fromNow":"a year ago"},"content":"\nLinux ping 命令用于检测主机。\n\n执行 ping 指令会使用 ICMP 传输协议，发出要求回应的信息，若远端主机的网络功能没有问题，就会回应该信息，因而得知该主机运作正常。\n\n如下是 ping baidu.com：\n\n![XimNX7](https://cdn.jsdelivr.net/gh/funnyPan/pics@master/uPic/XimNX7.png)\n\n**ping**发出请求到对应的主机，主机返回结果。\n\n默认情况**ping**会每秒发出请求，直到使用**ctrl+c**中断，也可以使用-c times 指定接收包的次数，如：\n\n```shell\nping -c 2 baidu.com\n```\n\n当结束**ping**命令时，屏幕上会打印出统计结果，其中包括丢包率以及速率\n\n```shell\nping -i 3 -s 1024 -t 255 baidu.com\n\n# -i 3 发送周期为 3秒 -s 设置发送包的大小 -t 设置TTL值为 255\n```\n\n## 参数\n\n- -d 使用 Socket 的 SO_DEBUG 功能。\n- -c<完成次数> 设置完成要求回应的次数。\n- -f 极限检测。\n- -i<间隔秒数> 指定收发信息的间隔时间。\n- -I<网络界面> 使用指定的网络接口送出数据包。\n- -l<前置载入> 设置在送出要求信息之前，先行发出的数据包。\n- -n 只输出数值。\n- -p<范本样式> 设置填满数据包的范本样式。\n- -q 不显示指令执行过程，开头和结尾的相关信息除外。\n- -r 忽略普通的 Routing Table，直接将数据包送到远端主机上。\n- -R 记录路由过程。\n- -s<数据包大小> 设置数据包的大小。\n- -t<存活数值> 设置存活数值 TTL 的大小。\n- -v 详细显示指令的执行过程。\n","slug":"linux/Linux命令-ping"},{"data":{"date":"February 19, 2020","title":"数组去重","tags":["i18n","javascript"],"fromNow":"2 years ago"},"content":"\n## 3 种数组去重方法\n\n![](https://cdn.jsdelivr.net/gh/funnypan/pics@master/img/20200413152655.png)\n\n## Set\n\n```javascript\nconst arr=[1,2,🤩,🤩,🤩,2,1]\nconsole.log([...new Set(arr)])\n```\n\n## filter\n\n```javascript\nconst arr=[1,2,🤩,🤩,🤩,2,1]\narr.filter((item,index)=>arr.indexOf(item)===index)\n```\n\n## reduce\n\n```javascript\nconst arr=[1,2,🤩,🤩,🤩,2,1]\narr.reduce((unique,item)=>unique.includes(item)?unique:[...unique,item],[])\n```\n","slug":"translate/数组去重"},{"data":{"date":"January 8, 2021","title":"Dockerfile","description":"Dockerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明","tags":["docker"],"fromNow":"a year ago"},"content":"\n> Dockerfile 是一个包含用于组合映像的命令的文本文档。可以使用在命令行中调用任何命令。 Docker 通过读取 Dockerfile 中的指令自动生成映像。 docker build 命令用于从 Dockerfile 构建映像。可以在 docker build 命令中使用-f 标志指向文件系统中任何位置的 Dockerfile。\n\n## 文件说明\n\nDocker 从上到下的顺序运行 Dockerfile 的指令，第一条指令必须是 FROM。\n\n1. FROM\n\n用于设置基本映像，FROM 必须作为第一条指令\n\n2. LABEL\n\n用于添加标签，设置映像标签\n\n```dockerfile\nLABEL maintainer=\"manon.icu\"\n```\n\n3. RUN\n\n用于执行当前映像的任何命令\n\n```dockerfile\nRUN /bin/bash -c \"source $HOME/.bashrc;echo $HOME\"\n```\n\n4. CMD\n\n用于执行映像的应用程序\n\n```dockerfile\nCMD [\"executable\",\"param1\",\"param2\"]\n```\n\n5. COPY/ADD\n\n用于将源文件复制到目的地\n\n```dockerfile\nCOPY dist /www/dist\n```\n\n6. WORKDIR\n\n用于为 RUN/CMD/COPY 指令设置工作目录，如不存在，会默认创建\n\n## 完整的 Dockerfile\n\n```dockerfile\nFROM node:lts-alpine\n\nWORKDIR /app\nADD . /app\nRUN npm install\n\nCMD [\"npm\", \"start\"]\n```\n\n## 更多\n","slug":"docker/Dockerfiles"},{"data":{"date":"January 7, 2021","title":"Docker Containers","description":"Docker 把应用程序及其依赖，打包在 image 文件里面。只有通过这个文件，才能生成 Docker 容器","tags":["docker"],"fromNow":"a year ago"},"content":"\nimage 文件生成的容器实例，本身也是一个文件，称为容器文件。也就是说，一旦容器生成，就会同时存在两个文件： image 文件和容器文件。而且关闭容器并不会删除容器文件，只是容器停止运行而已。\n\n```shell\n# 列出本机正在运行的容器\n$ docker container ls\n```\n\n```shell\n# 列出本机所有容器，包括终止运行的容器\n$ docker container ls --all\n```\n\n上面命令的输出结果之中，包括容器的 ID。很多地方都需要提供这个 ID，比如上一节终止容器运行的 docker container kill 命令。\n\n终止运行的容器文件，依然会占据硬盘空间，可以使用 docker container rm 命令删除。\n\n```shell\n$ docker container rm [containerID]\n```\n\n运行上面的命令之后，再使用 docker container ls --all 命令，就会发现被删除的容器文件已经消失了。\n\n## 更多\n","slug":"docker/Docker容器"},{"data":{"date":"May 21, 2020","title":"Go-HelloWorld","tags":["go"],"fromNow":"2 years ago"},"content":"\n## 搭建开发环境\n\n让我们创建一个目录，在该目录中编写我们的 hello world 程序。打开终端并运行以下命令。\n\n```shell\nmkdir ~/Documents/learngo/\n```\n\n上面的命令将 learngo 在当前用户的 Documents 目录中创建一个名为目录。\n\n### 你好，世界\n\n使用您喜欢的文本编辑器 main.go 在 learngo 目录中创建一个名为以下内容的文件。\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello World\")\n}\n```\n\n按照 Go 中的约定，将包含 main 函数的文件命名为 main.go。\n\n### 运行程序\n\n1. go install\n\n```shell\ncd ~/Documents/learngo/\ngo install\n#此命令将编译程序并将编译好的二进制文件复制到~/go/bin内\nls -al ~/go/bin/\n\n~/go/bin/learngo\n#输出hello world\n```\n\n2. go build\n\n```shell\ncd ~/Documents/learngo/\ngo build\n#上面的命令将learngo在当前目录中创建一个二进制文件。ls -al将显示learngo已创建一个名为的文件。\n./learngo\n#输出Hello World\n```\n\n3. go run\n\ncd ~/Documents/learngo/在终端中键入命令以将当前目录更改为 learngo。\n\n```shell\ngo run main.go\nHello World\n#go run和go build/go install命令之间的细微差别是，go run需要.go文件名作为参数。\n```\n\ngo run 工作原理非常相似 go build。无需将程序编译并安装到当前目录，而是将文件编译到一个临时位置并从该位置运行文件。如果您想知道 go run 将文件编译到的位置，请 go run 使用--work 参数运行。\n\n```shell\ngo run --work main.go\n```\n\n4. go playground\n\n<Gist gistLink=\"Manonicu/ef552d29300ffb0cd311d9cc8828bc6e\" />\n\n我们将简要讨论该程序的每一行的作用。\n\n- package main - 每个 go 文件必须以 package name 开始。\n- import \"fmt\" - import 语句用于导入其他软件\n\n  包\n\n- func main（）- func 关键字标记函数的开始。\n- fmt.Println（\"H​​ello World\"）\n","slug":"go/第一个Go程序"}]},"__N_SSG":true}