{"pageProps":{"data":{"date":"November 19, 2019","title":"安装nvm和nodejs","tags":["server"],"fromNow":"2 years ago"},"content":{"compiledSource":"var l=Object.defineProperty,u=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var c=(e,a,t)=>a in e?l(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,s=(e,a)=>{for(var t in a||(a={}))o.call(a,t)&&c(e,t,a[t]);if(r)for(var t of r(a))p.call(a,t)&&c(e,t,a[t]);return e},m=(e,a)=>u(e,d(a));var h=(e,a)=>{var t={};for(var n in e)o.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(e!=null&&r)for(var n of r(e))a.indexOf(n)<0&&p.call(e,n)&&(t[n]=e[n]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var n=t,{components:e}=n,a=h(n,[\"components\"]);return mdx(MDXLayout,m(s(s({},layoutProps),a),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"\\u901A\\u8FC7 nvm \\u5B89\\u88C5 nodejs\"),mdx(\"h2\",null,\"\\u5B89\\u88C5 nvm\"),mdx(\"pre\",null,mdx(\"code\",s({parentName:\"pre\"},{className:\"language-bash\"}),`curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash\n`)),mdx(\"p\",null,\"\\u6216\\u8005\"),mdx(\"pre\",null,mdx(\"code\",s({parentName:\"pre\"},{className:\"language-bash\"}),`wget -qO- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash\n`)),mdx(\"p\",null,\"\\u7136\\u540E\\uFF1A\"),mdx(\"pre\",null,mdx(\"code\",s({parentName:\"pre\"},{className:\"language-bash\"}),`source ~/.bashrc\n`)),mdx(\"h2\",null,\"\\u5B89\\u88C5 nodejs\"),mdx(\"pre\",null,mdx(\"code\",s({parentName:\"pre\"},{className:\"language-bash\"}),`nvm install stable\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"date":"November 19, 2019","title":"安装nvm和nodejs","tags":["server"],"fromNow":"2 years ago"}},"randomPost":[{"data":{"date":"May 19, 2020","title":"MacbookPro-前端开发环境配置","tags":["i18n"],"fromNow":"2 years ago"},"content":"\n![](https://cdn.jsdelivr.net/gh/funnypan/pics@master/img/20200427135628.png)\n\n这是一份为 Web 开发准备的 Mac 配置指南，包括推荐工具，快捷方式，技巧等\n\n- macOS Settings\n  - System preferences\n  - Finder\n  - Screenshot\n- macOS Shortcuts\n- Command-line Tools\n  - Homebrew\n  - iTerm2\n  - Git\n  - Zsh\n  - Oh My Zsh\n  - Node.js\n  - Docker\n  - tldr\n  - htop\n  - fzf\n  - ripgrep\n  - path-extractor\n  - lnav\n- MacOS Applications\n  - Visual Studio Code\n  - Rectangle\n  - GIMP\n  - LICEcap\n  - Alfred\n  - Numi\n- Tips and Tricks\n","slug":"translate/MacbookPro-前端开发环境配置"},{"data":{"date":"May 19, 2020","title":"理解函数的执行过程","tags":["javascript"],"fromNow":"2 years ago"},"content":"","slug":"javascript/advance/理解函数的执行过程"},{"data":{"date":"October 13, 2020","title":"Linux命令mkdir","tags":["linux"],"description":"用于显示目前在 Linux 系统上的文件系统磁盘使用情况统计","fromNow":"a year ago"},"content":"\n**mkdir**命令用于创建目录，如果在目录名的前面没有加任何路径名，则在当前目录下创建由 dirname 指定的目录；如果给出了一个已经存在的路径，将会在该目录下创建一个指定的目录。在创建目录时，应保证新建的目录与它所在目录下的文件没有重名。\n\n## 使用方法\n\n```shell\n#创建单个文件\nmkdir folder\n\n#创建多个文件\nmkdir folder1 folder2\n\n#使用-p参数创建文件夹，如果不存在即创建，如果不加-p，而且folder不存在，将会报错\nmkdir -p folder/data\n```\n","slug":"linux/Linux命令-mkdir"},{"data":{"date":"December 6, 2021","title":"Collections of python","tags":["python"],"description":"集合包括列表、字典、集合。","fromNow":"9 days ago"},"content":"\n## 总览\n\n程序员经常会用到的集合，列表、字典、集合。比如：\n\n- 股票池\n- 股票价格\n\n有多种选择来处理这一系列数据：\n\n- 列表。表示一组有序的数据\n- 字典。表示一组键值对的数据\n- 集合。表示一组无序的数据\n\n## 列表\n\n当数据的顺序很重要时，使用列表。记住列表可以容纳任何类型的对象。例如，元组列表。\n\n```python\nportfolio = [\n    ('GOOG', 100, 490.1),\n    ('IBM', 50, 91.3),\n    ('CAT', 150, 83.44)\n]\n\nportfolio[0]            # ('GOOG', 100, 490.1)\nportfolio[2]            # ('CAT', 150, 83.44)\n\n# 列表构造\nrecords=[] #初始化一个空列表\n\nrecords.append(('foo', 1, 2)) #添加元素\nrecords.append(('bar', 'hello')) #添加元素\n\n#从文件读取数据并写入列表\nwith open('data.csv', 'w') as f:\n    next(f) #跳过第一行\n    for line in f:\n        row = line.strip().split(',')\n        records.append((row[0], row[1], row[2]))\n```\n\n## 字典\n\n如果你想要快速随机查找(按键名) ，字典是很有用的。例如，股票价格字典:\n\n```python\nprices = {\n   'GOOG': 513.25,\n   'CAT': 87.22,\n   'IBM': 93.37,\n   'MSFT': 44.12\n}\n\nprices['IBM']           # 93.37\nprices['MSFT']          # 44.12\n\n# 字典构造\nprices = {} #初始化一个空字典\n\nprices['GOOG'] = 513.25 #添加元素\nprices['CAT'] = 87.22 #添加元素\n\n#从文件读取数据并写入字典\nwith open('data.csv', 'w') as f:\n    next(f) #跳过第一行\n    for line in f:\n        row = line.strip().split(',')\n        prices[row[0]] = row[1]\n\n# 字典查找\nif 'GOOG' in prices:\n    print('GOOG is in prices')\n\nname = prices.get('GOOG', 'N/A') #N/A表示默认值\n\nprices.get('GOOG', 0) # 513.25\nprices.get('SCOX', 0) # 0\n\n# 复合键 - 任何类型的数据都可以作为字典的键。例如，元组:\n\nholidays = {\n    (1, 1): 'New Year\\'s Day',\n    (7, 4): 'Independence Day',\n    (12, 25): 'Christmas'\n}\nholidays[(1, 1)] # 'New Year\\'s Day'\n```\n\n## 集合\n\n集合是一种特殊的字典，表示一组无序的数据，数据不重复。\n\n```python\ntech_stocks = {'GOOG', 'IBM', 'CAT'}\ntech_stocks = set(['GOOG', 'IBM', 'CAT'])\n\nnames = ['IBM', 'AAPL', 'GOOG', 'IBM', 'GOOG', 'YHOO']\n\nunique = set(names)\n# unique = set(['IBM', 'AAPL','GOOG','YHOO'])\n\nunique.add('CAT')        # Add an item\nunique.remove('YHOO')    # Remove an item\n\ns1 = { 'a', 'b', 'c'}\ns2 = { 'c', 'd' }\ns1 | s2                 # Set union { 'a', 'b', 'c', 'd' }\ns1 & s2                 # Set intersection { 'c' }\ns1 - s2                 # Set difference { 'a', 'b' }\n\n```\n","slug":"python/2.2-containers"},{"data":{"date":"May 19, 2020","title":"继承","tags":["javascript"],"fromNow":"2 years ago"},"content":"\n## 构造继承\n\n## 原型继承\n\n## 实例继承\n\n## 拷⻉继承\n\n## 原型 prototype 机制或 apply 和 call ⽅法去实现较简单，建议使⽤构造函数与原型混合⽅式\n\n```javascript\nfunction Parent() {\n  this.name = 'wang';\n}\nfunction Child() {\n  this.age = 28;\n}\nChild.prototype = new Parent(); //继承了Parent，通过原型\nvar demo = new Child();\nalert(demo.age);\nalert(demo.name); //得到被继承的属性\n```\n","slug":"javascript/advance/js的继承"},{"data":{"date":"October 19, 2020","title":"css-BFC","tags":["css"],"fromNow":"a year ago"},"content":"\n## 什么是 BFC\n\nBlock Formatting Context（块级格式化上下文）\n\n> Web 页面的可视 CSS 渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域\n\n## 布局规则\n\n- 内部的 Box 会在垂直方向一个接一个地放置\n- Box 垂直方向的距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠\n- 每个盒子（块盒与行盒）的 margin box 的左边，与包含块 border box 的左边相接触，即使存在浮动也是如此\n- BFC 的区域不会与 float box 重叠\n- BFC 就是页面上的一个隔离的独立容器，容器里面的子元素不会影响外面的元素。反之也是如此\n- 计算 BFC 的高度时，浮动元素也参与计算\n\n## 如何创建 BFC\n\n- 根元素或其他包含他的元素\n- 浮动元素（元素的 float 不是 none）\n- 绝对定位元素（元素具有 position 为 absolute 或 fixed）\n- 内联块（元素具有 display: inline-block）\n- 表格单元格（元素具有 display: table-cell ，HTML 表格单元格默认属性）\n- 表格标题（元素具有 display: table-caption，HTML 表格标题默认属性）\n- 具有 overflow 且值不是 visible 的块元素\n- 弹性盒子（flex 或 inline-flex）\n- ` css display: flow-root`\n- `css column-span: all`\n\n## BFC 作用\n\n- 利用 BFC 避免 margin 重叠\n- 自适应两栏布局\n- 清除浮动\n","slug":"interview/css/BFC"}]},"__N_SSG":true}