{"pageProps":{"data":{"date":"January 14, 2021","title":"21个用于日常开发的有用JavaScript片段","tags":["i18n","javascript"],"fromNow":"a year ago"},"content":{"compiledSource":"var d=Object.defineProperty,m=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var c=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var l=(a,t,o)=>t in a?d(a,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):a[t]=o,e=(a,t)=>{for(var o in t||(t={}))c.call(t,o)&&l(a,o,t[o]);if(r)for(var o of r(t))s.call(t,o)&&l(a,o,t[o]);return a},p=(a,t)=>m(a,u(t));var i=(a,t)=>{var o={};for(var n in a)c.call(a,n)&&t.indexOf(n)<0&&(o[n]=a[n]);if(a!=null&&r)for(var n of r(a))t.indexOf(n)<0&&s.call(a,n)&&(o[n]=a[n]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var n=o,{components:a}=n,t=i(n,[\"components\"]);return mdx(MDXLayout,p(e(e({},layoutProps),t),{components:a,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"\\u8F93\\u5165\\u503C\\u6570\\u5B57\\u5316\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const checkMyValueType = (event) => {\n  console.log(typeof event.target.value); // string\n  console.log(typeof event.target.valueAsNumber); // number\n};\n<input type=\"number\" onkeyup=\"checkMyValueType(event)\" />;\n`)),mdx(\"h2\",null,\"\\u590D\\u5236\\u8F93\\u5165\\u6846\\u503C\\u5230\\u7C98\\u8D34\\u677F\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`function copyToClipboard(inputID) {\n  navigator.clipboard.writeText(document.querySelector(inputID).value);\n}\n`)),mdx(\"h2\",null,\"\\u68C0\\u67E5\\u7A97\\u53E3\\u662F\\u5426\\u53EF\\u89C1\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const isBrowserTabInView = () => document.hidden;\nisBrowserTabInView(); // returns true or false depending if tab is in view / focus\n`)),mdx(\"h2\",null,\"\\u5E03\\u5C14\\u503C\\u53D6\\u53CD\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`let myBool = false;\nmyBool = !myBool;\nconsole.log(myBool); // true\nmyBool = !myBool;\nconsole.log(myBool); // false\n`)),mdx(\"h2\",null,\"\\u68C0\\u67E5\\u503C\\u662F\\u5426\\u662F\\u5076\\u6570\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const isEven = (num) => num % 2 === 0;\nconsole.log(isEven(2)); // true\nconsole.log(isEven(3)); // false\n`)),mdx(\"h2\",null,\"\\u68C0\\u67E5\\u65E5\\u671F\\u662F\\u5426\\u662F\\u5DE5\\u4F5C\\u65E5\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const isWeekday = (d) => d.getDay() % 6 !== 0;\nconsole.log(isWeekday(new Date(2021, 0, 11))); // true (Monday)\nconsole.log(isWeekday(new Date(2021, 0, 10))); // false (Sunday)\n`)),mdx(\"h2\",null,\"\\u65E5\\u671F\\u52A0\\u51CF\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const addDaysToDate = (date, n) => {\n  date.setDate(date.getDate() + n);\n  return date.toISOString().split('T')[0];\n};\naddDaysToDate('2021-0-10', 10); // \"2021-01-20\"\naddDaysToDate('2021-0-10', -10); // '2020-12-31'\n`)),mdx(\"h2\",null,\"\\u83B7\\u53D6\\u65F6\\u5206\\u79D2\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const timeFromDate = (date) => date.toTimeString().slice(0, 8);\nconsole.log(timeFromDate(new Date(2021, 0, 10, 17, 30, 0)));\n// \"17:30:00\"\nconsole.log(timeFromDate(new Date(2021, 0, 10, 5, 56, 44)));\n// \"05:56:44\"\n`)),mdx(\"h2\",null,\"\\u8BA1\\u7B97\\u4E24\\u4E2A\\u65E5\\u671F\\u4E4B\\u95F4\\u7684\\u5DE5\\u4F5C\\u65E5\\u6570\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const countWeekDaysBetween = (startDate, endDate) =>\n  Array\n    .from({ length: (endDate - startDate) / (1000 * 3600 * 24) })\n    .reduce(count => {\n      if (startDate.getDay() % 6 !== 0) {\n        count++;\n      }\n     startDate = new Date(startDate.setDate(startDate.getDate() + 1));\n      return count;\n    }, 0);\ncountWeekDaysBetween(new Date(2021, 0, 10), new Date(2021, 0, 20)); // 7\ncountWeekDaysBetween(new Date(2021, 1, 10), new Date(2021, 2, 18)); // 26\n\\`## \\u68C0\\u67E5localstorage\\u662F\\u5426\\u53EF\\u7528\n\\`\\`\\` javascript\nconst isLocalStorageEnabled = () => {\n  try {\n    const key = \\`__storage__test\\`;\n    window.localStorage.setItem(key, null);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\nisLocalStorageEnabled(); // true, if localStorage is accessible\n`)),mdx(\"h2\",null,\"\\u8BA1\\u7B97\\u51FD\\u6570\\u7B49\\u82B1\\u8D39\\u65F6\\u95F4\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`startTime = performance.now();\nanyMethodOrCode();\nconst endTime = performance.now();\nconsole.log(endTime - startTime + ' milliseconds.'); // (Time in milliseconds)\n`)),mdx(\"h2\",null,\"\\u6355\\u83B7\\u53F3\\u952E\\u70B9\\u51FB\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`window.oncontextmenu = () => {\n  console.log('right click');\n};\n`)),mdx(\"h2\",null,\"\\u53EA\\u89E6\\u53D1\\u4E00\\u6B21\\u4E8B\\u4EF6\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const myButton = document.getElementById('myBtn');\nconst myClickFunction = () => {\n  console.log('this click will only get called once');\n};\nmyButton.addEventListener('click', myClickHandler, {\n  once: true,\n});\n`)),mdx(\"h2\",null,\"\\u6EDA\\u52A8\\u5230\\u9876\\u90E8\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const scrollToTopOfDocument = () => {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n  if (c > 0) {\n    window.requestAnimationFrame(scrollToTop);\n    window.scrollTo(0, c - c / 8);\n  }\n};\nscrollToTopOfDocument();\n`)),mdx(\"h2\",null,\"\\u68C0\\u67E5\\u5B57\\u7B26\\u4E32\\u662F\\u5426\\u5927\\u5199\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const isUpperCase = (str) => str === str.toUpperCase();\nconsole.log(isUpperCase('string')); // false\nconsole.log(isUpperCase('STRING')); // true\nconsole.log(isUpperCase('5TR1NG')); // true\n`)),mdx(\"h2\",null,\"\\u68C0\\u67E5\\u5143\\u7D20\\u662F\\u5426\\u5904\\u4E8E focus \\u72B6\\u6001\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const elementIsInFocus = (el) => el === document.activeElement;\nelementIsInFocus(anyElement); // returns true if in focus, false if not in focus\n`)),mdx(\"h2\",null,\"\\u67E5\\u627E\\u6570\\u7EC4\\u95F4\\u4E0D\\u540C\\u5143\\u7D20\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const differenceInArrays = (array1, array2) => {\n  const set = new Set(array2);\n  return array1.filter((x) => !set.has(x));\n};\ndifferenceInArrays(['apple', 'orange', 'banana'], ['apple', 'orange', 'mango']); // [\"banana\"]\ndifferenceInArrays([10, 12, 5], [66, 10, 6]); // [12, 5]\n`)),mdx(\"h2\",null,\"\\u79FB\\u9664\\u4E8B\\u4EF6\\u76D1\\u542C\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const removeEventOffElement = (el, evt, fn, opts = false) =>\n  el.removeEventListener(evt, fn, opts);\nconst testFunction = () => console.log('My function has been called');\ndocument.body.addEventListener('click', testFunction);\n// Call remove method\nremoveEventOffElement(document.body, 'click', fn);\n`)),mdx(\"h2\",null,\"\\u968F\\u673A\\u751F\\u6210 HEX \\u503C\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const generateRandomColour = () =>\n  '#' + Math.floor(Math.random() * 16777215).toString(16);\n//EXAMPLE\ndocument.getElementsByTagName('body')[0].style.color = generateRandomColour();\n`)),mdx(\"h2\",null,\"\\u67E5\\u627E\\u7B2C\\u4E00\\u4E2A\\u5B9A\\u4E49\\u7684\\u975E\\u7A7A\\u53C2\\u6570\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const getFirstValidValue = (...values) => values.find(v => ![undefined, null].includes(v));\nconsole.log(getFirstValidValue(null, undefined, 'Hey', null); // 'Hey'\n`)),mdx(\"h2\",null,\"\\u5143\\u7D20\\u5916\\u90E8\\u76D1\\u542C\\u4E8B\\u4EF6\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),`const onClickOutsideElement = (element, callback) => {\n  document.addEventListener('click', (e) => {\n    if (!element.contains(e.target)) callback();\n  });\n};\nonClickOutside('#some-element', () => console.log('Hey you missed'));\n// Will log \"Hey you missed\" everytime a click that was not \"some-element\" was clicked\n`)),mdx(\"h2\",null,\"\\u603B\\u7ED3\"),mdx(\"p\",null,\"\\u6709\\u65F6\\u5F00\\u53D1\\u4EBA\\u5458\\u4F1A\\u53D1\\u73B0\\u81EA\\u5DF1\\u5728\\u4E00\\u6B21\\u53C8\\u4E00\\u6B21\\u5730\\u521B\\u5EFA\\u76F8\\u540C\\u7684\\u4E1C\\u897F\\uFF0C\\u5E0C\\u671B\\u4E0A\\u9762\\u7684\\u4E00\\u4E9B\\u4EE3\\u7801\\u7247\\u6BB5\\u53EF\\u4EE5\\u5728\\u5728\\u5F00\\u53D1\\u4E2D\\u91CD\\u7528\\u3002\\u6700\\u65B0\\u7684 JavaScript \\u7279\\u6027\\u548C\\u6D4F\\u89C8\\u5668 api \\u662F\\u5F88\\u91CD\\u8981\\u7684\\u3002\"))}MDXContent.isMDXComponent=!0;\n","scope":{"date":"January 14, 2021","title":"21个用于日常开发的有用JavaScript片段","tags":["i18n","javascript"],"fromNow":"a year ago"}},"randomPost":[{"data":{"date":"January 7, 2021","title":"Docker Containers","description":"Docker 把应用程序及其依赖，打包在 image 文件里面。只有通过这个文件，才能生成 Docker 容器","tags":["docker"],"fromNow":"a year ago"},"content":"\nimage 文件生成的容器实例，本身也是一个文件，称为容器文件。也就是说，一旦容器生成，就会同时存在两个文件： image 文件和容器文件。而且关闭容器并不会删除容器文件，只是容器停止运行而已。\n\n```shell\n# 列出本机正在运行的容器\n$ docker container ls\n```\n\n```shell\n# 列出本机所有容器，包括终止运行的容器\n$ docker container ls --all\n```\n\n上面命令的输出结果之中，包括容器的 ID。很多地方都需要提供这个 ID，比如上一节终止容器运行的 docker container kill 命令。\n\n终止运行的容器文件，依然会占据硬盘空间，可以使用 docker container rm 命令删除。\n\n```shell\n$ docker container rm [containerID]\n```\n\n运行上面的命令之后，再使用 docker container ls --all 命令，就会发现被删除的容器文件已经消失了。\n\n## 更多\n","slug":"docker/Docker容器"},{"data":{"date":"May 19, 2020","title":"面试题-手写instanceof","tags":["javascript"],"fromNow":"2 years ago"},"content":"\n## 实现 instanceof\n\n> 核心考察点 [getPrototypeOf](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/GetPrototypeOf)\n\n```javascript\nfunction _instanceof(left, right) {\n  if (left !== 'object' || left === null) return false;\n  const proto = Object.getPrototypeOf(left);\n  while (true) {\n    if (proto === null) return false;\n    if (proto === right.prototype) return true;\n    proto = Object.getPrototypeOf(proto);\n  }\n}\n_instanceof(111, Number); //true\n_instanceof(new String('11'), String); //true\n```\n","slug":"interview/js/instanceof"},{"data":{"date":"October 11, 2020","title":"Linux命令df","tags":["linux"],"description":"用于显示目前在 Linux 系统上的文件系统磁盘使用情况统计","fromNow":"a year ago"},"content":"\n**df**命令用于显示目前在 Linux 系统上的文件系统磁盘使用情况统计。\n\n## 使用方法\n\n![UBFMHD](https://cdn.jsdelivr.net/gh/funnyPan/pics@master/uPic/UBFMHD.png)\n\n同样可以使用**df folder**显示文件夹的使用情况\n\n```shell\ndf folder\n```\n\n![3BJe5E](https://cdn.jsdelivr.net/gh/funnyPan/pics@master/uPic/3BJe5E.png)\n\n## 参数\n\n- -a, --all 包含所有的具有 0 Blocks 的文件系统\n- --block-size={SIZE} 使用 {SIZE} 大小的 Blocks\n- -h, --human-readable 使用人类可读的格式(预设值是不加这个选项的...)\n- -H, --si 很像 -h, 但是用 1000 为单位而不是用 1024\n- -i, --inodes 列出 inode 资讯，不列出已使用 block\n- -k, --kilobytes 就像是 --block-size=1024\n- -l, --local 限制列出的文件结构\n- -m, --megabytes 就像 --block-size=1048576\n- --no-sync 取得资讯前不 sync (预设值)\n- -P, --portability 使用 POSIX 输出格式\n- --sync 在取得资讯前 sync\n- -t, --type=TYPE 限制列出文件系统的 TYPE\n- -T, --print-type 显示文件系统的形式\n- -x, --exclude-type=TYPE 限制列出文件系统不要显示 TYPE\n- -v (忽略)\n- --help 显示这个帮手并且离开\n- --version 输出版本资讯并且离开\n","slug":"linux/Linux命令-df"},{"data":{"date":"September 16, 2021","title":"Basic Types","tags":["go"],"fromNow":"3 months ago"},"content":"\n## 布尔值\n\n布尔值包括 `true` 和 `false`。\n\n```go\nvar b bool = true\nfmt.Printf(\"b is: '%v'\\n\", b)\n//b = false\nfmt.Printf(\"b is: '%v'\\n\", b)\nvar b2 bool\nfmt.Printf(\"zero value of bool is: '%v'\\n\", b2)\n//b is: 'true'\n//b is: 'false'\n//zero value of bool is: 'false'\n```\n\n布尔值的大小是 1 字节\n\n```go\nb := true\nfmt.Printf(\"size of bool is: %d\\n\", unsafe.Sizeof(b))\n//size of bool is: 1\n```\n\n## 整型\n\nGo 语言支持的整数类型有 `int`、`uint`、`int8`、`uint8`、`int16`、`uint16`、`int32`、`uint32`、`int64`、`uint64`。\n\n## 浮点型\n\nGo 语言支持的浮点数类型有 `float32`、`float64`。\n\n## 字符型\n\nGo 语言支持的字符型 `byte`、`rune`，`byte`是一个字节，`rune`是一个代表一个字符的整数。\n\n## 字符串\n\nGo 中的 String 是一个不变的字节序列(8 位字节值) ，这与 Python、 c # 、 Java 或 Swift 等语言中的 Unicode 字符串不同。字符串类型的零值为空字符串。\n\n```go\nvar s string // empty string \"\"\n\ts1 := \"string\\nliteral\\nwith\\tescape characters\\n\"\n\ts2 := `raw string literal\nwhich doesnt't recgonize escape characters like \\n\n`\n\tfmt.Printf(\"sum of strings\\n'%s'\\n\", s+s1+s2)\nsum of strings\n'string\nliteral\nwith\tescape characters\nraw string literal\nwhich doesnt‘t recgonize escape characters like'\n```\n\n## 常量\n\nGo 支持字符、字符串、布尔值和数值的常量。\n\n```go\nconst (\n\ti  int = 32       // int constant\n\ts      = \"string\" // string constant\n\ti2     = 33       // untyped number constant\n)\n\nvar (\n\t// values that are not read-only (like slices or maps or structs) cannot be\n\t// constants\n\t// we can declare them as top-level variables\n\tb = []byte{3, 4} // this could not be a constant\n)\n```\n","slug":"go/基本数据类型"},{"data":{"date":"November 20, 2021","title":"Numbers","tags":["python"],"description":"关于数学运算","fromNow":"25 days ago"},"content":"\n## Numbers 类型\n\n> python 有 4 种数字类型\n\n- Boolean\n- Integer\n- Float\n- Complex\n\n### Boolean\n\n布尔值，只有 True 和 False 两个值，可以用来表示真假。\n\n```python\na=True\nb=False\n```\n\n在数学运算种，布尔值的值只有 0 和 1，0 表示 False，1 表示 True。\n\n```python\nc=4+True #5\nd=False\nif d==0:\n    print('d is zero')\nelse:\n    print('d is not zero')\n```\n\n### Integer\n\n```python\na = 37\nb = -299392993727716627377128481812241231\nc = 0x7fa8      # Hexadecimal\nd = 0o253       # Octal\ne = 0b10001111  # Binary\n```\n\n### Float\n\n```python\n>>> a = 2.1 + 4.2\n>>> a == 6.3\nFalse\n>>> a\n6.300000000000001\n>>>\n```\n\n### 比较 Comparisons\n\npython 有如下比较运算符：\n\n```python\nx < y      Less than\nx <= y     Less than or equal\nx > y      Greater than\nx >= y     Greater than or equal\nx == y     Equal to\nx != y     Not equal to\n\n#布尔值操作\nif b >= a and b <= c:\n    print('b is between a and c')\n\nif not (b < a or b > c):\n    print('b is still between a and c')\n```\n\n### 数字转换\n\n使用类型名转换数字，如下：\n\n```python\na = int(3.14)\nb = float(3)\n```\n","slug":"python/1.2-numbers"},{"data":{"date":"January 14, 2021","title":"21个用于日常开发的有用JavaScript片段","tags":["i18n","javascript"],"fromNow":"a year ago"},"content":"\n## 输入值数字化\n\n```javascript\nconst checkMyValueType = (event) => {\n  console.log(typeof event.target.value); // string\n  console.log(typeof event.target.valueAsNumber); // number\n};\n<input type=\"number\" onkeyup=\"checkMyValueType(event)\" />;\n```\n\n## 复制输入框值到粘贴板\n\n```javascript\nfunction copyToClipboard(inputID) {\n  navigator.clipboard.writeText(document.querySelector(inputID).value);\n}\n```\n\n## 检查窗口是否可见\n\n```javascript\nconst isBrowserTabInView = () => document.hidden;\nisBrowserTabInView(); // returns true or false depending if tab is in view / focus\n```\n\n## 布尔值取反\n\n```javascript\nlet myBool = false;\nmyBool = !myBool;\nconsole.log(myBool); // true\nmyBool = !myBool;\nconsole.log(myBool); // false\n```\n\n## 检查值是否是偶数\n\n```javascript\nconst isEven = (num) => num % 2 === 0;\nconsole.log(isEven(2)); // true\nconsole.log(isEven(3)); // false\n```\n\n## 检查日期是否是工作日\n\n```javascript\nconst isWeekday = (d) => d.getDay() % 6 !== 0;\nconsole.log(isWeekday(new Date(2021, 0, 11))); // true (Monday)\nconsole.log(isWeekday(new Date(2021, 0, 10))); // false (Sunday)\n```\n\n## 日期加减\n\n```javascript\nconst addDaysToDate = (date, n) => {\n  date.setDate(date.getDate() + n);\n  return date.toISOString().split('T')[0];\n};\naddDaysToDate('2021-0-10', 10); // \"2021-01-20\"\naddDaysToDate('2021-0-10', -10); // '2020-12-31'\n```\n\n## 获取时分秒\n\n```javascript\nconst timeFromDate = (date) => date.toTimeString().slice(0, 8);\nconsole.log(timeFromDate(new Date(2021, 0, 10, 17, 30, 0)));\n// \"17:30:00\"\nconsole.log(timeFromDate(new Date(2021, 0, 10, 5, 56, 44)));\n// \"05:56:44\"\n```\n\n## 计算两个日期之间的工作日数\n\n````javascript\nconst countWeekDaysBetween = (startDate, endDate) =>\n  Array\n    .from({ length: (endDate - startDate) / (1000 * 3600 * 24) })\n    .reduce(count => {\n      if (startDate.getDay() % 6 !== 0) {\n        count++;\n      }\n     startDate = new Date(startDate.setDate(startDate.getDate() + 1));\n      return count;\n    }, 0);\ncountWeekDaysBetween(new Date(2021, 0, 10), new Date(2021, 0, 20)); // 7\ncountWeekDaysBetween(new Date(2021, 1, 10), new Date(2021, 2, 18)); // 26\n`## 检查localstorage是否可用\n``` javascript\nconst isLocalStorageEnabled = () => {\n  try {\n    const key = `__storage__test`;\n    window.localStorage.setItem(key, null);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\nisLocalStorageEnabled(); // true, if localStorage is accessible\n````\n\n## 计算函数等花费时间\n\n```javascript\nstartTime = performance.now();\nanyMethodOrCode();\nconst endTime = performance.now();\nconsole.log(endTime - startTime + ' milliseconds.'); // (Time in milliseconds)\n```\n\n## 捕获右键点击\n\n```javascript\nwindow.oncontextmenu = () => {\n  console.log('right click');\n};\n```\n\n## 只触发一次事件\n\n```javascript\nconst myButton = document.getElementById('myBtn');\nconst myClickFunction = () => {\n  console.log('this click will only get called once');\n};\nmyButton.addEventListener('click', myClickHandler, {\n  once: true,\n});\n```\n\n## 滚动到顶部\n\n```javascript\nconst scrollToTopOfDocument = () => {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n  if (c > 0) {\n    window.requestAnimationFrame(scrollToTop);\n    window.scrollTo(0, c - c / 8);\n  }\n};\nscrollToTopOfDocument();\n```\n\n## 检查字符串是否大写\n\n```javascript\nconst isUpperCase = (str) => str === str.toUpperCase();\nconsole.log(isUpperCase('string')); // false\nconsole.log(isUpperCase('STRING')); // true\nconsole.log(isUpperCase('5TR1NG')); // true\n```\n\n## 检查元素是否处于 focus 状态\n\n```javascript\nconst elementIsInFocus = (el) => el === document.activeElement;\nelementIsInFocus(anyElement); // returns true if in focus, false if not in focus\n```\n\n## 查找数组间不同元素\n\n```javascript\nconst differenceInArrays = (array1, array2) => {\n  const set = new Set(array2);\n  return array1.filter((x) => !set.has(x));\n};\ndifferenceInArrays(['apple', 'orange', 'banana'], ['apple', 'orange', 'mango']); // [\"banana\"]\ndifferenceInArrays([10, 12, 5], [66, 10, 6]); // [12, 5]\n```\n\n## 移除事件监听\n\n```javascript\nconst removeEventOffElement = (el, evt, fn, opts = false) =>\n  el.removeEventListener(evt, fn, opts);\nconst testFunction = () => console.log('My function has been called');\ndocument.body.addEventListener('click', testFunction);\n// Call remove method\nremoveEventOffElement(document.body, 'click', fn);\n```\n\n## 随机生成 HEX 值\n\n```javascript\nconst generateRandomColour = () =>\n  '#' + Math.floor(Math.random() * 16777215).toString(16);\n//EXAMPLE\ndocument.getElementsByTagName('body')[0].style.color = generateRandomColour();\n```\n\n## 查找第一个定义的非空参数\n\n```javascript\nconst getFirstValidValue = (...values) => values.find(v => ![undefined, null].includes(v));\nconsole.log(getFirstValidValue(null, undefined, 'Hey', null); // 'Hey'\n```\n\n## 元素外部监听事件\n\n```javascript\nconst onClickOutsideElement = (element, callback) => {\n  document.addEventListener('click', (e) => {\n    if (!element.contains(e.target)) callback();\n  });\n};\nonClickOutside('#some-element', () => console.log('Hey you missed'));\n// Will log \"Hey you missed\" everytime a click that was not \"some-element\" was clicked\n```\n\n## 总结\n\n有时开发人员会发现自己在一次又一次地创建相同的东西，希望上面的一些代码片段可以在在开发中重用。最新的 JavaScript 特性和浏览器 api 是很重要的。\n","slug":"translate/21个用于日常开发的有用JavaScript片段"}]},"__N_SSG":true}