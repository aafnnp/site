{"pageProps":{"data":{"date":"January 19, 2020","title":"使用js获取位置","tags":["i18n","javascript"],"fromNow":"2 years ago"},"content":{"compiledSource":"var u=Object.defineProperty,g=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var r=(t,o,a)=>o in t?u(t,o,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[o]=a,i=(t,o)=>{for(var a in o||(o={}))p.call(o,a)&&r(t,a,o[a]);if(n)for(var a of n(o))c.call(o,a)&&r(t,a,o[a]);return t},l=(t,o)=>g(t,d(o));var s=(t,o)=>{var a={};for(var e in t)p.call(t,e)&&o.indexOf(e)<0&&(a[e]=t[e]);if(t!=null&&n)for(var e of n(t))o.indexOf(e)<0&&c.call(t,e)&&(a[e]=t[e]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var e=a,{components:t}=e,o=s(e,[\"components\"]);return mdx(MDXLayout,l(i(i({},layoutProps),o),{components:t,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"img\",i({parentName:\"p\"},{src:\"https://cdn.jsdelivr.net/gh/funnypan/pics@master/images/20190121163457.png\",alt:\"quick-tip-detecting-your-location-with-javascript\"}))),mdx(\"p\",null,\"\\u9996\\u5148\\uFF0C\\u6211\\u4EEC\\u4F7F\\u7528 caniuse-cmd \\u67E5\\u770B\\u4E0B geolocation \\u7684\\u517C\\u5BB9\\u6027,\\u51E0\\u4E4E\\u6240\\u6709\\u7684\\u73B0\\u4EE3\\u6D4F\\u89C8\\u5668\\u90FD\\u652F\\u6301 geolocation\"),mdx(\"p\",null,\"Geolocation \\u901A\\u8FC7\\u4F7F\\u7528 GPS\\u3001WIFI\\u3001IP \\u5730\\u5740\\u68C0\\u6D4B\\u81EA\\u5DF1\\u7684\\u4F4D\\u7F6E\\u4FE1\\u606F\\uFF0C\\u5F00\\u53D1\\u4EBA\\u5458\\u53EF\\u4F7F\\u7528\\u8FD9\\u4E9B\\u4FE1\\u606F\\u7ED9\\u7528\\u6237\\u63D0\\u4F9B\\u66F4\\u597D\\u7684\\u641C\\u7D22\\u5EFA\\u8BAE\\uFF0C\\u6BD4\\u5982\\u9644\\u8FD1\\u7684\\u4FBF\\u5229\\u5E97\\uFF0C\\u5E76\\u5B9E\\u73B0\\u4E92\\u52A8\\u3002\"),mdx(\"p\",null,\"\\u672C\\u5730\\u8D44\\u6E90\\uFF08location sources\\uFF09 JavaScript \\u63D0\\u4F9B\\u4E86\\u4E00\\u4E2A\\u7B80\\u5355\\uFF0C\\u4F46\\u529F\\u80FD\\u5F3A\\u5927\\u7684\\u5DE5\\u5177\\u6765\\u5B9A\\u4F4D\\u8BBE\\u5907\\u7684\\u5730\\u7406\\u5B9A\\u4F4D API \\u7684\\u5F62\\u5F0F\\u3002\\u5B83\\u5305\\u62EC\\u4E00\\u4E2A\\u5C0F\\u7684\\u4E00\\u7EC4\\u6613\\u4E8E\\u4F7F\\u7528\\u7684\\u65B9\\u6CD5\\uFF0C\\u53EF\\u4EE5\\u83B7\\u5F97\\u8BBE\\u5907\\u7684\\u4F4D\\u7F6E\\uFF1A\"),mdx(\"p\",null,\"GPS-\\u4E3B\\u8981\\u5728\\u79FB\\u52A8\\u8BBE\\u5907\\uFF0C\\u7CBE\\u786E\\u5230 10 \\u7C73 WIFI-\\u51E0\\u4E4E\\u6240\\u6709\\u7684\\u8054\\u7F51\\u8BBE\\u5907 IP-\\u4EC5\\u9650\\u4E8E\\u533A\\u57DF\\uFF0C\\u5907\\u9009\\u65B9\\u6848\\u91C7\\u7528\\u54EA\\u79CD\\u65B9\\u6848\\u53D6\\u51B3\\u4E8E\\u6D4F\\u89C8\\u5668\\u652F\\u6301\\uFF0C\\u4E00\\u822C\\u60C5\\u51B5\\u4E0B WIFI \\u5FEB\\u4E8E GPS \\u5FEB\\u4E8E IP\"),mdx(\"p\",null,\"\\u4F7F\\u7528 geolocation api \\u901A\\u8FC7\\u4F7F\\u7528 caniuse-cmd\\uFF0C\\u6211\\u4EEC\\u77E5\\u9053\\u5927\\u90E8\\u5206\\u6D4F\\u89C8\\u5668\\u652F\\u6301 geolocation\\uFF0C\\u4F46\\u6211\\u4EEC\\u9700\\u8981\\u505A\\u597D\\u5224\\u65AD\\uFF0C\\u8BF7\\u786E\\u4FDD\\u53EF\\u4EE5\\u6B63\\u5E38\\u4F7F\\u7528 geolocation\"),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-javascript\"}),`if (navigator.geolocation) {\n  // \\u652F\\u6301geolocation\n} else {\n  // \\u4E0D\\u652F\\u6301geolocation\n}\n`)),mdx(\"p\",null,\"navigator.geolocation \\u6709\\u5982\\u4E0B\\u51E0\\u4E2A\\u65B9\\u6CD5\\uFF1A\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Geolocation.getCurrentPosition() //\\u83B7\\u53D6\\u5F53\\u524D\\u4F4D\\u7F6E\"),mdx(\"li\",{parentName:\"ul\"},\"Geolocation.watchPosition() //\\u76D1\\u6D4B\\u5B9A\\u4F4D\"),mdx(\"li\",{parentName:\"ul\"},\"Geolocation.clearWatch() //\\u6E05\\u9664\\u76D1\\u6D4B\")),mdx(\"p\",null,\"getCurrentPosition() and watchPosition() methods \\u7684\\u5DE5\\u4F5C\\u65B9\\u5F0F\\u662F\\u57FA\\u672C\\u76F8\\u540C\\u7684\\u3002\\u8FD9\\u4E24\\u65B9\\u6CD5\\u76EE\\u7684\\u57FA\\u672C\\u76F8\\u540C\\uFF0C\\u90FD\\u662F\\u7528\\u6765\\u53BB\\u83B7\\u53D6 device \\u7684\\u4F4D\\u7F6E\\u4FE1\\u606F\\u5427\\uFF0C \\u90FD\\u662F\\u4EE5\\u4E00\\u4E2A\\u5F02\\u6B65\\u7684\\u5DE5\\u4F5C\\u5F62\\u5F0F\\u6765\\u83B7\\u53D6\\u4F4D\\u7F6E\\u4FE1\\u606F\\u7684\\uFF0C \\u4ED6\\u4EEC\\u4E5F\\u90FD\\u4F9D\\u8D56\\u4E8E\\u4E00\\u4E2A attempt call \\u7684\\u7ED3\\u679C\"),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-javascript\"}),`navigator.geolocation.getCurrentPosition(\n\n    // \\u4F4D\\u7F6E\\u83B7\\u53D6\\u6210\\u529F\n    function(position) {\n\n        position = {\n            coords: {\n                latitude - //\\u7EAC\\u5EA6.\n                longitude - //\\u7ECF\\u5EA6.\n                altitude - //\\u9AD8\\u5EA6.\n                accuracy - //\\u7CBE\\u786E\\u5EA6.\n                altitudeAccuracy - //\\u9AD8\\u5EA6\\u7684\\u51C6\\u786E\\u6027.\n                heading - //.\n                speed - //.\n            }\n            timestamp - //\\u65F6\\u95F4\\u6233.\n        }\n\n    },\n\n    // \\u4F4D\\u7F6E\\u83B7\\u53D6\\u5931\\u8D25\n    function(error){\n\n    }\n);\n`)),mdx(\"p\",null,\"\\u5982\\u4E0A\\uFF0C\\u4F7F\\u7528 geolocation api \\u5F88\\u7B80\\u5355\\uFF0C\\u53EA\\u9700\\u8981\\u6B63\\u786E\\u8C03\\u7528\\u65B9\\u6CD5\\uFF0C\\u7B49\\u5F85\\u8FD4\\u56DE\\u5750\\u6807\\u5373\\u53EF\\u3002\"),mdx(\"p\",null,\"\\u7528\\u6237\\u6743\\u9650\\u7531\\u4E8E geolocation api \\u4F1A\\u66B4\\u9732\\u7528\\u6237\\u4FE1\\u606F\\uFF0C\\u6240\\u4EE5\\u5F53\\u5E94\\u7528\\u7A0B\\u5E8F\\u8BBF\\u95EE\\u7684\\u65F6\\u5019\\uFF0C\\u5C06\\u4EE5\\u5F39\\u7A97\\u8BF7\\u6C42\\u7528\\u6237\\u64CD\\u4F5C\\uFF0C\\u5982\\u4E0B\"),mdx(\"p\",null,\"\\u4E3B\\u673A\\u5B89\\u5168\\u53E6\\u4E00\\u4E2A\\u4FDD\\u62A4\\u63AA\\u65BD\\u662F\\u4F7F\\u7528 HTTPS \\u8FDE\\u63A5\\u3002\\u7531\\u4E8E\\u4E00\\u4E2A\\u65B0\\u7684\\u7F51\\u7EDC\\u5B89\\u5168\\u7B56\\u7565\\uFF0C\\u8C37\\u6B4C\\u6D4F\\u89C8\\u5668\\uFF08\\u684C\\u9762\\u7248\\u548C\\u624B\\u673A\\u7248\\uFF09\\u4E0D\\u518D\\u5141\\u8BB8\\u975E\\u5B89\\u5168\\u7684\\u4E3B\\u673A\\u4E0A\\u8FD0\\u884C\\u7684 geolocation api\\u3002\\u4F7F\\u7528 https \\u53EF\\u4EE5\\u6700\\u5927\\u9650\\u5EA6\\u7684\\u51CF\\u5C11\\u6570\\u636E\\u4FE1\\u606F\\u7684\\u76D7\\u7528\\u6216\\u88AB\\u6EE5\\u7528\\u7684\\u98CE\\u9669\\u3002\"),mdx(\"p\",null,\"\\u8FD9\\u91CC\\u67E5\\u770B\\u66F4\\u591A\\u5173\\u4E8E\\u8FD9\\u4E2A\\u95EE\\u9898\\u3002\"),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-javascript\"}),`\\u4E00\\u4E2A\\u7B80\\u5355\\u7684Demo;\nfindMeButton.on('click', function () {\n  navigator.geolocation.getCurrentPosition(function (position) {\n    // Get the coordinates of the current position.\n    var lat = position.coords.latitude;\n    var lng = position.coords.longitude;\n\n    // Create a new map and place a marker at the device location.\n    var map = new GMaps({\n      el: '#map',\n      lat: lat,\n      lng: lng,\n    });\n\n    map.addMarker({\n      lat: lat,\n      lng: lng,\n    });\n  });\n});\n`)),mdx(\"p\",null,mdx(\"a\",i({parentName:\"p\"},{href:\"https://jsfiddle.net/dannymarkov/ubrvm4ao/\",title:\"https://jsfiddle.net/dannymarkov/ubrvm4ao/\"}),\"\\u5728\\u7EBF demo\")),mdx(\"p\",null,\"\\u7FFB\\u8BD1\\u81EA\",mdx(\"a\",i({parentName:\"p\"},{href:\"http://tutorialzine.com/2016/06/quick-tip-detecting-your-location-with-javascript/\",title:\"http://tutorialzine.com/2016/06/quick-tip-detecting-your-location-with-javascript/\"}),\"Detecting Your Location With JavaScript\")))}MDXContent.isMDXComponent=!0;\n","scope":{"date":"January 19, 2020","title":"使用js获取位置","tags":["i18n","javascript"],"fromNow":"2 years ago"}},"randomPost":[{"data":{"date":"March 19, 2020","title":"移动端抽奖","tags":["i18n","javascript"],"fromNow":"2 years ago"},"content":"\n## 抽奖类型\n\n- 圆形抽奖\n- 方形抽奖\n- 老虎机\n- 刮刮卡\n\n### 圆形抽奖\n\n代码如下：\n\n```javascript\n// prefix补全\nvar CSSTransform = (function () {\n  var _elementStyle = document.createElement('div').style;\n  var _vendor = (function () {\n    var vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],\n      transform,\n      i = 0,\n      l = vendors.length;\n    for (; i < l; i++) {\n      transform = vendors[i] + 'ransform';\n      if (transform in _elementStyle)\n        return vendors[i].substr(0, vendors[i].length - 1);\n    }\n    return false;\n  })();\n\n  function _prefixStyle(style) {\n    if (_vendor === false) return false;\n    if (_vendor === '') return style;\n    return _vendor + style.charAt(0).toUpperCase() + style.substr(1);\n  }\n  return _prefixStyle('transform');\n})();\n\n// 转盘旋转效果\nvar Lottery = function (el) {\n  this.running = false;\n  this.el = $(el)[0];\n  /*\n\t    旋转转盘至指定位置\n\t    参数：\n\t    giftIndex: 礼物的索引（从0开始到数组.length - 1）\n\t    endCallback：转盘旋转完成时的回调\n\t    */\n  this.rotateToGift = function (giftIndex, endCallback) {\n    if (typeof endCallback != 'function') return;\n    if (giftIndex < 0 || giftIndex > CNST_GIFTS.length - 1) return;\n    if (this.running) return;\n    this.running = true;\n    var degToRotate = (giftIndex + 1) * 45 + 360 * 3 - 22.5; //最少转3圈\n    var rotatedDeg = 0;\n    var speed = 20; //deg\n    var speedRatio = 1;\n    var _this = this;\n\n    function r() {\n      _this.el.style[CSSTransform] = 'rotate(' + -rotatedDeg + 'deg)';\n      rotatedDeg += speed * speedRatio;\n      if (rotatedDeg + 180 >= degToRotate)\n        //开始减速\n        speedRatio = (degToRotate - rotatedDeg) / 180;\n      if (rotatedDeg >= degToRotate - 0.5) {\n        rotatedDeg = degToRotate;\n        _this.el.style[CSSTransform] = 'rotate(' + -rotatedDeg + 'deg)';\n        _this.running = false;\n        endCallback();\n      } else setTimeout(r, 1000 / 24);\n    }\n    r();\n  };\n};\n```\n\n**使用方法：**\n\n```html\n<div class=\"lottery\">\n  <div class=\"lottery-bg\"></div>\n  <button id=\"btnStart\" class=\"button start\" onClick=\"startLottery()\"></button>\n</div>\n```\n\n调用方法：\n\n```javascript\n\nvar myLottery = new Lottery($(\".lottery .lottery-bg\"));//初始化转盘\nmyLottery.rotateToGift(giftIndex, function() {\n\t    //giftIndex为后端接口下发的奖品ID，function为回调函数\n}\n```\n\n待续\n","slug":"translate/移动端抽奖"},{"data":{"date":"October 19, 2020","title":"css-BFC","tags":["css"],"fromNow":"a year ago"},"content":"\n## 什么是 BFC\n\nBlock Formatting Context（块级格式化上下文）\n\n> Web 页面的可视 CSS 渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域\n\n## 布局规则\n\n- 内部的 Box 会在垂直方向一个接一个地放置\n- Box 垂直方向的距离由 margin 决定。属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠\n- 每个盒子（块盒与行盒）的 margin box 的左边，与包含块 border box 的左边相接触，即使存在浮动也是如此\n- BFC 的区域不会与 float box 重叠\n- BFC 就是页面上的一个隔离的独立容器，容器里面的子元素不会影响外面的元素。反之也是如此\n- 计算 BFC 的高度时，浮动元素也参与计算\n\n## 如何创建 BFC\n\n- 根元素或其他包含他的元素\n- 浮动元素（元素的 float 不是 none）\n- 绝对定位元素（元素具有 position 为 absolute 或 fixed）\n- 内联块（元素具有 display: inline-block）\n- 表格单元格（元素具有 display: table-cell ，HTML 表格单元格默认属性）\n- 表格标题（元素具有 display: table-caption，HTML 表格标题默认属性）\n- 具有 overflow 且值不是 visible 的块元素\n- 弹性盒子（flex 或 inline-flex）\n- ` css display: flow-root`\n- `css column-span: all`\n\n## BFC 作用\n\n- 利用 BFC 避免 margin 重叠\n- 自适应两栏布局\n- 清除浮动\n","slug":"interview/css/BFC"},{"data":{"date":"July 30, 2017","title":"css的小技巧","tags":["css"],"fromNow":"4 years ago"},"content":"\n1. 使用 CSS 复位\n\n不同浏览器有不同的自带初始样式，通常可以使用 normalize.css、tinyreset.css 进行通配初始化。\n\n```css\n*,\n*:after,\n*:before {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n```\n\n2. 继承 box-sizing\n\n```css\nhtml {\n  box-sizing: border-box;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n```\n\n3. 使用 unset 而不是重置所有属性\n4. 使用 :not() 选择器来决定表单是否显示边框\n5. 为 body 元素添加行高\n6. 為表單元素設置:focus\n7. 垂直居中任何元素\n8. 逗号分隔的列表\n9. 使用负的 nth-child 来选择元素\n10. 使用 SVG 图标\n11. 使用 “形似猫头鹰” 的选择器\n12. 使用 max-height 来建立纯 CSS 的滑块\n13. 创造格子等宽的表格\n14. 利用 Flexbox 去除多余的外边距\n15. 利用属性选择器来选择空链接\n16. 给 “默认” 链接定义样式\n17. 一致的垂直节奏\n18. 内在比例盒\n19. 为破碎图象定义样式\n20. 用 rem 来调整全局大小；用 em 来调整局部大小\n21. 隐藏没有静音、自动播放的影片\n22. 使用选择器 :root 来控制字体弹性\n23. 为更好的移动体验，为表单元素设置字体大小\n24. 使用指针事件來控制鼠标事件\n","slug":"css/小技巧-ChicksTricks"},{"data":{"date":"November 20, 2021","title":"如何在 vue 中使用 Debounce、Throttle","tags":["vue","javascript"],"description":"如input、resize、scroll、intersection observer 等事件可能发生得非常频繁，例如每秒发生几次，因此调用一个动作，比如对每个事件发出读取请求，并不是一个明智的方法。","fromNow":"25 days ago"},"content":"\n## 为什么要使用 debounce 和 throttle\n\n防抖和节流就是针对响应跟不上触发频率这类问题的两种解决方案。在给 DOM 绑定事件时，有些事件我们是无法控制触发频率的。 如鼠标移动事件 onmousemove, 滚动滚动条事件 onscroll，窗口大小改变事件 onresize，瞬间的操作都会导致这些事件会被高频触发。 如果事件的回调函数较为复杂，就会导致响应跟不上触发，出现页面卡顿，假死现象。 在实时检查输入时，如果我们绑定 onkeyup 事件发请求去服务端检查，用户输入过程中，事件的触发频率也会很高，会导致大量的请求发出，响应速度会大大跟不上触发。\n\n## 在 watcher 中使用 debounce\n\n1. 在`created`生命周期将`this.debounce`绑定到`this`上，这样`this.debounce`就可以在`created`生命周期中使用。\n2. 在`watch`函数中，使用`this.debounce`调用`debounce`函数，并传入`this.debounce`的回调函数。\n3. 在事件销毁前，使用`this.debounce`调用`clear`函数，清除定时器。\n\n```html\n<template>\n  <input v-model=\"value\" type=\"text\" />\n  <p>{{ value }}</p>\n</template>\n<script>\n  import debounce from 'lodash.debounce';\n  export default {\n    data() {\n      return {\n        value: '',\n      };\n    },\n    watch: {\n      value(...args) {\n        this.debouncedWatch(...args);\n      },\n    },\n    created() {\n      this.debouncedWatch = debounce((newValue, oldValue) => {\n        console.log('New value:', newValue);\n      }, 500);\n    },\n    beforeUnmount() {\n      this.debouncedWatch.cancel();\n    },\n  };\n</script>\n```\n\n## 使用 debounce 处理事件\n\n```html\n<template>\n  <input v-on:input=\"debouncedHandler\" type=\"text\" />\n</template>\n<script>\n  import debounce from 'lodash.debounce';\n  export default {\n    created() {\n      this.debouncedHandler = debounce((event) => {\n        console.log('New value:', event.target.value);\n      }, 500);\n    },\n    beforeUnmount() {\n      this.debouncedHandler.cancel();\n    },\n  };\n</script>\n```\n\n为什么不适用`debounce`或`throttle`直接绑定函数呢？比如：\n\n```html\n<template>\n  <input v-on:input=\"debouncedHandler\" type=\"text\" />\n</template>\n<script>\n  import debounce from 'lodash.debounce';\n  export default {\n    methods: {\n      // Don't do this!\n      debouncedHandler: debounce(function (event) {\n        console.log('New value:', event.target.value);\n      }, 500),\n    },\n  };\n</script>\n```\n\n**使用`export default { ... }`从组件导出的 options 对象，包括方法，将被组件的所有实例重用。如果网页中有 2 个或更多的组件实例，那么所有的组件都将使用相同的`debounce`或`throttle`的函数方法。**\n\n## 总结\n\n在 `vue` 中使用 `debounce` 和 `throttle` 函数，应该在 `created` 和 `beforeUnmount` 生命周期中使用，而不是在 `watch` 中使用。\n\n```html\n<template>\n  <input v-on:input=\"debouncedHandler\" type=\"text\" />\n</template>\n<script>\n  export default {\n    created() {\n      this.debouncedCallback = debounce((...args) => {\n        // The debounced\n        callback;\n      }, 500);\n    },\n    watch: {\n      value(...args) {\n        this.debouncedCallback(...args);\n      },\n    },\n  };\n</script>\n```\n","slug":"vue/debounce-throttle"},{"data":{"date":"April 3, 2021","title":"数组、字典、集合、枚举","tags":["swift"],"description":"取得成功的秘诀就是开始","fromNow":"8 months ago"},"content":"\nSwift 中复杂类型包括：\n\n- Array\n- Set\n- Tuple\n- Dictionary\n- Enums\n\n### Array\n\n> Swift 数组允许您存储相同类型的值，可以使用该值在数组中的位置来检索这些值。Swift 会强制检测元素类型，如果类型不同，会报错。\n\n```swift\n// 创建数组\nvar firstArray = [\"hello\",\"hello\",\"world\"]\nvar secondArray = [\"swift\",\"niubility\"]\n\n// 获取数组第一个元素\nprint(firstArray[0]) // hello\n\n//添加数组\nfirstArray.append(\"manon\")\nfirstArray+=[\"icu\"]\n\n// 循环数组\nfor item in firstArray{\n\tprint(item) //hell hello world manon icu\n}\n\n// 修改数组元素\nfirstArray[0] = \"swift\"\n\n// 合并数组\nfirstArray+secondArray\n\n// 计算数组元素的个数\nfirstArray.count\n\n// 判断数组是否为空\nfirstArray.isEmpty\n\n// 删除数组元素\nfirstArray.remove(at: 0)\n```\n\n### Set\n\n> 集合是用来存储类型相同且没有确定顺序的唯一的值，不允许插入已存在的值\n\n```swift\n// 创建集合\nlet firstSet = Set([\"hello\",\"world\",\"manon\",\"icu\",\"swift\"])\nlet secondSet = Set([\"just\",\"do\",\"it\"])\n\n// 访问集合\nfor item in firstSet{\n\tprint(item) //\"hello\",\"world\",\"manon\",\"icu\",\"swift\"\n}\n\n// 判断是否为空\nfirstSet.isEmpty // false\n\n// 计算集合的长度\nfirstSet.count //5\n\n// 判断是否包含某个元素\nfirstSet.contains(\"manon\") //true\n\n// 向集合添加元素\nfirstSet.insert(\"funny\")\n\n// 删除集合的元素\nfirstSet.remove(\"manon\")\n\n// 合并集合\nfirstSet.union(secondSet)\n```\n\n### Tuple\n\n> Swift 中的 tuple 允许存储不同类型的固定数量的值。创建元组后，不能从该元组中添加或删除值。\n\n```swift\n// 创建tuple\nlet firstTuple = (name: \"manon\", level: 9000, Nationality: \"china\")\n\n// 访问tuple\nfirstTuple.name // manon\n```\n\n### Dictionary\n\n> Swift 字典用来存储无序的相同类型数据的集合，Swift 字典会强制检测元素的类型，如果类型不同则会报错。 Swift 字典每个值（value）都关联唯一的键（key），键作为字典中的这个值数据的标识符。和数组中的数据项不同，字典中的数据项并没有具体顺序。我们在需要通过标识符（键）访问数据的时候使用字典，这种方法很大程度上和我们在现实世界中使用字典查字义的方法一样。 Swift 字典的 key 没有类型限制可以是整型或字符串，但必须是唯一的。\n\n```swift\n// 创建字典\nlet firstDictionary = [\"Gintama\" : \"Sakata Gintoki\", \"Haikyuu\" : \"Shoyo Hinata\"]\n\n// 访问字典\nfirstDictionary[\"Gintama\"] // Sakata Gintoki\n\n// 修改字典\nfirstDictionary.updateValue(\"manon\",forKey:Gintama)\n// 或\nfirstDictionary[\"Gintama\"] = \"manon\"\n\n// 删除字典元素\nfirstDictionary.removeValue(\"Gintama\")\n\n// 遍历字典\nfor (key,value) in firstDictionary{\n\tprint(\"字典 key \\(key) -  字典 value \\(value)\")\n}\n\n// 计算字典长度\nfirstDictionary.count\n\n// 判断字典是否为空\nfirstDictionary.isEmpty\n```\n\n### Enums\n\n> 根据 Swift 文档枚举的定义，它是“一组相关值的公共类型，使您能够在代码中以类型安全的方式处理这些值”。可以把它看作是一种特别用于 switch/conditions 的变量类型。\n\n```swift\n// 创建Enums\nenum enumname {\n   // 枚举定义放在这里\n}\n\n// 实例\n\nimport Cocoa\n\nenum DaysofaWeek {\n    case Sunday\n    case Monday\n    case TUESDAY\n    case WEDNESDAY\n    case THURSDAY\n    case FRIDAY\n    case Saturday\n}\n\nvar weekDay = DaysofaWeek.THURSDAY\nweekDay = .THURSDAY\nswitch weekDay{\n\tcase .Sunday:\n\t\tprint(\"星期天\")\n\tcase .Monday:\n\t\tprint(\"星期一\")\n\tcase .TUESDAY:\n\t\tprint(\"星期二\")\n\tcase .WEDNESDAY:\n\t\tprint(\"星期三\")\n\tcase .THURSDAY:\n\t\tprint(\"星期四\")\n\tcase .FRIDAY:\n\t\tprint(\"星期五\")\n\tcase .Saturday:\n\t\tprint(\"星期六\")\n}\n```\n","slug":"swift/100days/day02"},{"data":{"date":"May 10, 2018","title":"Boolean","tags":["javascript"],"fromNow":"4 years ago"},"content":"\nBoolean 有两个值 true/false。\n\n| 数据类型  | 转换为 true 的值 | 转换为 false 的值 |\n| --------- | ---------------- | ----------------- |\n| Boolean   | true             | false             |\n| String    | 任意飞空字符串   | 空字符串          |\n| Number    | 任何非零值       | 0 和 NaN          |\n| Object    | 任何对象         | null              |\n| Undefined |                  | undefined         |\n","slug":"javascript/base/Boolean"}]},"__N_SSG":true}